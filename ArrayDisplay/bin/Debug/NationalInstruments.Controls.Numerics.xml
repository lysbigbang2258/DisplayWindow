<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NationalInstruments.Controls.Numerics</name>
    </assembly>
    <members>
        <member name="T:NationalInstruments.Controls.Converters.DoubleToScaledDouble">
            <summary>
            Provides a conversion to and from a value to a scaled value.
            </summary>
            <remarks>
            Used in XAML to multiply a value by a constant factor in a binding.
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>4/13/2012 1:08:02 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.DoubleToScaledDouble.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Converters.DoubleToScaledDouble"/> class.
            </summary>
            <lastupdated>11/21/2011 1:03:22 PM</lastupdated>
            <updatedby>Staci Heien</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.DoubleToScaledDouble.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Converters.DoubleToScaledDouble"/> class.
            </summary>
            <param name="scaleFactor">
            The scale factor specified.
            </param>
            <lastupdated>11/21/2011 1:11:15 PM</lastupdated>
            <updatedby>Staci Heien</updatedby>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.DoubleToScaledDouble.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>Multiplies a <see cref="T:System.Double"/> value by the <see cref="P:NationalInstruments.Controls.Converters.DoubleToScaledDouble.ScaleFactor"/>.</summary>
            <param name="value">The <see cref="T:System.Double"/> value to scale.</param>
            <param name="targetType">This parameter is not used.</param>
            <param name="parameter">This parameter is not used.</param>
            <param name="culture">This parameter is not used.</param>
            <returns>A scaled <see cref="T:System.Double"/> value.</returns>
            <lastupdated>6/4/2012 1:17:06 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.DoubleToScaledDouble.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>Divides a <see cref="T:System.Double"/> value by the <see cref="P:NationalInstruments.Controls.Converters.DoubleToScaledDouble.ScaleFactor"/>.
            </summary>
            <param name="value">The <see cref="T:System.Double"/> value to un-scale.
            </param>
            <param name="targetType">This parameter is not used.
            </param>
            <param name="parameter">This parameter is not used.
            </param>
            <param name="culture">This parameter is not used.
            </param>
            <returns>An un-scaled <see cref="T:System.Double"/> value.
            </returns>
            <lastupdated>6/4/2012 1:17:06 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Converters.DoubleToScaledDouble.ScaleFactor">
            <summary>Gets or sets the scale factor used in a binding. </summary>
            <value>The default value is 1.</value>
            <lastupdated>6/4/2012 1:13:01 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Converters.NumericFillModeConverter">
            <summary>
            Converts a <see cref="T:NationalInstruments.Controls.NumericFillMode"/> to and from a <see cref="T:System.String"/> or numeric value.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.NumericFillModeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.NumericFillModeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Converters.TimeValueFormatterConverter">
            <summary>
            Provides support for converting from <see cref="T:System.String"/> to <see cref="T:NationalInstruments.Controls.Primitives.TimeValueFormatter"/>
            </summary>
            <lastupdated>2012-07-12 2:08:18 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.Converters.TimeValueFormatterConverter.TimeFormatterPrefix">
            <summary>The prefix for the string representation of a <see cref="T:NationalInstruments.Controls.Primitives.TimeValueFormatter"/>.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.TimeValueFormatterConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.TimeValueFormatterConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.TimeValueFormatterConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <inheritdoc/>
            <lastupdated>2012-07-12 1:46:24 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Converters.TimeValueFormatterConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <inheritdoc/>
            <lastupdated>2012-07-12 1:46:21 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.DateTimePickerInteractor`1">
            <exclude/><summary>Manages user interactions with <see cref="T:NationalInstruments.Controls.Primitives.DateTimePicker`1"/>.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.DateTimePickerInteractor`1.TimeFormat">
            <exclude>[INTERNAL FOR TESTING]</exclude>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DateTimePickerInteractor`1.#ctor(NationalInstruments.Controls.Internal.IDateTimePickerInteractorTarget{`0})">
            <exclude/><summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DateTimePickerInteractor`1.HandleLoaded">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DateTimePickerInteractor`1.HandleKeyDown(System.Windows.Input.Key,System.Object)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DateTimePickerInteractor`1.HandleNowButtonClick">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DateTimePickerInteractor`1.HandleCancelButtonClick">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DateTimePickerInteractor`1.HandleCommitButtonClick">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DateTimePickerInteractor`1.HandleDatePickerCalendarDisplayDateChanged">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DateTimePickerInteractor`1.HandleDatePickerCalendarSelectedDatesChanged">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DateTimePickerInteractor`1.HandleDatePickerCalendarDisplayModeChanged(System.Windows.Controls.CalendarMode,System.Windows.Controls.CalendarMode)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DateTimePickerInteractor`1.HandleDateTimeTextBoxLostFocus">
            <exclude/>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.DateTimePickerOperations`2">
            <exclude/>
            <summary>Implements the operations needed to implement the <see cref="T:NationalInstruments.Controls.Primitives.DateTimePicker`1"/>.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.IDateTimePickerOperations`1">
            <exclude/>
            <summary>Represents the operations needed to implement the <see cref="T:NationalInstruments.Controls.Primitives.DateTimePicker`1"/>.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.IDateTimePickerOperations`1.Convert(System.DateTime)">
            <exclude/><summary>Converts a <see cref="T:System.DateTime"/> value to a <typeparamref name="TValue"/>.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.IDateTimePickerOperations`1.Convert(`0)">
            <exclude/><summary>Converts a <typeparamref name="TValue"/> value to a <see cref="T:System.DateTime"/>.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.IDateTimePickerOperations`1.TryParse(System.String,`0@)">
            <exclude/><summary>Tries to parse a <typeparamref name="TValue"/> value from a string value.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.IDateTimePickerOperations`1.ToString(`0,System.String,System.IFormatProvider)">
            <exclude/><summary>Gets the string representation of a <typeparamref name="TValue"/>.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.IDateTimePickerOperations`1.Compare(`0,`0)">
            <exclude/><summary>Compares the specified values.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DateTimePickerOperations`2.Convert(System.DateTime)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DateTimePickerOperations`2.Convert(`0)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DateTimePickerOperations`2.TryParse(System.String,`0@)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DateTimePickerOperations`2.ToString(`0,System.String,System.IFormatProvider)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.DateTimePickerOperations`2.Compare(`0,`0)">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.IDateTimePickerInteractorTarget`1">
            <exclude/><summary>Interface used by <see cref="T:NationalInstruments.Controls.Internal.DateTimePickerInteractor`1"/> to interact with <see cref="T:NationalInstruments.Controls.Primitives.DateTimePicker`1"/>.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.IDateTimePickerInteractorTarget`1.Focus">
            <exclude/><summary>Sets mouse and keyboard focus on the target.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.IDateTimePickerInteractorTarget`1.TimeStampParent">
            <exclude/><summary>Gets the parent control of the target..</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.IDateTimePickerInteractorTarget`1.CurrentSelectedDate">
            <exclude/><summary>Gets the selected date of the target..</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.IDateTimePickerInteractorTarget`1.CurrentDateTime">
            <exclude/><summary>Gets the current date of the target..</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.IDateTimePickerInteractorTarget`1.CurrentDisplayDate">
            <exclude/><summary>Gets the display date of the target..</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.IDateTimePickerInteractorTarget`1.DatePickerCalendar">
            <exclude/><summary>Gets the calendar part of the target..</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.IDateTimePickerInteractorTarget`1.DateTimeTextBox">
            <exclude/><summary>Gets the text box part of the target..</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.INumericCoercionModeOperations`2">
            <exclude/>
            <summary>Interface used by <see cref="T:NationalInstruments.Controls.NumericCoercionMode"/> to interact with <see cref="T:NationalInstruments.Controls.Internal.NumericCoercionModeOperations`3"/>.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.INumericCoercionModeOperations`2.IsValidBasis(`0)">
            <exclude/><summary>Determines whether the specified value can be used as a coercion basis.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.INumericCoercionModeOperations`2.IsValidInterval(`1)">
            <exclude/><summary>Determines whether the specified value can be used as an interval.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.INumericCoercionModeOperations`2.CoerceValueToInterval(`0,`0,`1,NationalInstruments.Controls.Range{`0})">
            <exclude/><summary>Coerces a value to the specified basis and interval within the range.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.INumericCoercionModeOperations`2.DefaultBasis">
            <exclude/><summary>Gets the default coercion basis.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.INumericControlInteractorTarget">
            <exclude/>
            <summary>Interface used by <see cref="T:NationalInstruments.Controls.Internal.NumericControlInteractor"/> to interact with <see cref="T:NationalInstruments.Controls.Primitives.NumericControl`2"/>.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.INumericControlInteractorTarget.CommitValueChange">
            <exclude/><summary>Performs any pending updates to the control's value.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.INumericControlInteractorTarget.CancelValueChange">
            <exclude/><summary>Aborts any pending updates to the control's value.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.INumericControlInteractorTarget.DoMultipleIncrement(System.Int32)">
            <exclude/><summary>Increments the value of the control by the specified multiple of the control's interval.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.INumericControlInteractorTarget.IsReadOnly">
            <exclude/><summary>Gets a value indicating whether interaction is disabled on the control.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.INumericControlInteractorTarget.IsChangePending">
            <exclude/><summary>Gets a value indicating whether a change to the control's value is in progress.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.INumericControlInteractorTarget.Interactor">
            <exclude/><summary>Gets the interactor used by the control.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.INumericControlOperations`2">
            <exclude/>
            <summary>Interface used by <see cref="T:NationalInstruments.Controls.Primitives.NumericControl`2"/> to interact with <see cref="T:NationalInstruments.Controls.Internal.NumericControlOperations`3"/>.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.INumericControlOperations`2.Increment(`0,`1)">
            <exclude/><summary>Increments a value by the specified amount.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.INumericControlOperations`2.Decrement(`0,`1)">
            <exclude/><summary>Decrements a value by the specified amount.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.INumericControlOperations`2.MultipleIncrement(`0,`1,System.Int32)">
            <exclude/><summary>Increments a value by a multiple of the specified amount.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.INumericControlOperations`2.Compare(`0,`0)">
            <exclude/><summary>Compares the specified values.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.INumericControlOperations`2.Compare(`1,`1)">
            <exclude/><summary>Compares the specified offsets.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.INumericControlOperations`2.Difference(`0,`0)">
            <exclude/><summary>Takes the difference of the specified values.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.INumericControlOperations`2.DefaultValue">
            <exclude/><summary>Gets the default value for the <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value"/> on a numeric control.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.INumericControlOperations`2.DefaultInterval">
            <exclude/><summary>Gets the default value for the <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Interval"/> on a numeric control.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.INumericTextBaseInteractorTarget">
            <exclude/>
            <summary>Interface used by <see cref="T:NationalInstruments.Controls.Internal.NumericTextBaseInteractor"/> to interact with <see cref="T:NationalInstruments.Controls.Primitives.NumericTextBase`2"/>.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.INumericTextBaseInteractorTarget.CommitValueChange">
            <exclude/><summary>Commits any pending value change.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.INumericTextBaseInteractorTarget.SelectOnFocus">
            <exclude/><summary>Gets a value indicating whether to select all text when the control receives focus.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.INumericTextBaseOperations`1">
            <exclude/>
            <summary>Interface used by <see cref="T:NationalInstruments.Controls.Primitives.NumericTextBase`2"/> to interact with <see cref="T:NationalInstruments.Controls.Internal.NumericTextBaseOperations`3"/>.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.INumericTextBaseOperations`1.TryOffsetByOne(`0,System.Boolean)">
            <exclude/><summary>Adds or subtracts one from <paramref name="value"/>, if it does not cause overflow.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.INumericTextBaseOperations`1.DefaultRange">
            <exclude/><summary>Gets the default range for the control.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.INumericTextBaseOperations`1.IsContinuousDataType">
            <exclude/><summary>Gets a value indicating whether the <typeparamref name="TValue"/> is a continuous data type.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.ITimeStampTextBoxInteractorTarget`1">
            <exclude/><summary>Interface used by <see cref="T:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractor`1"/> to interact with <see cref="T:NationalInstruments.Controls.Primitives.TimeStampTextBox`2"/>.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ITimeStampTextBoxInteractorTarget`1.Focus">
            <exclude/><summary>Sets mouse and keyboard focus on the target.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.ITimeStampTextBoxInteractorTarget`1.HandleInteractiveValueCommit(`0)">
            <exclude/><summary>Commits the specified value on the target.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ITimeStampTextBoxInteractorTarget`1.InputTextBox">
            <exclude/><summary>Gets the textbox of the Target.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ITimeStampTextBoxInteractorTarget`1.DisplayKind">
            <exclude/><summary>Gets the display kind of the target.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ITimeStampTextBoxInteractorTarget`1.ValueFormatter">
            <exclude/><summary>Gets the formatter of the target.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ITimeStampTextBoxInteractorTarget`1.FormattedValue">
            <exclude/><summary>Gets the formatted value of the target.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ITimeStampTextBoxInteractorTarget`1.Value">
            <exclude/><summary>Gets the value of the target.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.ITimeStampTextBoxInteractorTarget`1.InteractionMode">
            <exclude/><summary>Gets the current InteractionModes flag from the target.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.NumericCoercionModeMultiDimensionalOperations`3">
            <exclude/>
            <summary>Implements multi-dimensional numeric coercion used by <see cref="T:NationalInstruments.Controls.NumericCoercionMode"/>.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.NumericCoercionModeMultiDimensionalOperations`3.#ctor">
            <summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Internal.NumericCoercionModeMultiDimensionalOperations`3"/> class.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.NumericCoercionModeMultiDimensionalOperations`3.IsValidBasis(`0)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.NumericCoercionModeMultiDimensionalOperations`3.IsValidInterval(`1)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.NumericCoercionModeMultiDimensionalOperations`3.CoerceValueToInterval(`0,`0,`1,NationalInstruments.Controls.Range{`0})">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.NumericCoercionModeMultiDimensionalOperations`3.DefaultBasis">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.NumericCoercionModeOperations`3">
            <exclude/>
            <summary>Implements scalar numeric coercion used by <see cref="T:NationalInstruments.Controls.NumericCoercionMode"/>.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.NumericCoercionModeOperations`3.#ctor">
            <summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Internal.NumericCoercionModeOperations`3"/> class.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.NumericCoercionModeOperations`3.IsValidBasis(`0)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.NumericCoercionModeOperations`3.IsValidInterval(`1)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.NumericCoercionModeOperations`3.CoerceValueToInterval(`0,`0,`1,NationalInstruments.Controls.Range{`0})">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.NumericCoercionModeOperations`3.DefaultBasis">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.NumericControlInteractor">
            <exclude/>
            <summary>Manages user interactions with <see cref="T:NationalInstruments.Controls.Primitives.NumericControl`2"/>.</summary>
            <lastupdated>12/14/2011 1:15:25 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.NumericControlInteractor.#ctor(NationalInstruments.Controls.Internal.INumericControlInteractorTarget)">
            <summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Internal.NumericControlInteractor"/> class for the specified target.</summary>
            <param name="target">The target numeric control.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.NumericControlInteractor.CanExecuteCommand(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <exclude/>
            <summary>Implements a <see cref="T:System.Windows.Input.CanExecuteRoutedEventHandler"/> for <see cref="T:NationalInstruments.Controls.Primitives.NumericControl`2"/>'s commands.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.NumericControlInteractor.ExecuteCommand(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <exclude/>
            <summary>Implements a <see cref="T:System.Windows.Input.ExecutedRoutedEventHandler"/> for <see cref="T:NationalInstruments.Controls.Primitives.NumericControl`2"/>'s commands.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.NumericControlInteractor.ExecuteScrollWheelInteraction(System.Object,System.Windows.Input.MouseWheelEventArgs)">
            <exclude/>
            <summary>Implements a <see cref="T:System.Windows.Input.MouseWheelEventHandler"/> for <see cref="T:NationalInstruments.Controls.Primitives.NumericControl`2"/>'s mouse wheel interaction.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.NumericControlInteractor.ExecuteKeyInteraction(System.Windows.Input.Key)">
            <exclude/>
            <summary>Implements a handler for <see cref="T:NationalInstruments.Controls.Primitives.NumericControl`2"/>'s key down interaction.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.NumericControlInteractor.MatchesGenericMakerSpecialization``2(System.Type,System.Type,System.Type)">
            <exclude/>
            <summary>Tests whether the type arguments for the numeric control match the specified target generic maker specialization values.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.NumericControlInteractor.GetNumericControlOperations``2">
            <exclude/>
            <summary>Creates an <see cref="T:NationalInstruments.Controls.Internal.INumericCoercionModeOperations`2"/> instance for the specified types.</summary>
            <typeparam name="TValue">The value type.</typeparam>
            <typeparam name="TOffset">The offset type.</typeparam>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.NumericControlInteractor.EnableKeyboard">
            <summary>
            Gets or sets a value indicating whether <see cref="P:NationalInstruments.Controls.Primitives.ControlCommands.IncrementCommand"/>
            or <see cref="P:NationalInstruments.Controls.Primitives.ControlCommands.DecrementCommand"/> should perform the interaction.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.NumericControlInteractor.EnableScrollWheel">
            <summary>Gets or sets a value indicating whether <see cref="M:NationalInstruments.Controls.Internal.NumericControlInteractor.ExecuteScrollWheelInteraction(System.Object,System.Windows.Input.MouseWheelEventArgs)"/> should perform the interaction.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.NumericControlInteractor.IsReadOnly">
            <summary>Gets a value indicating whether the target is read only.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.NumericControlInteractor.IsKeyboardInteractionEnabled">
            <summary>
            Gets a value indicating whether <see cref="P:NationalInstruments.Controls.Primitives.ControlCommands.IncrementCommand"/>
            or <see cref="P:NationalInstruments.Controls.Primitives.ControlCommands.DecrementCommand"/> should perform the interaction,
            as indicated by <see cref="M:NationalInstruments.Controls.Internal.NumericControlInteractor.CanExecuteCommand(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)"/>.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.NumericControlInteractor.IsScrollWheelInteractionEnabled">
            <summary>Gets a value indicating whether <see cref="M:NationalInstruments.Controls.Internal.NumericControlInteractor.ExecuteScrollWheelInteraction(System.Object,System.Windows.Input.MouseWheelEventArgs)"/> will perform the interaction when the <see cref="E:System.Windows.UIElement.MouseWheel"/> event is fired.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.NumericControlOperations`3">
            <exclude/>
            <summary>
            Performs the strongly-typed numeric operations required by <see cref="T:NationalInstruments.Controls.Primitives.NumericControl`2"/>.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.NumericControlOperations`3.#ctor">
            <summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Internal.NumericControlOperations`3"/> class.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.NumericControlOperations`3.Increment(`0,`1)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.NumericControlOperations`3.Decrement(`0,`1)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.NumericControlOperations`3.Compare(`0,`0)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.NumericControlOperations`3.Compare(`1,`1)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.NumericControlOperations`3.Difference(`0,`0)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.NumericControlOperations`3.MultipleIncrement(`0,`1,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.NumericControlOperations`3.DefaultValue">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.NumericControlOperations`3.DefaultInterval">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.NumericTextBaseInteractor">
            <exclude/>
            <summary>Managers user interactions with <see cref="T:NationalInstruments.Controls.Primitives.NumericTextBase`2"/>.</summary>
            <content>[partial class - CAR #397339]</content>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.NumericTextBaseInteractor.#ctor(NationalInstruments.Controls.Internal.INumericTextBaseInteractorTarget)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.NumericTextBaseInteractor.OnValueInputGotKeyboardFocus(System.Object,System.Windows.RoutedEventArgs)">
            <exclude/>
            <summary>Implements a <see cref="T:System.Windows.RoutedEventHandler"/> for tracking edit mode of <see cref="T:NationalInstruments.Controls.Primitives.NumericTextBase`2"/>'s value input control.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.NumericTextBaseInteractor.OnValueInputLostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <exclude/>
            <summary>Implements a <see cref="T:System.Windows.RoutedEventHandler"/> for tracking edit mode of <see cref="T:NationalInstruments.Controls.Primitives.NumericTextBase`2"/>'s value input control.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.NumericTextBaseInteractor.SetTextInteractively(System.String)">
            <exclude>[INTERNAL FOR TESTING]</exclude>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.NumericTextBaseInteractor.OnValueInputGotFocusCore">
            <summary>
            INTERNAL FOR TESTING
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.NumericTextBaseInteractor.OnValueInputMouseDoubleClick(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <exclude/>
            <summary>Implements a <see cref="T:System.Windows.RoutedEventHandler"/> for handling mouse doubleclick of its parent's value input control.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.NumericTextBaseInteractor.ValueInput">
            <summary>Gets or sets the value input control that the interactor should use for edit tracking.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.NumericTextBaseInteractor.DoubleClickSelectAll">
            <summary>
            If true, when the value input is double clicked, select all the text.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.NumericTextBaseInteractor.Text">
            <summary>Gets or sets the text of the value input control, or <see langword="null"/> if the value input control has not been assigned.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.NumericTextBaseInteractor.IsEditing">
            <summary>Gets a value indicating whether the user is editing the value input of the <see cref="T:NationalInstruments.Controls.Primitives.NumericTextBase`2"/>.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.NumericTextBaseInteractor.CommitRequired">
            <summary>Gets a value indicating whether the user has edited the value input of the <see cref="T:NationalInstruments.Controls.Primitives.NumericTextBase`2"/>.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.NumericTextBaseOperations`3">
            <exclude/>
            <summary>
            Performs the strongly-typed numeric operations required by <see cref="T:NationalInstruments.Controls.Primitives.NumericTextBase`2"/>.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.NumericTextBaseOperations`3.#ctor">
            <summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.NumericTextBaseOperations`3.TryOffsetByOne(`0,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.NumericTextBaseOperations`3.DefaultRange">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.NumericTextBaseOperations`3.IsContinuousDataType">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.TimeFieldToken">
            <exclude/>
            <summary>A structure that contains a token of formatting info for date/time types.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.TimeFieldToken.StringFormatOptions">
            <exclude/>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.TimeFieldToken.OutputStringLength">
            <exclude/>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.TimeFieldToken.FieldString">
            <exclude/>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.TimeFieldToken.TimeFieldFormat">
            <exclude/>
        </member>
        <member name="F:NationalInstruments.Controls.Internal.TimeFieldToken.IsDecorationField">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TimeFieldToken.#ctor(System.String,System.String,System.Boolean)">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TimeFieldToken.#ctor(System.Int32,System.String,System.String,System.Boolean)">
            <exclude/>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractor`1">
            <exclude/><summary>Manages user interactions with <see cref="T:NationalInstruments.Controls.Primitives.TimeStampTextBox`2"/>.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractor`1.#ctor(NationalInstruments.Controls.Internal.ITimeStampTextBoxInteractorTarget{`0})">
            <exclude/>
            <summary>Initializes an instance of the TimeStampTextBoxInteractor.</summary>
            <param name="target">The target control.</param>
            <lastupdated>2012-07-12 2:24:41 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractor`1.HandleValueInputKeyboardLostFocus">
            <exclude/>
            <summary>
            Logic to execute when the <see cref="P:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractor`1.Target"/>'s text box loses focus.
            </summary>
            <lastupdated>2012-07-12 1:48:40 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractor`1.HandleValueInputPreviewMouseDown">
            <exclude/>
            <summary>
            Logic to execute just before a <see cref="P:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractor`1.Target"/>'s text box received a mouse down event.
            </summary>
            <lastupdated>2012-07-12 2:22:20 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractor`1.HandleValueInputKeyDown(System.Windows.Input.Key)">
            <exclude/>
            <summary>
            Logic to execute when the <see cref="P:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractor`1.Target"/>'s text box received a key press event.
            </summary>
            <lastupdated>2012-07-12 1:48:56 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractor`1.HandleValueInputSelectionChanged">
            <exclude/>
            <summary>
            Logic to execute when the <see cref="P:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractor`1.Target"/>'s text box has its text selection changed.
            </summary>
            <lastupdated>2012-07-12 2:03:51 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractor`1.HandleValueInputPreviewLostKeyboardFocus">
            <exclude/>
            <summary>
            Logic to execute just before a <see cref="P:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractor`1.Target"/>'s text box loses focus.
            </summary>
            <lastupdated>2012-07-12 2:07:18 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractor`1.HandleValueInputPreviewKeyDown(System.Windows.Input.Key)">
            <exclude/>
            <summary>
            Logic to execute when the <see cref="P:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractor`1.Target"/>'s text box receives a preview key down event.
            </summary>
            <lastupdated>2012-07-12 2:06:31 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractor`1.HandleValueInputCommitting(`0)">
            <exclude/>
            <summary>
            Executes code related to updating the ValueInput text box on the TimeStamp. This allows us to intercept the value and maintain unused date or time fields.
            </summary>
            <param name="newValue">The new value being committed.</param>
            <returns>The potentially modified value.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractor`1.ApplyKind(`0,System.DateTimeKind)">
            <summary>
            Applies a DateTime Kind property matching the provided one if the current value is Unspecified.
            </summary>
            <param name="currentValue">The current time value.</param>
            <param name="dateTimeKind">The Kind to apply.</param>
            <returns>The updated time value.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractor`1.GetDisplayValue(`0,System.DateTimeKind)">
            <exclude/>
            <summary>
            Gets the display value for the specified coerced value and display kind.
            </summary>
            <param name="value">The coerced value.</param>
            <param name="displayKind">The desired display kind.</param>
            <returns>The <paramref name="value"/> with <paramref name="displayKind"/> applied.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractor`1.IsTimeFormatCharacter(System.Char,System.Boolean)">
            <exclude/>
            <summary>
            Checks if a given character is considered a character that represents a time format.
            </summary>
            <param name="characterToCheck">The character to check</param>
            <param name="isEscaped">Whether or not the character was previously 'escaped'</param>
            <returns>Returns true if the character is a time character. Otherwise, returns false.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractor`1.ChangeSingleTimeField(System.String,System.Int32,System.Boolean,`0)">
            <exclude/>
            <summary>
            Changes the Value property of the target by one.
            </summary>
            <param name="format">
            The string that defines the format of the value.
            </param>
            <param name="fieldLength">
            The string length of the field to be modified.
            </param>
            <param name="increaseTime">
            A boolean representing whether to increase or decrease time. Increase time is <see langword="true"/>.
            </param>
            <param name="value">
            The value to change by one time field unit.
            </param>
            <lastupdated>2012-07-12 2:19:43 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractor`1.IncreaseSingleTimeField(System.String,System.Int32,System.Boolean,`0)">
            <summary>
            Gets a new date time object with the value of it increased by one time field unit.
            </summary>
            <param name="format">The string that defines the format of the value.</param>
            <param name="fieldLength">The string length of the field to be modified.</param>
            <param name="increaseTime">A boolean representing whether to increase or decrease time. Increase time is <see langword="true"/>.</param>
            <param name="value">The value to change by one time field unit.</param>
            <returns>A new date time object with the updated value.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractor`1.CopyUnparsedTimeFields(`0,`0,System.Collections.Generic.IList{System.Char})">
            <summary>
            When called, populates the parsedValue with missing date/time info from the original value.
            </summary>
            <param name="originalValue">The original value of the control before parsing.</param>
            <param name="parsedValue">The new value from the control.</param>
            <param name="remainingFormatCharacters">The collection of format characters not in the current format.</param>
            <returns>A date/time object containing the values from the missing fields from the parsedValue.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractor`1.InvalidateTokens">
            <summary>
            Clear the field information so that we will rebuild next time
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractor`1.RebuildFormatterInfo">
            <summary>
            Updates the necessary fields strings for maintaining unused date or time info.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractor`1.Target">
            <exclude/>
            <summary>
            The target of the interactor.
            </summary>
            <value>
            An ITimeStampTextBoxInteractorTarget representing the target for which the interactor operates.
            </value>
            <lastupdated>2012-07-12 2:11:00 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractor`1.CheckForSelectionChanged">
            <exclude>[INTERNAL FOR TESTING]</exclude>
        </member>
        <member name="P:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractor`1.TypingInProgress">
            <exclude>[INTERNAL FOR TESTING]</exclude>
        </member>
        <member name="T:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractorDateTime">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractorDateTime.#ctor(NationalInstruments.Controls.Internal.ITimeStampTextBoxInteractorTarget{System.DateTime})">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractorDateTime.ApplyKind(System.DateTime,System.DateTimeKind)">
            <inheritdoc />
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractorDateTime.GetDisplayValue(System.DateTime,System.DateTimeKind)">
            <inheritdoc />
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractorDateTime.ChangeSingleTimeField(System.String,System.Int32,System.Boolean,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractorDateTime.IncreaseSingleTimeField(System.String,System.Int32,System.Boolean,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractorDateTime.CopyUnparsedTimeFields(System.DateTime,System.DateTime,System.Collections.Generic.IList{System.Char})">
            <inheritdoc />
        </member>
        <member name="T:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractorPrecisionDateTime">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractorPrecisionDateTime.#ctor(NationalInstruments.Controls.Internal.ITimeStampTextBoxInteractorTarget{NationalInstruments.PrecisionDateTime})">
            <exclude/>
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractorPrecisionDateTime.ApplyKind(NationalInstruments.PrecisionDateTime,System.DateTimeKind)">
            <inheritdoc />
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractorPrecisionDateTime.GetDisplayValue(NationalInstruments.PrecisionDateTime,System.DateTimeKind)">
            <inheritdoc />
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractorPrecisionDateTime.ChangeSingleTimeField(System.String,System.Int32,System.Boolean,NationalInstruments.PrecisionDateTime)">
            <inheritdoc />
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractorPrecisionDateTime.IncreaseSingleTimeField(System.String,System.Int32,System.Boolean,NationalInstruments.PrecisionDateTime)">
            <inheritdoc />
        </member>
        <member name="M:NationalInstruments.Controls.Internal.TimeStampTextBoxInteractorPrecisionDateTime.CopyUnparsedTimeFields(NationalInstruments.PrecisionDateTime,NationalInstruments.PrecisionDateTime,System.Collections.Generic.IList{System.Char})">
            <inheritdoc />
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.ComboBoxContentDisplay">
            <exclude/>
            <summary>
            Represents a control that determines which content to display based on where the content is located in a <see cref="T:System.Windows.Controls.ComboBox"/>.
            </summary>
            <remarks>Use <see cref="P:NationalInstruments.Controls.Primitives.ComboBoxContentDisplay.ItemContent" crefType="Unqualified"/>
             and <see cref="P:NationalInstruments.Controls.Primitives.ComboBoxContentDisplay.SelectionContent" crefType="Unqualified"/> to determine the items that are displayed in the <see cref="T:System.Windows.Controls.ComboBox"/>.
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>5/4/2012 2:58:17 PM</lastupdated>
            <updatedby>LabVIEW</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.ComboBoxContentDisplay.SelectionContentProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.ComboBoxContentDisplay.SelectionContent'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.ComboBoxContentDisplay.SelectionContent'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.ComboBoxContentDisplay.ItemContentProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.ComboBoxContentDisplay.ItemContent'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.ComboBoxContentDisplay.ItemContent'/> dependency property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ComboBoxContentDisplay.OnApplyTemplate">
            <inheritdoc cref="M:System.Windows.FrameworkElement.OnApplyTemplate"/>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.ComboBoxContentDisplay.SelectionContent">
            <summary>Gets or sets the content that is displayed in the selection area of the combo box.</summary><value>
The content that is displayed in the selection area of the <see cref="T:System.Windows.Controls.ComboBox"/>.
The default value is <see langword="null"/>.
</value><lastupdated>6/8/2012 2:08:07 PM</lastupdated><updatedby>Aaron Cederquist</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.ComboBoxContentDisplay.ItemContent">
            <summary>Gets or sets the list of items that is displayed in the combo box.</summary><value>The content that is displayed in the list of drop down items in the <see cref="T:System.Windows.Controls.ComboBox"/>. The default value is a new 
<see cref="P:NationalInstruments.Controls.Primitives.ComboBoxContentDisplay.ItemContent" crefType="Unqualified"/> object.</value><lastupdated>4/13/2012 1:22:23 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.ComboBoxContentDisplay.ContentPresenter">
            <summary>
            Gets the <see cref="P:NationalInstruments.Controls.Primitives.ComboBoxContentDisplay.ContentPresenter"/> responsible for displaying the appropriate content.
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.DateTimePicker`1">
            <summary>
            Represents a user interface for selecting a date and time.
            </summary>
            <typeparam name="TValue">The type of data held by the control.</typeparam>
            <lastupdated>2/29/12 8:42:51 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.DateTimePicker`1.LogCategory">
            <summary>Log category for <see cref="T:NationalInstruments.Controls.Primitives.DateTimePicker`1"/> log messages.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.DateTimePicker`1.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <inheritdoc/>
            <lastupdated>2/29/12 8:40:11 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.DateTimePicker`1.CurrentDateTimeProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.DateTimePicker`1.CurrentDateTime'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.DateTimePicker`1.CurrentDateTime'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.DateTimePicker`1.CurrentDisplayDateProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.DateTimePicker`1.CurrentDisplayDate'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.DateTimePicker`1.CurrentDisplayDate'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.DateTimePicker`1.CurrentSelectedDateProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.DateTimePicker`1.CurrentSelectedDate'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.DateTimePicker`1.CurrentSelectedDate'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.DateTimePicker`1.TimeStampParentProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.DateTimePicker`1.TimeStampParent'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.DateTimePicker`1.TimeStampParent'/> dependency property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.DateTimePicker`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.DateTimePicker`1"/> class.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.DateTimePicker`1.OnApplyTemplate">
            <inheritdoc cref="M:System.Windows.FrameworkElement.OnApplyTemplate"/>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.DateTimePicker`1.Interactor">
            <!-- No matching elements were found for the following include tag --><include file="Documentation/DateTimePicker`TValue.xml" path="/doc/member[@name=&quot;Interactor&quot;]/*"/>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.DateTimePicker`1.CurrentDateTime">
            <summary>Represents the current date and time selected on the DateTimePicker.</summary><value>A TValue object representing the currently selected date and time.</value><lastupdated>2012-03-22 1:15:53 PM</lastupdated><updatedby>Jeff Loveless</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.DateTimePicker`1.CurrentDisplayDate">
            <summary>The currently displayed date in the Calendar control on the DateTimePicker.</summary><value>An instance of TValue.</value><lastupdated>2012-03-22 1:40:10 PM</lastupdated><updatedby>Jeff Loveless</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.DateTimePicker`1.CurrentSelectedDate">
            <summary>The currently selected date in the Calendar control on the DateTimePicker.</summary><value>An instance of TValue.</value><lastupdated>2012-03-22 1:40:18 PM</lastupdated><updatedby>Jeff Loveless</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.DateTimePicker`1.TimeStampParent">
            <summary>The parent control of the DateTimePicker.</summary><value>An ITimeStampTextBox{TValue} instance that is the parent of the DateTimePicker.</value><lastupdated>2012-03-22 1:02:01 PM</lastupdated><updatedby>Jeff Loveless</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.DateTimePicker`1.CommitButton">
            <summary>A template part for a button for accepting the current date and time selected.</summary><value>A button object.</value><lastupdated>2012-03-22 1:11:38 PM</lastupdated><updatedby>Jeff Loveless</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.DateTimePicker`1.CancelButton">
            <summary>A template part for a button for canceling the current date setting process.</summary><value>A button object.</value><lastupdated>2012-07-17 10:31:14 AM</lastupdated><updatedby>Jeff Loveless</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.DateTimePicker`1.NowButton">
            <summary>A template part for a button for setting the DateTimePicker's CurrentDateTime.</summary><value>A button object.</value><lastupdated>2012-03-22 1:10:58 PM</lastupdated><updatedby>Jeff Loveless</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.DateTimePicker`1.DateTimeTextBox">
            <summary>A template part representing the text box in which the date and time are displayed on the control.</summary><value>A text box object.</value><lastupdated>2012-03-22 1:22:02 PM</lastupdated><updatedby>Jeff Loveless</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.DateTimePicker`1.DatePickerCalendar">
            <summary>A template part representing the calendar in which the date and time are selected.</summary><value>A calendar object.</value><lastupdated>2012-03-22 1:22:02 PM</lastupdated><updatedby>Jeff Loveless</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.DateTimePickerDateTime">
            <summary>
            Represents a DateTimePicker of type DateTime.
            </summary>
            <lastupdated>2/29/12 8:39:14 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.DateTimePickerPrecisionDateTime">
            <summary>
            Represents a DateTimePicker of type PrecisionDateTime.
            </summary>
            <lastupdated>2/29/12 8:39:05 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.ILinearNumericPointerControl">
            <summary>
            Defines the display properties for all Measurement Studio Windows Presentation Foundation (WPF) controls that display numeric values using a pointer and linear scale.
            </summary>
            <lastupdated>2014-09-18 2:05:18 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.INumericPointerControl">
            <summary>
            Defines the interface for all Measurement Studio Windows Presentation Foundation (WPF) controls that display numeric values using a pointer and scale.
            </summary>
            <remarks>
            You can use <see cref="P:NationalInstruments.Controls.Primitives.INumericPointerControl.CoercionMode"/> to get or set the coercion mode of the control.
            <see cref="P:NationalInstruments.Controls.Primitives.INumericPointerControl.InteractionMode"/> determines the modes in which the end user has the ability to interactively change the value of the control.
            You can use <see cref="P:NationalInstruments.Controls.Primitives.INumericPointerControl.MechanicalAction"/> to determine when the value of the control updates during a user interaction.
            </remarks>
            <lastupdated>4/19/2012 4:11:34 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.INumericPointerControl.CoercionMode">
            <summary>
            Gets or sets the coercion mode of the control.
            </summary>
            <value>The default value depends on the implementor.</value>
            <lastupdated>6/5/2012 5:00:00 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.INumericPointerControl.InteractionMode">
            <summary>
            Gets or sets the modes in which you can interactively change the value of the control at run time.
            </summary>
            <value>The default value depends on the implementor.</value>
            <lastupdated>6/5/2012 5:00:00 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.INumericPointerControl.MechanicalAction">
            <summary>
            Gets or sets when and how the value of the control updates during an interaction at run time.
            </summary>
            <value>The default value depends on the implementor.</value>
            <lastupdated>6/8/2012 2:59:00 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.INumericPointerControl.Scale">
            <summary>
            Gets or sets the scale that is used by the control.
            </summary>
            <value>The default value depends on the implementor.</value>
            <lastupdated>6/5/2012 5:00:00 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.INumericPointerControl.PointerBrush">
            <summary>Gets or sets the brush used to draw the pointer part of a control.</summary>
            <value>The default value depends on the implementor.</value>
            <lastupdated>2014-09-18 2:05:18 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.ILinearNumericPointerControl.IsInverted">
            <summary>Gets or sets a value specifying whether the scale is drawn as inverted.</summary>
            <value>The default value depends on the implementor.</value>
            <lastupdated>2014-09-18 2:05:18 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.ILinearNumericPointerControl.Orientation">
            <summary>Gets or sets whether the control displays horizontally or vertically.</summary>
            <value>The default value depends on the implementor.</value>
            <lastupdated>2014-09-18 2:05:18 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.ILinearNumericPointerControl.Fill">
            <summary>Gets or sets the brush used to paint the track.</summary>
            <value>The default value depends on the implementor.</value>
            <lastupdated>2014-09-18 2:05:18 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.ILinearNumericPointerControl.FillMode">
            <summary>Gets or sets the mode used to paint the track.</summary>
            <value>The default value depends on the implementor.</value>
            <lastupdated>2014-09-18 2:05:18 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.ILinearNumericPointerControl.ScaleLocation">
            <summary>Gets or sets the location of the scale on the control, either near or far.</summary>
            <value>The default value depends on the implementor.</value>
            <lastupdated>2014-09-18 2:05:18 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.INumericControl`2">
            <summary>
            Defines the interface for all Measurement Studio Windows Presentation Foundation (WPF) controls that display a numeric value. 
            </summary>
            <typeparam name="TValue">The type of data held by the control.</typeparam>
            <typeparam name="TOffset">The type of data used for an offset by the control.</typeparam>
            <remarks>
            Use the <see cref="P:NationalInstruments.Controls.Primitives.INumericControl`2.ActualRange" crefType="Unqualified"/>
             property to determine the range of values that can be displayed by the control. 
            Use 
            <see cref="P:NationalInstruments.Controls.Primitives.INumericControl`2.CoercedValue" crefType="Unqualified"/>
             to get the adjusted value displayed by the control, which has been coerced to fall within range.
            <see cref="P:NationalInstruments.Controls.Primitives.INumericControl`2.Interval" crefType="Unqualified"/> gets or sets
             the interval amount of the control, and 
            <see cref="P:NationalInstruments.Controls.Primitives.INumericControl`2.Value" crefType="Unqualified"/> gets or sets the value of the control.
            </remarks>
            <lastupdated>4/19/2012 4:05:56 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.INumericControl`2.Value">
            <summary>
            Gets or sets the value of the control.
            </summary>
            <value>
            The value.
            </value>
            <lastupdated>6/5/2012 5:00:00 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.INumericControl`2.CoercedValue">
            <summary>
            Gets the adjusted value displayed by the control, coerced to fall within range.
            </summary>
            <value>
            The coerced value.
            </value>
            <lastupdated>6/5/2012 5:00:00 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.INumericControl`2.ActualRange">
            <summary>
            Gets the range of values that can be displayed by the control.
            </summary>
            <value>
            The default value depends on the implementor.
            </value>
            <lastupdated>6/5/2012 5:00:00 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.INumericControl`2.Interval">
            <summary>
            Gets or sets the interval amount of the control.
            </summary>
            <value>
            The default value depends on the implementor.
            </value>
            <lastupdated>6/5/2012 5:00:00 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.INumericPointerControl`2">
            <summary>
            Defines the interface for all Measurement Studio Windows Presentation Foundation (WPF) controls that display numeric values using a pointer and scale.
            </summary>
            <typeparam name="TValue">The type of data held by the control.</typeparam>
            <typeparam name="TOffset">The type of data used for an offset by the control.</typeparam>
            <remarks>
            You can use <see cref="P:NationalInstruments.Controls.Primitives.INumericPointerControl`2.Range"/> to get or set the range of the control.
            </remarks>
            <lastupdated>4/19/2012 4:11:34 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.INumericPointerControl`2.Range">
            <summary>
            Gets or sets the range of values that can be displayed by the control.
            </summary>
            <value>The default value depends on the implementor.</value>
            <lastupdated>6/5/2012 5:00:00 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.INumericScale">
            <summary>
            Defines the interface for all Measurement Studio Windows Presentation Foundation (WPF) numeric scales.
            </summary>
            <remarks>
            Use <see cref="M:NationalInstruments.Controls.Primitives.INumericScale.GetDivisions``1(System.Object)"/> to get the current divisions on a scale.
            <para>
            <see cref="M:NationalInstruments.Controls.Primitives.INumericScale.CleanScale(System.Object)"/> is used by numeric pointer controls to clean all references to the scale from the owner control.
            </para>
            </remarks>
            <lastupdated>4/19/2012 4:17:52 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.INumericScale.GetDivisions``1(System.Object)">
            <summary>
            Gets the current divisions on a scale.
            </summary>
            <param name="context">
            The owner of the scale.
            </param>
            <typeparam name="TData">
            The type of the data used on the scale.
            </typeparam>
            <returns>
            An <see cref="T:System.Collections.Generic.IList`1"/> of all of the divisions on the scale.
            </returns>
            <lastupdated>4/19/2012 4:19:41 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.INumericScale.CleanScale(System.Object)">
            <summary>
            Cleans all references to the scale from the owner control
            </summary>
            <param name="context">
            The owner control of the scale.
            </param>
            <remarks>
            This method should be called on an unused scale whenever it is removed from an owner control.
            </remarks>
            <lastupdated>4/19/2012 4:18:47 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.IRadialNumericPointerControl">
            <summary>
            Defines the display properties for all Measurement Studio Windows Presentation Foundation (WPF) controls that display numeric values using a pointer and radial scale.
            </summary>
            <lastupdated>2014-09-18 2:05:18 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.IRadialNumericPointerControl.ScaleArc">
            <summary>Gets or sets the definition of the layout of the scale of this control.</summary>
            <value>The default value depends on the implementor.</value>
            <lastupdated>2014-09-18 2:05:18 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.ITimeStampTextBox`1">
            <summary>
            Provides an interface for TimeStampTextBoxes.
            </summary>
            <typeparam name="TValue">
            The type of data held by the control.
            </typeparam>
            <lastupdated>2/29/12 8:31:01 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.ITimeStampTextBox`1.ChangeValue(`0)">
            <summary>
            Changes the value of the target.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.ITimeStampTextBox`1.IsPopupOpen">
            <summary>Gets or sets a value indicating whether the Popup template part is currently visible.</summary>
            <value>A value indicating whether the Popup template part is currently visible.</value>
            <lastupdated>2/29/12 8:31:44 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.ITimeStampTextBox`1.Value">
            <summary>Gets or sets the value on the control.</summary>
            <value>The value on the control.</value>
            <lastupdated>2/29/12 8:32:24 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.LinearNumericPointer`2">
            <summary>
            Represents a control designed to indicate and manipulate a single numeric value through the use of a sliding element that moves back and forth between two values of a range across a straight line.
            </summary>
            <typeparam name="TValue">The type of the numeric value this control presents.</typeparam>
            <typeparam name="TOffset">The type of data used for an offset by the control.</typeparam>
            <remarks>
            This is the base class of numeric pointers with straight scales and an orientation, such as
            <see cref="T:NationalInstruments.Controls.Tank`1"/> and <see cref="T:NationalInstruments.Controls.Slider`1"/>. The appearance of the scale can be
            be customized by setting <see cref="P:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.Fill"/>,
            <see cref="P:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.Orientation"/>,
            <see cref="P:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.ScaleLocation"/> and
            <see cref="P:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.IsInverted"/>.
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>6/5/2012 5:00:00 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
            <content>[partial class - CAR #397339]</content>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.NumericPointer`2">
            <summary>
            Represents a control designed to indicate and manipulate a single numeric value through use of a sliding element that moves back and forth between two values of a range.
            </summary>
            <typeparam name="TValue">The type of the numeric value this control presents.</typeparam>
            <typeparam name="TOffset">The type of data used for an offset by the control.</typeparam>
            <threadsafety safety="unsafe"/>
            <remarks>
            This is the base class of both <see cref="T:NationalInstruments.Controls.Primitives.LinearNumericPointer`2"/> and <see cref="T:NationalInstruments.Controls.Primitives.RadialNumericPointer`2"/>.
            It builds on <see cref="T:NationalInstruments.Controls.Primitives.NumericControl`2"/> by adding the ability to show and interact with a
            <see cref="P:NationalInstruments.Controls.Primitives.NumericPointer`2.PointerValue"/> along a <see cref="P:NationalInstruments.Controls.Primitives.NumericPointer`2.Range"/>.
            The interaction of <see cref="P:NationalInstruments.Controls.Primitives.NumericPointer`2.PointerValue"/>,
            <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value"/>, and <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.CoercedValue"/>
            is determined by the <see cref="P:NationalInstruments.Controls.Primitives.NumericPointer`2.MechanicalAction"/> and
            <see cref="P:NationalInstruments.Controls.Primitives.NumericPointer`2.CoercionMode"/>. The manner in which the user can interact
            with the pointer is determined by <see cref="P:NationalInstruments.Controls.Primitives.NumericPointer`2.InteractionMode"/>.
            The visual appearance of the scale can be adjusted by setting <see cref="P:NationalInstruments.Controls.Primitives.NumericPointer`2.Scale"/>.
            </remarks>
            <lastupdated>6/5/2012 5:00:00 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
            <content>[partial class - CAR #397339]</content>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.NumericControl`2">
            <summary>
            Represents a control that can display and manipulate numeric values.
            </summary>
            <typeparam name="TValue">The type of data held by the control.</typeparam>
            <typeparam name="TOffset">The type of data used for an offset by the control.</typeparam>
            <threadsafety safety="unsafe"/>
            <remarks>
            This is the base class for all numeric controls. It provides the basic implementation of a
            <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value"/>, which is coerced to
            <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.CoercedValue"/> based on the <see cref="P:NationalInstruments.Controls.Primitives.INumericControl`2.ActualRange"/>
            and any other criteria set by the derived class. The value can also be incremented and decremented
            according to the <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Interval"/>.
            </remarks>
            <lastupdated>6/5/2012 5:00:00 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
            <content>[partial class - CAR #397339]</content>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericControl`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.NumericControl`2" crefType="Unqualified"/> class.
            </summary>
            <lastupdated>4/17/2012 4:28:51 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericControl`2.MoveNext">
            <summary>
            Increases <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.CoercedValue" crefType="Unqualified"/>
             by the same amount as <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Interval"/> and assigns
             the result to <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value"/>.
            </summary>
            <lastupdated>4/17/2012 4:27:58 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericControl`2.MovePrevious">
            <summary>
            Decreases <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.CoercedValue"/> by the same
            amount as <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Interval"/> and assigns the result
             to <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value"/>.
            </summary>
            <lastupdated>4/17/2012 4:28:36 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericControl`2.IncrementByMultiple(System.Int32,NationalInstruments.Controls.PropertyChangeSource)">
            <summary>
            Increases or decreases the coerced value
            by the specified multiple of <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Interval"/> and assigns
            the result to <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value"/>.
            </summary>
            <param name="multiple">The multiple by which the <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Interval"/> is multiplied.</param>
            <param name="changeSource">The source of the change.</param>
            <remarks>
            This method is called by derived classes to perform an increment or decrement using multiples of <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Interval"/>.
            The new value is updated using <see cref="M:NationalInstruments.Controls.Primitives.NumericControl`2.ChangeValue(`0,NationalInstruments.Controls.PropertyChangeSource)"/>.
            <para>This method calls <see cref="M:NationalInstruments.Controls.Primitives.NumericControl`2.CommitValueChange"/> before updating the value.</para>
            </remarks>
            <lastupdated>4/17/2012 3:53:02 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericControl`2.GetMultipleIncrementValue(`0,System.Int32)">
            <summary>
            Increases or decreases a value by the specified multiple.
            </summary>
            <remarks>
            The default implementation increases or decreases <paramref name="value"/> by the specified multiple of
            <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Interval" crefType="Unqualified"/> and returns the result.
            </remarks>
            <param name="value">The value to adjust.</param>
            <param name="multiple">The multiple used to adjust <paramref name="value"/>.</param>
            <returns>The new value.</returns>
            <lastupdated>6/6/2012 6:44:04 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericControl`2.ChangeValue(`0,NationalInstruments.Controls.PropertyChangeSource)">
            <summary>
            Changes <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value" crefType="Unqualified"/>, after calling
            <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.CoercedValue" crefType="Unqualified"/> and raising the
            <see cref="E:NationalInstruments.Controls.Primitives.NumericControl`2.ValueChanging" crefType="Unqualified"/> event.
            </summary>
            <param name="newValue">The new value to assign to <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value" crefType="Unqualified"/>,
             after it has been coerced.</param>
            <param name="changeSource">The source of the change.</param>
            <remarks>
            This method is called by a derived class to change <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value" crefType="Unqualified"/>.
             An update to <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value" crefType="Unqualified"/> results in a
            <see cref="E:NationalInstruments.Controls.Primitives.NumericControl`2.ValueChanged" crefType="Unqualified"/> event
            with a <see cref="P:NationalInstruments.Controls.ValueChangedEventArgs`1.Source" crefType="Unqualified"/> that is
            <see cref="F:NationalInstruments.Controls.PropertyChangeSource.Interactive" crefType="Unqualified"/>.
            </remarks>
            <lastupdated>4/17/2012 2:11:33 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericControl`2.OnValueChanged(`0,`0)">
            <summary>
            Called when the <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value"/> property changes.
            </summary>
            <param name="oldValue">
            Old value of the <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value"/> property.
            </param>
            <param name="newValue">
            New value of the <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value"/> property.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericControl`2.CoerceValue(`0)">
            <summary>
            Coerces the specified value according to the policy of the control, and clips the value to fall within
            <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.ActualRange" crefType="Unqualified"/>.
            </summary>
            <remarks>
            Controls provide custom coercion logic through the virtual
            <see cref="M:NationalInstruments.Controls.Primitives.NumericControl`2.CoerceValueCore(`0)" crefType="Unqualified"/> method.
            Once the control-specific coercion policy in <see cref="M:NationalInstruments.Controls.Primitives.NumericControl`2.CoerceValueCore(`0)" crefType="Unqualified"/> has been applied,
            the resulting value is clipped to fall within <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.ActualRange" crefType="Unqualified"/>.
            </remarks>
            <param name="value">The value to coerce.</param>
            <returns>The value after coercion. </returns>
            <lastupdated>4/17/2012 2:38:18 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericControl`2.ClipCoercedValue(`0)">
            <summary>
            Clips the coerced value to the <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.ActualRange"/>.
            </summary>
            <remarks>
            You can override this method in derived types to allow custom clipping of coerced values.
            </remarks>
            <param name="coercedValue">The value after it has been coerced.</param>
            <returns>The clipped value.</returns>
            <lastupdated>4/17/2012 2:13:18 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericControl`2.CoerceValueCore(`0)">
            <summary>
            Performs custom coercion logic before a value is clipped to fall within <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.ActualRange" crefType="Unqualified"/>.
            </summary>
            <remarks>
            Called by <see cref="M:NationalInstruments.Controls.Primitives.NumericControl`2.CoerceValue(`0)" crefType="Unqualified"/>
             to allow derived controls to apply a custom coercion policy when a new value is assigned to the control.
            The result of <see cref="M:NationalInstruments.Controls.Primitives.NumericControl`2.CoerceValueCore(`0)" crefType="Unqualified"/>
            is clipped to fit within
            <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.ActualRange" crefType="Unqualified"/>
            by <see cref="M:NationalInstruments.Controls.Primitives.NumericControl`2.CoerceValue(`0)" crefType="Unqualified"/>.
            <para>The default implementation returns <paramref name="value"/> unmodified.</para>
            </remarks>
            <param name="value">The value to coerce.</param>
            <returns>The value after coercion. </returns>
            <lastupdated>4/17/2012 2:53:17 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericControl`2.InvalidateCoercedValue">
            <summary>
            Re-calculates the value of <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.CoercedValue"/>
            from <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value"/> using the
            <see cref="M:NationalInstruments.Controls.Primitives.NumericControl`2.CoerceValue(`0)"/> method
            when a property affecting the <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.CoercedValue"/> changes.
            </summary>
            <remarks>
            Derived classes are responsible for calling this method whenever a member affecting
            <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.CoercedValue"/>,
            such as <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.ActualRange"/>, has changed.
            </remarks>
            <lastupdated>4/17/2012 3:55:09 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericControl`2.CommitValueChange">
            <summary>
            Called when the user commits the current <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value" crefType="Unqualified"/>,
             or before a user interaction causes an update to <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value" crefType="Unqualified"/>
            to allow any pending interaction to complete before the next one starts.
            </summary>
            <remarks>
            This method is called by the event handler for the Enter key to commit the current <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value" crefType="Unqualified"/>, and is also
            called by <see cref="M:NationalInstruments.Controls.Primitives.NumericControl`2.IncrementByMultiple(System.Int32,NationalInstruments.Controls.PropertyChangeSource)" crefType="Unqualified"/>
             to allow derived classes to complete any interaction with the user before the new interaction tries to update <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value" crefType="Unqualified"/>.
            <para>
            Derived classes should call <see cref="M:NationalInstruments.Controls.Primitives.NumericControl`2.CommitValueChange" crefType="Unqualified"/> before they initiate a custom interaction,
            as when calling <see cref="M:NationalInstruments.Controls.Primitives.NumericControl`2.ChangeValue(`0,NationalInstruments.Controls.PropertyChangeSource)" crefType="Unqualified"/>.
            </para>
            </remarks>
            <lastupdated>4/17/2012 2:57:35 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericControl`2.CancelValueChange">
            <summary>
            Called when the user commits the current <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value" crefType="Unqualified"/>
            to allow any pending user interaction to complete before the next user interaction starts.
            </summary>
            <remarks>
            This method is called by the event handler for the Escape key to revert the current <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value" crefType="Unqualified"/>.
            </remarks>
            <lastupdated>4/13/2012 4:19:30 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericControl`2.NationalInstruments#Controls#Internal#INumericControlInteractorTarget#CommitValueChange">
            <exclude/>
            <lastupdated>6/5/2012 5:00:00 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericControl`2.NationalInstruments#Controls#Internal#INumericControlInteractorTarget#CancelValueChange">
            <exclude/>
            <lastupdated>11/15/2011 4:53:45 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericControl`2.NationalInstruments#Controls#Internal#INumericControlInteractorTarget#DoMultipleIncrement(System.Int32)">
            <exclude/>
            <lastupdated>11/15/2011 4:53:53 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericControl`2.CoercedValueProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NumericControl`2.CoercedValue'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NumericControl`2.CoercedValue'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericControl`2.ValueProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NumericControl`2.Value'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NumericControl`2.Value'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericControl`2.IntervalProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NumericControl`2.Interval'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NumericControl`2.Interval'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericControl`2.IsReadOnlyProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NumericControl`2.IsReadOnly'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NumericControl`2.IsReadOnly'/> dependency property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericControl`2.OnCoercedValueChanged(`0,`0)">
            <summary>
            Called when the <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.CoercedValue"/> property changes.
            </summary>
            <param name="oldValue">
            Old value of the <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.CoercedValue"/> property.
            </param>
            <param name="newValue">
            New value of the <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.CoercedValue"/> property.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericControl`2.OnIntervalChanged(`1,`1)">
            <summary>
            Called when the <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Interval"/> property changes.
            </summary>
            <param name="oldValue">
            Old value of the <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Interval"/> property.
            </param>
            <param name="newValue">
            New value of the <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Interval"/> property.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericControl`2.OnIsReadOnlyChanged(System.Boolean,System.Boolean)">
            <summary>
            Called when the <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.IsReadOnly"/> property changes.
            </summary>
            <param name="oldValue">
            Old value of the <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.IsReadOnly"/> property.
            </param>
            <param name="newValue">
            New value of the <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.IsReadOnly"/> property.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericControl`2.OnValueChanging(NationalInstruments.Controls.ValueChangingEventArgs{`0})">
            <summary>
            Raises the <see cref="E:NationalInstruments.Controls.Primitives.NumericControl`2.ValueChanging"/> event.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="e"/> is <see langword="null"/>.
            </exception>
            <param name="e">
            An instance of <see cref="T:NationalInstruments.Controls.ValueChangingEventArgs`1"/> that contains the event data.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericControl`2.OnValueChanged(NationalInstruments.Controls.ValueChangedEventArgs{`0})">
            <summary>
            Raises the <see cref="E:NationalInstruments.Controls.Primitives.NumericControl`2.ValueChanged"/> event.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="e"/> is <see langword="null"/>.
            </exception>
            <param name="e">
            An instance of <see cref="T:NationalInstruments.Controls.ValueChangedEventArgs`1"/> that contains the event data.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericControl`2.BindCommand(System.Windows.Controls.Control,System.Windows.Input.ICommand,System.Collections.Generic.IEnumerable{System.Windows.Input.InputGesture})">
            <summary>
            Creates an input binding on the given control such that when a given gesture fires, the provided command executes.
            </summary>
            <param name="control">
            The <see cref="T:System.Windows.Controls.Control"/> on which to set up input bindings.
            </param>
            <param name="command">
            The <see cref="T:System.Windows.Input.ICommand"/> to execute when <paramref name="gestures"/> is executed.
            </param>
            <param name="gestures">
            The <see cref="T:System.Windows.Input.InputGesture"/> to trigger <paramref name="command"/>.
            </param>
            <lastupdated>4/13/2012 4:04:50 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericControl`2.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericControl`2.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericControl`2.OnApplyTemplate">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericControl`2.InitializeInputBindings">
            <exclude>[INTERNAL FOR TESTING]</exclude>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericControl`2.IsKeyboardIncrementDecrementEnabled">
            <summary>
            Gets or sets a value indicating whether to enable <see cref="P:NationalInstruments.Controls.Primitives.ControlCommands.IncrementCommand"/>
            and <see cref="P:NationalInstruments.Controls.Primitives.ControlCommands.DecrementCommand"/> for interacting with
             <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value"/>.
            </summary>
            <value>
            <see langword="true"/> if the keyboard can be used to increment or decrement the
            <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value"/>.
            The default value is <see langword="false"/>.
            </value>
            <lastupdated>6/6/2012 6:39:52 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericControl`2.IsScrollWheelIncrementDecrementEnabled">
            <summary>
            Gets or sets a value indicating whether to enable the mouse wheel for interacting with <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value"/>.
            </summary>
            <value>
            <see langword="true"/> if the mouse scroll wheel can be used to increment or decrement the
            <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value"/>.
            The default value is <see langword="false"/>.
            </value>
            <lastupdated>6/6/2012 6:40:20 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericControl`2.ActualRange">
            <summary>
            Gets the range that <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value" crefType="Unqualified"/>
             is clipped to to produce <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.CoercedValue" crefType="Unqualified"/>.
            </summary>
            <remarks>
            <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.ActualRange"/> is used by the control to set
            <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.CoercedValue" crefType="Unqualified"/>.
            </remarks>
            <value>
            The actual range.
            </value>
            <lastupdated>6/5/2012 5:00:00 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericControl`2.IsChangePending">
            <summary>
            Gets a value indicating whether there is a value that requires committal or reversion.
            </summary>
            <remarks>
            This property is called to determine if action is necessary when the end user uses the Escape key or the Enter key.
            It should be overridden and set to <see langword="true"/> in a derived class when the value is being edited by the user interactively.
            </remarks>
            <value>
            <see langword="true"/> if a change is pending. The default value is <see langword="false"/>.
            </value>
            <lastupdated>6/19/2012 10:21:06 AM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericControl`2.NationalInstruments#Controls#Primitives#INumericControl{TValue@TOffset}#ActualRange">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericControl`2.DefaultValue">
            <summary>Gets the default value for the <typeparamref name="TValue"/> type.</summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericControl`2.NationalInstruments#Controls#Internal#INumericControlInteractorTarget#IsReadOnly">
            <exclude/>
            <lastupdated>11/15/2011 4:53:34 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericControl`2.NationalInstruments#Controls#Internal#INumericControlInteractorTarget#IsChangePending">
            <exclude/>
            <lastupdated>6/5/2012 5:00:00 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericControl`2.NationalInstruments#Controls#Internal#INumericControlInteractorTarget#Interactor">
            <exclude/>
            <lastupdated>11/15/2011 4:53:39 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericControl`2.CoercedValue">
            <summary>Gets the coerced value.</summary><value>
The adjusted numeric value displayed by the control, which is 
<see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value"/> clipped by 
<see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.ActualRange"/>.
The default is zero.
</value><remarks>Additional coercion may be defined by derived controls.</remarks><seealso cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value"/><lastupdated>6/6/2012 6:56:56 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value">
            <summary>Gets or sets the numeric value assigned to the control.</summary><value>The default value is zero.</value><seealso cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.CoercedValue"/><lastupdated>6/6/2012 6:56:31 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericControl`2.Interval">
            <summary>Gets or sets the amount applied by increment or decrement operations.</summary><value>The amount applied by increment or decrement operations. The default value is one.</value><exception cref="T:System.ArgumentException">
      <para>
        <paramref name="value"/> is <see cref="F:System.Double.NaN"/>, <see cref="F:System.Double.NegativeInfinity"/>, or 
<see cref="F:System.Double.PositiveInfinity"/>.</para>
    </exception><remarks>
When incrementing, <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Interval"/> is added to 
<see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.CoercedValue"/> and the result is 
assigned to 
<see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value"/>.
Similarly, <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Interval"/> is subtracted from 
<see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.CoercedValue"/> and the result is 
assigned to 
<see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value"/> for decrementing.
<para>All numeric controls support calling these functions using the up or down arrow keys, unless keyboard 
interaction has been specifically disabled. Derived controls may add other call mechanisms.</para>
<para><see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Interval"/> must be greater than zero.</para>
</remarks><lastupdated>6/6/2012 6:53:54 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericControl`2.IsReadOnly">
            <summary>Gets a value indicating whether the control is in a read-only state.</summary><remarks>
When <see langword="true"/>, all mouse and keyboard mechanisms for inputting data are disabled. In this state, various parts of the control that are solely used for data entry may be hidden. This 
property may trigger other decorative effects to differentiate interactive controls from display-only controls. The state is toggled by 
other properties as defined by derived controls. 
</remarks><value>
      <see langword="true"/> if the control is read-only; otherwise <see langword="false"/>.</value><lastupdated>6/6/2012 6:56:13 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="E:NationalInstruments.Controls.Primitives.NumericControl`2.ValueChanging">
            <summary>Occurs when <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value"/>  
is about to change as a result of an interactive change.</summary><remarks>
An interactive change is any change that is caused by a call to one of the interactive functions defined for this class. 
Programs monitoring this event can programmatically adjust the value or cancel the value change entirely.
</remarks><lastupdated>4/17/2012 5:07:38 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="E:NationalInstruments.Controls.Primitives.NumericControl`2.ValueChanged">
            <summary>Occurs when <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value"/> changes.</summary><lastupdated>4/17/2012 5:05:45 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericControl`2.IncrementGestures">
            <summary>
            Gets the collection of input gestures that execute the <see cref="P:NationalInstruments.Controls.Primitives.ControlCommands.IncrementCommand"/>.
            </summary>
            <remarks>
            This can be overridden to provide different input gestures.
            </remarks>
            <value>
            The default value is an enumerable of <see cref="T:System.Windows.Input.KeyGesture"/> for <see cref="F:System.Windows.Input.Key.Up"/>.
            </value>
            <lastupdated>6/19/2012 10:20:29 AM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericControl`2.DecrementGestures">
            <summary>
            Gets the collection of input gestures that execute the <see cref="P:NationalInstruments.Controls.Primitives.ControlCommands.DecrementCommand"/>.
            </summary>
            <remarks>
            This can be overridden to provide different input gestures.
            </remarks>
            <value>
            The default value is an enumerable of <see cref="T:System.Windows.Input.KeyGesture"/> for <see cref="F:System.Windows.Input.Key.Down"/>.
            </value>
            <lastupdated>6/19/2012 10:20:21 AM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericPointer`2.GetMultipleIncrementValue(`0,System.Int32)">
            <inheritdoc/>
            <remarks>
            Calls <see cref="M:NationalInstruments.Controls.NumericPointerCoercionMode.GetMultipleIncrementValue``2(NationalInstruments.Controls.Primitives.INumericPointerControl{``0,``1},``0,System.Int32)"/> on
            <see cref="P:NationalInstruments.Controls.Primitives.NumericPointer`2.CoercionMode" crefType="Unqualified"/>.</remarks>
            <lastupdated>4/18/2012 2:01:03 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericPointer`2.CoerceValueCore(`0)">
            <inheritdoc/>
            <remarks>
            Calls <see cref="M:NationalInstruments.Controls.NumericPointerCoercionMode.CoerceValue``2(NationalInstruments.Controls.Primitives.INumericPointerControl{``0,``1},``0)" crefType="Unqualified"/> on
            <see cref="P:NationalInstruments.Controls.Primitives.NumericPointer`2.CoercionMode" crefType="Unqualified"/>.
            </remarks>
            <lastupdated>4/18/2012 2:00:11 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericPointer`2.CommitValueChange">
            <inheritdoc/>
            <lastupdated>12/14/2011 11:46:57 AM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericPointer`2.CancelValueChange">
            <inheritdoc/>
            <lastupdated>12/14/2011 11:46:53 AM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericPointer`2.OnIntervalChanged(`1,`1)">
            <inheritdoc/>
            <lastupdated>12/14/2011 11:47:07 AM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericPointer`2.OnCoercedValueChanged(`0,`0)">
            <inheritdoc/>
            <lastupdated>12/14/2011 11:47:01 AM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericPointer`2.UpdateLastPosition(System.Windows.Point,System.Windows.Point)">
            <summary>
            Converts the last known mouse position into a new last position.
            </summary>
            <param name="newPosition">The new mouse position on the drag.</param>
            <param name="oldPosition">The old mouse position on the drag.</param>
            <returns>An updated last position.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericPointer`2.CalculatePointerValue(System.Windows.Point,System.Windows.Point,System.Boolean)">
            <summary>
            Calculates a new value for this control, given a starting point for the mouse and an end point for the mouse.
            </summary>
            <param name="start">Mouse starting point given in coordinates of <see cref="P:NationalInstruments.Controls.Primitives.NumericPointer`2.Track"/>.</param>
            <param name="finish">Mouse ending point given in coordinates of <see cref="P:NationalInstruments.Controls.Primitives.NumericPointer`2.Track"/>.</param>
            <param name="isDrag">Mouse interaction is a drag operation.</param>
            <returns>A value within <see cref="P:NationalInstruments.Controls.Primitives.NumericPointer`2.Range"/> calculated from the starting and ending mouse points.</returns>
            <remarks>The starting point and end point may be the same.</remarks>
            <lastupdated>4/18/2012 1:58:16 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericPointer`2.OnClickOrDragStart(System.Windows.Point)">
            <summary>
            Informs derived classes when a drag or click operation starts.
            </summary>
            <param name="clickPoint">The point where the left mouse button is pressed relative to the mouse aware region.</param>
            <remarks>
            This method gives derived classes the opportunity to record the position of the initial
            click of a snap or drag, such as to determine the offset from the <paramref name="clickPoint"/>
            to the position of the pointer.
            </remarks>
            <lastupdated>6/5/2012 5:00:00 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericPointer`2.OnMouseInteractionCompleted">
            <summary>
            Called when the mouse interaction is complete.
            </summary>
            <remarks>
            This gives the opportunity for derived classes to clear any state that they use during
            a snap or drag.
            </remarks>
            <lastupdated>6/5/2012 5:00:00 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericPointer`2.PointerValueProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointer`2.PointerValue'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointer`2.PointerValue'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericPointer`2.RelativeValueProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointer`2.RelativeValue'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointer`2.RelativeValue'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericPointer`2.RangeProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointer`2.Range'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointer`2.Range'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericPointer`2.PointerTemplateProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointer`2.PointerTemplate'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointer`2.PointerTemplate'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericPointer`2.MechanicalActionProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointer`2.MechanicalAction'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointer`2.MechanicalAction'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericPointer`2.CoercionModeProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointer`2.CoercionMode'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointer`2.CoercionMode'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericPointer`2.PointerBrushProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointer`2.PointerBrush'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointer`2.PointerBrush'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericPointer`2.InteractionModeProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointer`2.InteractionMode'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointer`2.InteractionMode'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericPointer`2.ScaleProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointer`2.Scale'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointer`2.Scale'/> dependency property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericPointer`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.NumericPointer`2"/> class.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericPointer`2.OnApplyTemplate">
            <inheritdoc cref="M:System.Windows.FrameworkElement.OnApplyTemplate"/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericPointer`2.OnRangeChanged(NationalInstruments.Controls.Range{`0},NationalInstruments.Controls.Range{`0})">
            <summary>
            Called when the <see cref="P:NationalInstruments.Controls.Primitives.NumericPointer`2.Range"/> property changes.
            </summary>
            <param name="oldValue">
            Old value of the <see cref="P:NationalInstruments.Controls.Primitives.NumericPointer`2.Range"/> property.
            </param>
            <param name="newValue">
            New value of the <see cref="P:NationalInstruments.Controls.Primitives.NumericPointer`2.Range"/> property.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericPointer`2.IsInteractive(System.Object)">
            <summary>
            Gets a value indicating whether the specified element appears in an interactive area of the control.
            </summary>
            <param name="element">The element to test.</param>
            <returns><see langword="true"/> if <paramref name="element"/> is inside of an interactive part of the control.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericPointer`2.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <inheritdoc/>
            <lastupdated>12/14/2011 11:47:21 AM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericPointer`2.OnMouseLeftButtonDownInternal(System.Func{System.Object,System.Windows.Point},System.Object,System.Func{System.Boolean},System.Boolean)">
            <exclude>[INTERNAL FOR TESTING]</exclude>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericPointer`2.HandleMouseMoveInternal(System.Func{System.Object,System.Windows.Point},System.Object)">
            <exclude>[INTERNAL FOR TESTING]</exclude>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericPointer`2.HandleMouseMoveResults(System.Func{System.Object,System.Windows.Point},System.Object)">
            <exclude>[INTERNAL FOR TESTING]</exclude>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericPointer`2.HandleLostMouseCaptureInternal(System.Func{System.Object,System.Windows.Point},System.Object)">
            <exclude>[INTERNAL FOR TESTING]</exclude>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericPointer`2.HandleMouseLeftButtonUpInternal(System.Func{System.Object,System.Windows.Point},System.Object)">
            <exclude>[INTERNAL FOR TESTING]</exclude>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointer`2.ActualRange">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointer`2.LogicalChildren">
            <inheritdoc cref="P:System.Windows.FrameworkElement.LogicalChildren"/>
            <value>An enumerator for logical child elements of this element.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointer`2.IsDragging">
            <exclude>[INTERNAL FOR TESTING]</exclude>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointer`2.ScaleDataMapper">
            <exclude/>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointer`2.PointerValue">
            <summary>Gets or sets the value the pointer is showing on the scale. </summary><value>The pointer value.</value><remarks>This property is similar to CoercedValue, except this property behaves differently while drag operations are in progress.</remarks><seealso cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value"/><seealso cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.CoercedValue"/><lastupdated>6/7/2012 11:06:19 AM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointer`2.RelativeValue">
            <summary>
            Gets the same as PointerValue but expressed as a percentage (between 0.0 and 1.0) of the Range.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointer`2.Range">
            <summary>Gets or sets the minimum and maximum range allowed for the coerced value of this control. </summary><value> The default value varies with the type of <c>TValue</c>, but is normally equivalent to [0,10].</value><remarks>
Positive and negative infinity are not valid values 
for the range. The default is the largest range allowed for the control's data type, excluding infinities. Empty ranges are not allowed.
</remarks><lastupdated>6/7/2012 11:08:50 AM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointer`2.PointerTemplate">
            <summary>Gets or sets the visual structure for the pointer.</summary><value>The default value is <see langword="null"/>.</value><lastupdated>6/7/2012 11:04:57 AM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointer`2.MechanicalAction">
            <summary>Gets or sets the actions that trigger a value change while your end user is manipulating the pointer.</summary><value>The default value is <see cref="F:NationalInstruments.Controls.MechanicalAction.SwitchWhileDragging"/>.</value><lastupdated>6/7/2012 11:01:51 AM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointer`2.CoercionMode">
            <summary>Gets or sets the restrictions on values within the range.</summary><value>The default value is <see cref="P:NationalInstruments.Controls.NumericPointerCoercionMode.None"/>.</value><remarks>
This property affects what values the end user can input into the control at run time, and also affects 
the <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.CoercedValue"/>
 when <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value"/> is set programmatically. 
</remarks><lastupdated>6/6/2012 7:04:57 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointer`2.PointerBrush">
            <summary>Gets or sets the brush used to draw the pointer part of a control.</summary><value>The brush used to draw the pointer part of a control. The default is <see langword="null"/>.</value><lastupdated>6/7/2012 11:04:31 AM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointer`2.InteractionMode">
            <summary>Gets or sets a flags field that controls how your end user can interact with the control, using the keyboard or mouse. </summary><value> The default is that all modes are enabled, which includes <see cref="F:NationalInstruments.Controls.NumericPointerInteractionModes.ArrowKeys"/>,  
<see cref="F:NationalInstruments.Controls.NumericPointerInteractionModes.Snap"/>,
 <see cref="F:NationalInstruments.Controls.NumericPointerInteractionModes.ScrollWheel"/>, and 
<see cref="F:NationalInstruments.Controls.NumericPointerInteractionModes.Drag"/>.</value><remarks>
      When all modes are disabled,
      <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.IsReadOnly"/>
      will return <see langword="true"/>.
    </remarks><lastupdated>6/7/2012 10:59:14 AM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointer`2.Scale">
            <summary>Gets or sets the scale associated with this control.</summary><value>The default value is a new <see cref="T:NationalInstruments.Controls.NumericScale"/> object.</value><exception cref="T:System.ArgumentException">
      <paramref name="value"/> is <see langword="null"/>.
    </exception><lastupdated>4/18/2012 4:17:32 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointer`2.TrackDecorations">
            <summary>Gets a collection of objects to display in the track.</summary><value>A collection of objects to display in the track.</value><lastupdated>6/7/2012 11:11:57 AM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointer`2.RootPanel">
            <summary>Gets the root layout panel for the control.</summary><value>The default value is <see langword="null"/>.</value><remarks>This is set during <see cref="M:NationalInstruments.Controls.Primitives.NumericPointer`2.OnApplyTemplate"/> if <c>PART_RootPanel</c> is present in the control template.</remarks><lastupdated>13 Jun 2012 3:46:03 PM</lastupdated><updatedby>übermn</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointer`2.Track">
            <summary>Gets the track definition for the control.</summary><value>The default value is <see langword="null"/>.</value><remarks>This is set during <see cref="M:NationalInstruments.Controls.Primitives.NumericPointer`2.OnApplyTemplate"/> if <c>PART_Track</c> is present in the control template.</remarks><lastupdated>6/7/2012 11:10:55 AM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointer`2.DecorationContainer">
            <summary>Gets the panel containing track decorations for the control.</summary><value>The default value is <see langword="null"/>.</value><remarks>This is set during <see cref="M:NationalInstruments.Controls.Primitives.NumericPointer`2.OnApplyTemplate"/> if <c>PART_DecorationContainer</c> is present in the control template.</remarks><lastupdated>13 Jun 2012 3:46:03 PM</lastupdated><updatedby>übermn</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointer`2.PointerContainer">
            <summary>Gets the panel containing the pointer for the control.</summary><value>The default value is <see langword="null"/>.</value><remarks>This is set during <see cref="M:NationalInstruments.Controls.Primitives.NumericPointer`2.OnApplyTemplate"/> if <c>PART_PointerContainer</c> is present in the control template.</remarks><lastupdated>13 Jun 2012 3:46:03 PM</lastupdated><updatedby>übermn</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointer`2.ScaleDataMapperListener">
            <summary>
            Gets or sets a weak event listener for the DataMapperChanged event.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointer`2.IncrementGestures">
            <inheritdoc/>
            <remarks>
            <see cref="T:NationalInstruments.Controls.Primitives.NumericControl`2"/> adds a <see cref="T:System.Windows.Input.KeyGesture"/>
            for <see cref="F:System.Windows.Input.Key.Right"/> to the default decrement gestures.
            </remarks>
            <lastupdated>4/18/2012 1:32:26 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointer`2.DecrementGestures">
            <inheritdoc/>
            <remarks>
            <see cref="T:NationalInstruments.Controls.Primitives.NumericControl`2"/> adds a <see cref="T:System.Windows.Input.KeyGesture"/>
            for <see cref="F:System.Windows.Input.Key.Left"/> to the default decrement gestures.
            </remarks>
            <lastupdated>4/18/2012 1:31:53 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointer`2.IsChangePending">
            <inheritdoc/>
            <lastupdated>6/6/2012 7:02:40 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointer`2.InteractionElement">
            <exclude/><summary>Gets the element where mouse interaction takes place.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.OnClickOrDragStart(System.Windows.Point)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.CalculatePointerValue(System.Windows.Point,System.Windows.Point,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.UpdateLastPosition(System.Windows.Point,System.Windows.Point)">
            <inheritdoc />
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.OrientationProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.Orientation'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.Orientation'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.IsInvertedProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.IsInverted'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.IsInverted'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.ScaleLocationProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.ScaleLocation'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.ScaleLocation'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.FillProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.Fill'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.Fill'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.FillModeProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.FillMode'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.FillMode'/> dependency property.
            </returns>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.Orientation">
            <summary>Gets or sets whether the control displays horizontally or vertically.</summary><value>
The default value is <see cref="F:System.Windows.Controls.Orientation.Horizontal"/>,
but is overridden to be <see cref="F:System.Windows.Controls.Orientation.Vertical"/> for <see cref="T:NationalInstruments.Controls.Tank`1"/>.
</value><lastupdated>6/19/2012 10:20:09 AM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.IsInverted">
            <summary>Gets or sets a value specifying whether the scale is drawn as inverted.</summary><value>The default value is <see langword="false"/>.</value><remarks>
When <see langword="false"/>, the minimum is on the left when the scale is horizontal and on the bottom
when the scale is vertical. When <see langword="true"/>, the minimum is on the right or top.
</remarks><lastupdated>6/7/2012 11:22:42 AM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.ScaleLocation">
            <summary>Gets or sets the location of the scale on the control, either near or far.</summary><value>The default value is <see cref="F:NationalInstruments.Controls.RelativeLocation.Near"/>.</value><remarks>
      <see cref="F:NationalInstruments.Controls.RelativeLocation.Near"/> puts the scale on the bottom or left of the control,
while <see cref="F:NationalInstruments.Controls.RelativeLocation.Far"/> puts the scale on the top or right of the control.
</remarks><lastupdated>6/7/2012 11:27:32 AM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.Fill">
            <summary>Gets or sets the brush used to paint the track.</summary><value>The brush used to paint the track between <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value"/>, <see cref="P:NationalInstruments.Controls.Range`1.Minimum"/>, and <see cref="P:NationalInstruments.Controls.Range`1.Maximum"/>,
    based on the value of <see cref="P:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.FillMode"/>. The default value is <see langword="null"/>.</value><lastupdated>6/7/2012 11:20:39 AM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.FillMode">
            <summary>Gets or sets the mode used to paint the track.</summary><value>The mode used to paint the track between <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value"/>, <see cref="P:NationalInstruments.Controls.Range`1.Minimum"/>, and <see cref="P:NationalInstruments.Controls.Range`1.Maximum"/>,
    using the <see cref="P:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.Fill"/> brush. The default value is <see langword="NumericFillMode.ToMinimum"/>.</value><lastupdated>6/7/2012 11:20:39 AM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.NumericPointerScale">
            <summary>
            Provides the attached properties used to communicate information from a <see cref="T:NationalInstruments.Controls.Primitives.NumericPointer`2"/> to
            the numeric scale's <see cref="T:NationalInstruments.Controls.Primitives.IScalePresenter"/>.
            </summary>
            <threadsafety safety="unsafe"/>
            <lastupdated>4/18/2012 4:33:26 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericPointerScale.TargetOrientationProperty">
            <summary>
            Identifies the <see cref="P:NationalInstruments.Controls.Primitives.NumericPointerScale.TargetOrientation"/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref="P:NationalInstruments.Controls.Primitives.NumericPointerScale.TargetOrientation"/> attached property.
            </returns>
            <attachedmember name="TargetOrientation">
      <summary>Gets or sets the targeted orientation of a <see cref="T:NationalInstruments.Controls.Primitives.ScaleHost"/>.</summary>
      <value>The targeted orientation of a <see cref="T:NationalInstruments.Controls.Primitives.ScaleHost"/>. The default value is <see cref="F:System.Windows.Controls.Orientation.Horizontal"/>.</value>
    </attachedmember>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericPointerScale.TargetPositionProperty">
            <summary>
            Identifies the <see cref="P:NationalInstruments.Controls.Primitives.NumericPointerScale.TargetPosition"/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref="P:NationalInstruments.Controls.Primitives.NumericPointerScale.TargetPosition"/> attached property.
            </returns>
            <attachedmember name="TargetPosition">
      <summary>Gets or sets the targeted position of a <see cref="T:NationalInstruments.Controls.Primitives.ScaleHost"/>.</summary>
      <value>The targeted position of a <see cref="T:NationalInstruments.Controls.Primitives.ScaleHost"/>. The default value is <see cref="F:NationalInstruments.Controls.RelativePosition.Near"/>.</value>
    </attachedmember>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericPointerScale.ScaleLocationProperty">
            <summary>
            Identifies the <see cref="P:NationalInstruments.Controls.Primitives.NumericPointerScale.ScaleLocation"/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref="P:NationalInstruments.Controls.Primitives.NumericPointerScale.ScaleLocation"/> attached property.
            </returns>
            <attachedmember name="ScaleLocation">
      <summary>Gets or sets the location of the scale of the parent control.</summary>
      <value>The location of the scale of the parent control. The default value is <see cref="F:NationalInstruments.Controls.RelativeLocation.Near"/>.</value>
    </attachedmember>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericPointerScale.RangeProperty">
            <summary>
            Identifies the <see cref="P:NationalInstruments.Controls.Primitives.NumericPointerScale.Range"/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref="P:NationalInstruments.Controls.Primitives.NumericPointerScale.Range"/> attached property.
            </returns>
            <attachedmember name="Range">
      <summary>Gets or sets the range of the control.</summary>
      <value>The range of the control. The default value is <see langword="null"/>.</value>
    </attachedmember>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericPointerScale.IsRangeEditableProperty">
            <summary>
            Identifies the <see cref="P:NationalInstruments.Controls.Primitives.NumericPointerScale.IsRangeEditable"/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref="P:NationalInstruments.Controls.Primitives.NumericPointerScale.IsRangeEditable"/> attached property.
            </returns>
            <attachedmember name="IsRangeEditable">
      <summary>Gets or sets a value indicating whether the range can be modified interactively.</summary>
      <value>A value indicating whether the range can be modified interactively. The default value is <see langword="false"/>.</value> 
    </attachedmember>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericPointerScale.GetTargetOrientation(NationalInstruments.Controls.Primitives.ScaleHost)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.Primitives.NumericPointerScale.TargetOrientation"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.Primitives.NumericPointerScale.TargetOrientation"/> property value for the element.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericPointerScale.SetTargetOrientation(NationalInstruments.Controls.Primitives.ScaleHost,System.Windows.Controls.Orientation)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.Primitives.NumericPointerScale.TargetOrientation"/> attached property to a specified element.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:System.Windows.Controls.Orientation"/> value.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericPointerScale.GetTargetPosition(NationalInstruments.Controls.Primitives.ScaleHost)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.Primitives.NumericPointerScale.TargetPosition"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.Primitives.NumericPointerScale.TargetPosition"/> property value for the element.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericPointerScale.SetTargetPosition(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.RelativePosition)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.Primitives.NumericPointerScale.TargetPosition"/> attached property to a specified element.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:NationalInstruments.Controls.RelativePosition"/> value.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericPointerScale.GetScaleLocation(NationalInstruments.Controls.Primitives.ScaleHost)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.Primitives.NumericPointerScale.ScaleLocation"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.Primitives.NumericPointerScale.ScaleLocation"/> property value for the element.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericPointerScale.SetScaleLocation(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.RelativeLocation)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.Primitives.NumericPointerScale.ScaleLocation"/> attached property to a specified element.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:NationalInstruments.Controls.RelativeLocation"/> value.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericPointerScale.GetRange(NationalInstruments.Controls.Primitives.ScaleHost)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.Primitives.NumericPointerScale.Range"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.Primitives.NumericPointerScale.Range"/> property value for the element.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericPointerScale.SetRange(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IRange)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.Primitives.NumericPointerScale.Range"/> attached property to a specified element.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:NationalInstruments.Controls.Primitives.IRange"/> value.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericPointerScale.GetIsRangeEditable(NationalInstruments.Controls.Primitives.ScaleHost)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.Primitives.NumericPointerScale.IsRangeEditable"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.Primitives.NumericPointerScale.IsRangeEditable"/> property value for the element.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericPointerScale.SetIsRangeEditable(NationalInstruments.Controls.Primitives.ScaleHost,System.Boolean)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.Primitives.NumericPointerScale.IsRangeEditable"/> attached property to a specified element.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:System.Boolean"/> value.
            </param>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.NumericPointerViewModel">
            <exclude/>
            <summary>
            Represents a view model used in <see cref="T:NationalInstruments.Controls.Primitives.LinearNumericPointer`2"/> and <see cref="T:NationalInstruments.Controls.Primitives.RadialNumericPointer`2"/> control templates.
            </summary>
            <threadsafety safety="unsafe"/>
            <lastupdated>5/4/2012 2:58:38 PM</lastupdated>
            <updatedby>LabVIEW</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SourceProperty">
            <summary>
            Identifies the <see cref="P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.Source"/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref="P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.Source"/> attached property.
            </returns>
            <attachedmember name="Source">
      <summary>Gets or sets the parent control.</summary>
      <value>The parent control. The default value is <see langword="null"/>.</value>
    </attachedmember>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericPointerViewModel.RelativeValueProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.RelativeValue'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.RelativeValue'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericPointerViewModel.ScalarBorderThicknessProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.ScalarBorderThickness'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.ScalarBorderThickness'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SourceRelativeValueProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SourceRelativeValue'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SourceRelativeValue'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SourceBorderThicknessProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SourceBorderThickness'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SourceBorderThickness'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericPointerViewModel.FillOpacityMaskProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.FillOpacityMask'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.FillOpacityMask'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SourceIsInvertedProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SourceIsInverted'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SourceIsInverted'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SourceOrientationProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SourceOrientation'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SourceOrientation'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SourceFillModeProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SourceFillMode'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SourceFillMode'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericPointerViewModel.RadialDiameterProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.RadialDiameter'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.RadialDiameter'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericPointerViewModel.RelativeOffsetProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.RelativeOffset'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.RelativeOffset'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericPointerViewModel.RelativeLengthProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.RelativeLength'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.RelativeLength'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SourceWidthProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SourceWidth'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SourceWidth'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SourceHeightProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SourceHeight'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SourceHeight'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SourceScaleArcProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SourceScaleArc'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SourceScaleArc'/> dependency property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericPointerViewModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.NumericPointerViewModel"/> class.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericPointerViewModel.GetSource(System.Windows.UIElement)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.Source"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.Source"/> property value for the element.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SetSource(System.Windows.UIElement,System.Windows.Controls.Control)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.Source"/> attached property to a specified element.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:System.Windows.Controls.Control"/> value.
            </param>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.Owner">
            <summary>Gets the control the view model is attached to.</summary>
            <value>The control the view model is attached to.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.LinearOwner">
            <summary>Gets the control the view model is attached to as a <see cref="T:NationalInstruments.Controls.Primitives.ILinearNumericPointerControl"/>.</summary>
            <value>The control the view model is attached to, or <see langword="null"/> if the owner does not implement <see cref="T:NationalInstruments.Controls.Primitives.ILinearNumericPointerControl"/>.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.RadialOwner">
            <summary>Gets the control the view model is attached to as a <see cref="T:NationalInstruments.Controls.Primitives.IRadialNumericPointerControl"/>.</summary>
            <value>The control the view model is attached to, or <see langword="null"/> if the owner does not implement <see cref="T:NationalInstruments.Controls.Primitives.IRadialNumericPointerControl"/>.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.RelativeValue">
            <summary>Gets the relative value of the current range, from 0.0 to 1.0.</summary><value>The default value is 0.0.</value><lastupdated>4/18/2012 5:36:04 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.ScalarBorderThickness">
            <summary>Gets or sets the scalar thickness of the border.</summary><value>The default value is 0.0.</value><lastupdated>4/18/2012 5:44:08 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SourceRelativeValue">
            <summary>
            Gets or sets the relative value of the NumericPointer.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SourceBorderThickness">
            <summary>
            Gets or sets the border thickness of the NumericPointer.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.FillOpacityMask">
            <summary>Gets or sets the fill color for an opacity mask.</summary><value>The default value is <see langword="null"/>.</value><lastupdated>6/8/2012 2:10:13 PM</lastupdated><updatedby>Aaron Cederquist</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SourceIsInverted">
            <summary>
            Gets or sets the inversion of the LinearNumericPointer.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SourceOrientation">
            <summary>
            Gets or sets the orientation of the LinearNumericPointer.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SourceFillMode">
            <summary>
            Gets or sets the fill mode of the LinearNumericPointer.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.RadialDiameter">
            <summary>Gets the diameter of a radial control.</summary><value>The default value is 0.0.</value><lastupdated>2014-10-13 12:56:48 PM</lastupdated><updatedby>Paul Hansen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.RelativeOffset">
            <summary>Gets the relative offset, or starting position, of a radial control.</summary><value> The default value is 0.0.</value><lastupdated>4/18/2012 5:35:29 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.RelativeLength">
            <summary>Gets or sets the relative length from the starting position of a radial control.</summary><value>The default value is 0.0.</value><lastupdated>6/8/2012 2:12:40 PM</lastupdated><updatedby>Aaron Cederquist</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SourceWidth">
            <summary>
            Gets or sets the width of the RadialNumericPointer.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SourceHeight">
            <summary>
            Gets or sets the height of the RadialNumericPointer.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericPointerViewModel.SourceScaleArc">
            <summary>
            Gets or sets the arc of the RadialNumericPointer.
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.NumericTextBase`2">
            <summary>
            Represents a control that can display and manipulate numeric values as text.
            </summary>
            <typeparam name="TValue">The type of data held by the control.</typeparam>
            <typeparam name="TOffset">The type of data used as an offset.</typeparam>
            <remarks>
            This is the base type for <see cref="T:NationalInstruments.Controls.NumericTextBox`1"/> and <see cref="T:NationalInstruments.Controls.RadixNumericTextBox`1"/>.
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>6/5/2012 5:00:00 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericTextBase`2.InvalidateFormattedValue">
            <summary>
            Re-calculates the value of <see cref="P:NationalInstruments.Controls.Primitives.NumericTextBase`2.FormattedValue"/>
             from <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.CoercedValue"/> using the
            <see cref="M:NationalInstruments.Controls.Primitives.NumericTextBase`2.FormatValue(`0)"/> method
            when a property affecting <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.CoercedValue"/> has changed.
            </summary>
            <remarks>
            Derived classes are responsible for calling this function whenever a member affecting
            <see cref="P:NationalInstruments.Controls.Primitives.NumericTextBase`2.FormattedValue"/> has changed, such as
            <see cref="P:NationalInstruments.Controls.RadixNumericTextBox`1.RadixBase"/>.
            </remarks>
            <lastupdated>4/19/2012 5:46:01 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericTextBase`2.FormatValue(`0)">
            <summary>
            Formats a data value into a string representation.
            </summary>
            <param name="value">The value to format.</param>
            <returns>A string representation of the value.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericTextBase`2.ParseFormattedValue(System.String)">
            <summary>
            Parses a data value from a string representation.
            </summary>
            <remarks>
            If <see cref="M:NationalInstruments.Controls.Primitives.NumericTextBase`2.ParseFormattedValue(System.String)"/>
            throws a <see cref="T:System.FormatException"/> or an <see cref="T:System.OverflowException"/>,
            <see cref="T:NationalInstruments.Controls.Primitives.NumericTextBase`2"/> attempts to manually handle any fractional or exponential
            notation in the
            formatted input value before calling <see cref="M:NationalInstruments.Controls.Primitives.NumericTextBase`2.ParseFormattedValue(System.String)"/> again.
            <para>
            <see cref="T:NationalInstruments.Controls.Primitives.NumericTextBase`2"/> takes the following steps when performing fallback handling:
            <list type="bullet">
            <item>
            <description>
            If <typeparamref name="TValue"/> represents an integer data type and
            <see cref="P:NationalInstruments.Controls.Primitives.NumericTextBase`2.HandleExponentialInput"/>
             returns <see langword="false"/>, then the scientific exponential notation in the formatted
            input value is flattened into the equivalent text value. For example,  1.2e3 is converted to 120 and re-parsed, resulting in a final value of 120.
            </description>
            </item>
            <item><description>
            If <typeparamref name="TValue"/>  represents an integer data type and the formatted input value contains a decimal point, then
            <see cref="M:NationalInstruments.Controls.Primitives.NumericTextBase`2.ShouldCharacterCauseRoundingAwayFromZero(System.Char,System.String)"/>
            is used to determine whether the final value should be rounded. For example, 1.8  is converted to 1, re-parsed, and rounded up, resulting in a final value of 2.
            </description>
            </item>
            <item><description>
            If <see cref="M:NationalInstruments.Controls.Primitives.NumericTextBase`2.ParseFormattedValue(System.String)"/> throws an
            <see cref="T:System.OverflowException"/>, then the value  is coerced to <see cref="P:NationalInstruments.Controls.Range`1.Minimum"/> or
            <see cref="P:NationalInstruments.Controls.Range`1.Maximum"/>, using <see cref="P:System.Globalization.NumberFormatInfo.NegativeSign"/>
              to determine the direction of overflow.
            </description>
            </item>
            <item>
            <description>
            Otherwise, the parse  is considered unsuccessful and the formatted value  is restored to its original formatted input value. </description>
            </item>
            </list>
            </para>
            </remarks>
            <param name="input">The string value to parse.</param>
            <returns>The data value equivalent of <paramref name="input"/>.</returns>
            <lastupdated>4/19/2012 5:49:00 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericTextBase`2.ShouldCharacterCauseRoundingAwayFromZero(System.Char,System.String)">
            <summary>
            Determines whether the specified character causes a parsed value to round to the next integer value away from zero.
            </summary>
            <remarks>
            The default implementation tests whether the specified character is one of the base-10 rounding characters <c>5</c>, <c>6</c>, <c>7</c>, <c>8</c>, or <c>9</c>.
            </remarks>
            <param name="lastIntegralCharacter">The last integral character of the incoming text value.</param>
            <param name="fractionalCharacters">The set of fractional characters of the incoming text value.</param>
            <returns>
            <see langword="true"/> if the character should cause the parsed value to round to the next integer value away from zero;
            otherwise, <see langword="false"/> to truncate the parsed value to the current integer.
            </returns>
            <lastupdated>4/19/2012 3:28:37 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericTextBase`2.GetMultipleIncrementValue(`0,System.Int32)">
            <inheritdoc/>
            <remarks>
            Uses <see cref="M:NationalInstruments.Controls.Primitives.NumericTextBase`2.GetMultipleIncrementValue(`0,System.Int32)"/> on
            <see cref="P:NationalInstruments.Controls.Primitives.NumericTextBase`2.CoercionMode"/>.
            </remarks>
            <lastupdated>4/19/2012 5:43:39 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericTextBase`2.CoerceValueCore(`0)">
            <inheritdoc/>
            <remarks>
            Applies <see cref="P:NationalInstruments.Controls.Primitives.NumericTextBase`2.CoercionMode"/> to <paramref name="value"/>.
            </remarks>
            <lastupdated>4/19/2012 1:33:25 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericTextBase`2.CommitValueChange">
            <inheritdoc/>
            <remarks>
            Ensures that any pending value input is committed.
            </remarks>
            <lastupdated>4/19/2012 1:33:58 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericTextBase`2.OnCommitValue(`0)">
            <summary>Called when a new interactive value is about to be committed.</summary>
            <remarks>
            Allows any additional rules to run on a value during a change before it is coerced and assigned.
            The default implementation returns <paramref name="newValue"/> unchanged.
            </remarks>
            <param name="newValue">The new value.</param>
            <returns>The value to commit.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericTextBase`2.CancelValueChange">
            <inheritdoc/>
            <remarks>
            Ensures that any pending value input is cancelled.
            </remarks>
            <lastupdated>4/19/2012 1:34:15 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericTextBase`2.OnCoercedValueChanged(`0,`0)">
            <inheritdoc/>
            <remarks>
            This method calls <see cref="M:NationalInstruments.Controls.Primitives.NumericTextBase`2.InvalidateFormattedValue"/> to update the displayed text with the latest coerced value.
            </remarks>
            <lastupdated>4/19/2012 1:45:26 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericTextBase`2.OnIntervalChanged(`1,`1)">
            <inheritdoc/>
            <remarks>
            This method calls <see cref="M:NationalInstruments.Controls.Primitives.NumericControl`2.InvalidateCoercedValue"/>
             to ensure that <see cref="P:NationalInstruments.Controls.Primitives.NumericTextBase`2.CoercionMode"/> takes account of
            the new interval, if necessary.
            </remarks>
            <lastupdated>4/19/2012 1:46:40 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericTextBase`2.OnValueInputChanged(System.Windows.Controls.TextBox,System.Windows.Controls.TextBox)">
            <summary>
            Occurs when the <see cref="P:NationalInstruments.Controls.Primitives.NumericTextBase`2.ValueInput"/> text box template part is changed.
            </summary>
            <param name="oldValueInput">The old value input text box.</param>
            <param name="newValueInput">The new value input text box.</param>
            <lastupdated>2012-07-18 9:14:10 AM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericTextBase`2.CommitTextChange(System.String)">
            <exclude>[INTERNAL FOR TESTING]</exclude>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericTextBase`2.HandleWhitespace(System.String)">
            <exclude>[INTERNAL FOR TESTING]</exclude>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericTextBase`2.TryParseFormattedValue(System.String,`0@)">
            <exclude>[INTERNAL FOR TESTING]</exclude>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericTextBase`2.NationalInstruments#Controls#Internal#INumericTextBaseInteractorTarget#CommitValueChange">
            <exclude/>
            <lastupdated>12/14/2011 11:48:07 AM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericTextBase`2.RangeProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NumericTextBase`2.Range'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NumericTextBase`2.Range'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericTextBase`2.FormattedValueProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NumericTextBase`2.FormattedValue'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NumericTextBase`2.FormattedValue'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericTextBase`2.ButtonsLocationProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NumericTextBase`2.ButtonsLocation'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NumericTextBase`2.ButtonsLocation'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericTextBase`2.CoercionModeProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NumericTextBase`2.CoercionMode'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NumericTextBase`2.CoercionMode'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericTextBase`2.TextAlignmentProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NumericTextBase`2.TextAlignment'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NumericTextBase`2.TextAlignment'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.NumericTextBase`2.SelectOnFocusProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.NumericTextBase`2.SelectOnFocus'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.NumericTextBase`2.SelectOnFocus'/> dependency property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericTextBase`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.NumericTextBase`2"/> class.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericTextBase`2.OnApplyTemplate">
            <inheritdoc cref="M:System.Windows.FrameworkElement.OnApplyTemplate"/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.NumericTextBase`2.OnRangeChanged(NationalInstruments.Controls.Range{`0},NationalInstruments.Controls.Range{`0})">
            <summary>
            Called when the <see cref="P:NationalInstruments.Controls.Primitives.NumericTextBase`2.Range"/> property changes.
            </summary>
            <param name="oldValue">
            Old value of the <see cref="P:NationalInstruments.Controls.Primitives.NumericTextBase`2.Range"/> property.
            </param>
            <param name="newValue">
            New value of the <see cref="P:NationalInstruments.Controls.Primitives.NumericTextBase`2.Range"/> property.
            </param>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericTextBase`2.ActualRange">
            <inheritdoc/>
            <remarks>
            Returns the value of <see cref="P:NationalInstruments.Controls.Primitives.NumericTextBase`2.Range"/>.
            </remarks>
            <lastupdated>4/19/2012 1:15:42 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericTextBase`2.HandleExponentialInput">
            <summary>
            Gets a value indicating whether to handle text input in exponential scientific notation if
             <see cref="M:NationalInstruments.Controls.Primitives.NumericTextBase`2.ParseFormattedValue(System.String)"/> cannot parse it directly.
            </summary>
            <value>The value is always <see langword="true"/> unless overridden in a derived class.</value>
            <remarks>
            When <see cref="M:NationalInstruments.Controls.Primitives.NumericTextBase`2.ParseFormattedValue(System.String)"/>
            fails with an <see cref="T:System.OverflowException"/> and <see cref="P:NationalInstruments.Controls.Primitives.NumericTextBase`2.HandleExponentialInput"/>
             returns <see langword="true"/>,
            then <see cref="T:NationalInstruments.Controls.Primitives.NumericTextBase`2"/> attempts to manually process the
            exponential part of the input (if present) before calling
            <see cref="M:NationalInstruments.Controls.Primitives.NumericTextBase`2.ParseFormattedValue(System.String)"/>
             again.
            <para>
            The fallback processing of exponential notation only supports base-10 integer exponent values.
            </para>
            </remarks>
            <lastupdated>6/19/2012 10:22:01 AM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericTextBase`2.IsChangePending">
            <inheritdoc/>
            <remarks>
            Gets a value indicating whether there is a text edit in progress.
            </remarks>
            <lastupdated>4/19/2012 1:30:53 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericTextBase`2.Range">
            <summary>Gets or sets the minimum and maximum range allowed for the coerced value of this control. </summary><value>
The default value can vary by <c>TValue</c>, but is usually [0,10].</value><remarks>
Positive and negative infinity are valid values 
for the range. The default is the largest range allowed for the control's data type, including infinities. Empty ranges are not allowed.
</remarks><lastupdated>6/7/2012 12:04:50 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericTextBase`2.FormattedValue">
            <summary>Gets or sets the string representation of the
<see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.CoercedValue" crefType="Unqualified"/>.</summary><value>The string representation of the
<see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.CoercedValue" crefType="Unqualified"/>.</value><lastupdated>6/7/2012 12:03:08 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericTextBase`2.ButtonsLocation">
            <summary>Gets or sets which side of the control, left or right, the buttons are on.</summary><value>The default value is <see cref="F:NationalInstruments.Controls.HorizontalLocation.Right"/>.</value><lastupdated>6/7/2012 12:01:08 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericTextBase`2.CoercionMode">
            <summary>Gets or sets the restrictions on values within the range.</summary><value> The default value is <see cref="P:NationalInstruments.Controls.NumericCoercionMode.None" crefType="PartiallyQualified"/>.</value><remarks>
This property affects what values the end user can input into the control at run time. 
It also affects the <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.CoercedValue" crefType="Unqualified"/>
 when the <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value" crefType="Unqualified"/> is set programmatically. 
</remarks><lastupdated>4/19/2012 10:38:14 AM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericTextBase`2.TextAlignment">
            <summary>Gets or sets the alignment of the contents of the text box.</summary><value>
The default is <see cref="F:System.Windows.TextAlignment.Right"/>.
</value><lastupdated>6/7/2012 12:05:43 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericTextBase`2.SelectOnFocus">
            <summary>Gets or sets a value determining whether the text of a control becomes selected when the control receives the keyboard focus.</summary><value>
 The default value is <see langword="false"/>.</value><lastupdated>4/19/2012 12:46:24 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericTextBase`2.Interactor">
            <summary>
            Gets the interactor helper for the control.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.NumericTextBase`2.ValueInput">
            <summary>Gets the area where an end user interacts with the text representation of the numeric value at run time.</summary><value>The default value is <see langword="null"/>.</value><remarks>
This is set during <see cref="M:NationalInstruments.Controls.Primitives.NumericTextBase`2.OnApplyTemplate"/> if <c>PART_ValueInput</c> is present in the control template.
</remarks><lastupdated>6/7/2012 12:06:59 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.PointerViewModel">
            <exclude/>
            <summary>
            Represents a view model provided to the <see cref="P:NationalInstruments.Controls.Primitives.NumericPointer`2.PointerTemplate" crefType="Unqualified"/>
            of a <see cref="T:NationalInstruments.Controls.Primitives.NumericPointer`2"/> control.
            </summary>
            <threadsafety safety="unsafe"/>
            <lastupdated>5/4/2012 2:58:26 PM</lastupdated>
            <updatedby>LabVIEW</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.PointerViewModel.Apply(System.Windows.FrameworkElement)">
            <exclude/><summary>Applies default layout property settings, if the pointer does not contain assigned values already.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.PointerViewModel.RelativeValueProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.PointerViewModel.RelativeValue'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.PointerViewModel.RelativeValue'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.PointerViewModel.BorderBrushProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.PointerViewModel.BorderBrush'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.PointerViewModel.BorderBrush'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.PointerViewModel.ForegroundProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.PointerViewModel.Foreground'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.PointerViewModel.Foreground'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.PointerViewModel.BorderThicknessProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.PointerViewModel.BorderThickness'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.PointerViewModel.BorderThickness'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.PointerViewModel.BackgroundProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.PointerViewModel.Background'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.PointerViewModel.Background'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.PointerViewModel.PointerBrushProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.PointerViewModel.PointerBrush'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.PointerViewModel.PointerBrush'/> dependency property.
            </returns>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.PointerViewModel.PointerDependencyProperties">
            <summary>Gets the dependency properties applied to the pointer visual.</summary>
            <value>The dependency properties applied to the pointer visual.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.PointerViewModel.RelativeValue">
            <summary>Gets or sets the relative position of the pointer.</summary><value>The default value is 0.0.</value><lastupdated>4/19/2012 3:41:34 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.PointerViewModel.BorderBrush">
            <summary>Gets or sets the border brush of the pointer.</summary><value>The default value is <see langword="null"/>.</value><lastupdated>6/8/2012 2:14:59 PM</lastupdated><updatedby>Aaron Cederquist</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.PointerViewModel.Foreground">
            <summary>Gets or sets the foreground brush of the pointer.</summary><value>The default value is <see langword="null"/>.</value><lastupdated>6/8/2012 2:15:09 PM</lastupdated><updatedby>Aaron Cederquist</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.PointerViewModel.BorderThickness">
            <summary>Gets or sets the border thickness of the pointer.</summary><value> The default value is a zero thickness.</value><lastupdated>6/8/2012 2:15:06 PM</lastupdated><updatedby>Aaron Cederquist</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.PointerViewModel.Background">
            <summary>Gets or sets the background brush of the pointer.</summary><value>The default value is <see langword="null"/>.</value><lastupdated>6/8/2012 2:14:54 PM</lastupdated><updatedby>Aaron Cederquist</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.PointerViewModel.PointerBrush">
            <summary>Gets or sets the brush of the pointer.</summary><value> The default value is <see langword="null"/>.</value><lastupdated>6/8/2012 2:15:20 PM</lastupdated><updatedby>Aaron Cederquist</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.RadialBorder">
            <exclude/><summary>Renders multiple nested radial borders.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RadialBorder.MeasureOverride(System.Windows.Size)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RadialBorder.ArrangeOverride(System.Windows.Size)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RadialBorder.OnRender(System.Windows.Media.DrawingContext)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RadialBorder.GetLayoutClip(System.Windows.Size)">
            <inheritdoc/>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RadialBorder.ArcSweepProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.RadialBorder.ArcSweep'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.RadialBorder.ArcSweep'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RadialBorder.LipSizeProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.RadialBorder.LipSize'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.RadialBorder.LipSize'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RadialBorder.ShowDisabledAdornerProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.RadialBorder.ShowDisabledAdorner'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.RadialBorder.ShowDisabledAdorner'/> dependency property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RadialBorder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.RadialBorder"/> class.
            </summary>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RadialBorder.LogicalChildren">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RadialBorder.BorderStops">
            <summary>Gets the elements used to draw the radial border.</summary><value>The elements used to draw the radial border.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RadialBorder.ArcSweep">
            <summary>Gets or sets the radial arc in which the border is rendered.</summary><value>The default value is a full counter-clockwise circle.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RadialBorder.LipSize">
            <summary>Gets or sets the thickness of the lip on the open edge of the arc.</summary><value>The default value is 0.0.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RadialBorder.ShowDisabledAdorner">
            <summary>Gets or sets a value indicating whether to show a disabled overlay above the border.</summary><value>The default value is <see langword="false"/>.</value>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.RadialBorder.DisabledAdorner">
            <summary>Renders a translucent white overlay over the target control, with the same border shape.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.RadialBorderStop">
            <exclude/><summary>Represents a border layer in a <see cref="T:NationalInstruments.Controls.Primitives.RadialBorder"/> decorator.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RadialBorderStop.ToString">
            <inheritdoc/>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RadialBorderStop.BrushProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.RadialBorderStop.Brush'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.RadialBorderStop.Brush'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RadialBorderStop.ThicknessProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.RadialBorderStop.Thickness'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.RadialBorderStop.Thickness'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RadialBorderStop.LipCornerRadiusProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.RadialBorderStop.LipCornerRadius'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.RadialBorderStop.LipCornerRadius'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RadialBorderStop.VisibilityProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.RadialBorderStop.Visibility'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.RadialBorderStop.Visibility'/> dependency property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RadialBorderStop.OnChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NationalInstruments.Controls.Primitives.RadialBorderStop.Changed"/> event.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="e"/> is <see langword="null"/>.
            </exception>
            <param name="e">
            An instance of <see cref="T:System.EventArgs"/> that contains the event data.
            </param>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RadialBorderStop.Brush">
            <summary>Gets or sets the brush used to render the border element.</summary><value>The default value is <see langword="null"/>.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RadialBorderStop.Thickness">
            <summary>Gets or sets the thickness of the border element.</summary><value>The default value is 0.0.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RadialBorderStop.LipCornerRadius">
            <summary>Gets or sets the lip corner radius of the border element.</summary><value>The default value is 0.0.</value>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RadialBorderStop.Visibility">
            <summary>Gets or sets the visibility of the border element.</summary><value>The default value is <see cref="F:System.Windows.Visibility.Visible"/>.</value>
        </member>
        <member name="E:NationalInstruments.Controls.Primitives.RadialBorderStop.Changed">
            <summary>Occurs when a property on the border stop changes.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.RadialBorderStopCollection">
            <exclude/>
            <summary>
            Represents a collection of <see cref="T:NationalInstruments.Controls.Primitives.RadialBorderStop"/> objects.
            </summary>
            <remarks>
            Use the <see cref="P:NationalInstruments.Controls.Primitives.RadialBorder.BorderStops"/> collection on <see cref="T:NationalInstruments.Controls.Primitives.RadialBorder"/> to determine the border elements used to render the radial border.
            </remarks>
            <threadsafety safety="unsafe"/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RadialBorderStopCollection.#ctor">
            <summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.RadialBorderStopCollection"/> class.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RadialBorderStopCollection.ChangeItemsCore(System.Int32,System.Int32,NationalInstruments.Controls.Primitives.RadialBorderStop[])">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.RadialNumericPointer`2">
            <summary>
            Represents controls designed to indicate and manipulate a single numeric value through use of a sliding element that moves back and forth between two values of a curved range.
            </summary>
            <typeparam name="TValue">The type of the numeric value this control presents.</typeparam>
            <typeparam name="TOffset">The type of data used for an offset by the control.</typeparam>
            <remarks>
            This is the base class of numeric pointers with a curved scale, such as <see cref="T:NationalInstruments.Controls.Gauge`1"/>,
            <see cref="T:NationalInstruments.Controls.Knob`1"/>, and <see cref="T:NationalInstruments.Controls.Meter`1"/>. The appearance and direction of the
            scale can be controlled by setting <see cref="P:NationalInstruments.Controls.Primitives.RadialNumericPointer`2.ScaleArc"/>.
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>6/5/2012 5:00:00 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
            <content>[partial class - CAR #397339]</content>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RadialNumericPointer`2.OnClickOrDragStart(System.Windows.Point)">
            <inheritdoc/>
            <lastupdated>12/14/2011 11:48:20 AM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RadialNumericPointer`2.OnMouseInteractionCompleted">
            <inheritdoc/>
            <lastupdated>5/29/2012 11:48:17 AM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RadialNumericPointer`2.CalculatePointerValue(System.Windows.Point,System.Windows.Point,System.Boolean)">
            <inheritdoc/>
            <lastupdated>12/14/2011 11:48:17 AM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RadialNumericPointer`2.UpdateLastPosition(System.Windows.Point,System.Windows.Point)">
            <inheritdoc />
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RadialNumericPointer`2.SetRelativeAngleOffsetForTesting(System.Double)">
            <exclude>[INTERNAL FOR TESTING]</exclude>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RadialNumericPointer`2.ScaleArcProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.RadialNumericPointer`2.ScaleArc'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.RadialNumericPointer`2.ScaleArc'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.RadialNumericPointer`2.AllowValueWraparoundProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.RadialNumericPointer`2.AllowValueWraparound'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.RadialNumericPointer`2.AllowValueWraparound'/> dependency property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.RadialNumericPointer`2.GetActualMouseAwareCenterPoint">
            <exclude>[INTERNAL FOR TESTING]</exclude>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RadialNumericPointer`2.ScaleArc">
            <summary>Gets or sets the definition of the layout of the scale of this control.</summary><value>
The default value is an <see cref="T:NationalInstruments.Controls.ArcSweep" crefType="Unqualified"/>
with a start angle of 216 degrees and a sweep angle of -252 degrees.
</value><lastupdated>6/7/2012 11:30:20 AM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.RadialNumericPointer`2.AllowValueWraparound">
            <summary>Gets or sets a value indicating whether the control allows the value to wrap around when a user drags the needle. 
</summary><value>The default value is <see langword="false"/>.</value><remarks>
When <see langword="true"/>, 
if you decrement the value below the minimum, the value becomes the maximum, and vice versa. Also, if you drag the 
value with the mouse, the value is allowed to go directly from the minimum to the maximum, and vice versa, without having to move 
along the radial path. 
</remarks><lastupdated>4/19/2012 3:52:11 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.TimeStampTextBox`2">
            <summary>
            Defines a control that allows the viewing and manipulation of time-related types.
            </summary>
            <typeparam name="TValue">The type of the value on the control.</typeparam>
            <typeparam name="TOffset">The type of the offset of the value on the control.</typeparam>
            <lastupdated>2/29/12 8:44:21 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.OnValueFormatterChanged(NationalInstruments.Controls.Primitives.TimeValueFormatter,NationalInstruments.Controls.Primitives.TimeValueFormatter)">
            <summary>
            Called when the value of <see cref="P:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.ValueFormatter"/> property is changed.
            </summary>
            <remarks>
            Override this method in a derived class to provide custom actions when the
            <see cref="P:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.ValueFormatter"/> property changes.
            </remarks>
            <param name="oldFormatter">The old formatter.</param>
            <param name="newFormatter">The new formatter.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.OnValueChanged(`0,`0)">
            <inheritdoc/>
            <lastupdated>2/29/12 8:28:18 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.OnValueInputChanged(System.Windows.Controls.TextBox,System.Windows.Controls.TextBox)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.OnDisplayedValueChanged">
            <summary>
            Called when either the value or the value formatter are changed.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.FormatValue(`0)">
            <inheritdoc/>
            <lastupdated>2/29/12 8:19:25 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.ParseFormattedValue(System.String)">
            <inheritdoc/>
            <lastupdated>2/29/12 8:32:38 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.OnCommitValue(`0)">
            <inheritdoc />
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.HandleValueInputPreviewLostKeyboardFocus">
            <summary>
            Executes relevant code when the ValueInput text box (preview) loses keyboard focus.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.HandleValueInputPreviewKeyDown(System.Windows.Input.Key)">
            <summary>
            Executes relevant code when the ValueInput text box (preview) gets a key down.
            </summary>
            <param name="key">The key that was pressed down.</param>
            <returns>Returns true if the interaction is handled.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.HandleValueInputSelectionChanged">
            <summary>
            Executes relevant code when the ValueInput text box (preview) gets a key down.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.HandleValueInputKeyDown(System.Windows.Input.Key)">
            <summary>
            Executes relevant code when the ValueInput text box gets a key down.
            </summary>
            <param name="key">The key that was pressed down.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.HandleValueInputPreviewMouseDown">
            <summary>
            Executes relevant code when the ValueInput text box gets a (preview) mouse down.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.HandleValueInputKeyboardLostFocus">
            <summary>
            Executes relevant code when the ValueInput text box gets a lost focus event.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.HandleValueInputCommitting(`0)">
            <summary>
            Executes relevant code when the Value has changed. The return object can be a modified version of the original.
            </summary>
            <param name="newValue">The new value being committed.</param>
            <returns>The potentially modified version of the new value.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.GetDisplayValue(`0,System.DateTimeKind)">
            <summary>
            Gets the display value for the specified coerced value and display kind.
            </summary>
            <param name="value">The coerced value.</param>
            <param name="displayKind">The desired display kind.</param>
            <returns>The <paramref name="value"/> with <paramref name="displayKind"/> applied.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.InitializeInputBindings">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.HandleWhitespace(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.NationalInstruments#Controls#Primitives#ITimeStampTextBox{TValue}#ChangeValue(`0)">
            <inheritdoc />
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.NationalInstruments#Controls#Internal#ITimeStampTextBoxInteractorTarget{TValue}#HandleInteractiveValueCommit(`0)">
            <inheritdoc />
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.DisplayKindProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.DisplayKind'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.DisplayKind'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.ValueFormatterProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.ValueFormatter'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.ValueFormatter'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.InteractionModeProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.InteractionMode'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.InteractionMode'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.IsPopupOpenProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.IsPopupOpen'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.IsPopupOpen'/> dependency property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.OnApplyTemplate">
            <inheritdoc cref="M:System.Windows.FrameworkElement.OnApplyTemplate"/>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.DisplayKind">
            <summary>Gets or sets a value indicating how <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.CoercedValue"/> is displayed.</summary><value>A <see cref="T:System.DateTimeKind"/> value indicating how <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.CoercedValue"/> is displayed. The default value is <see cref="F:System.DateTimeKind.Unspecified"/>.</value><remarks>When <see cref="P:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.DisplayKind"/> is <see cref="F:System.DateTimeKind.Unspecified"/>, <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.CoercedValue"/> is displayed as-is.
Otherwise, <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.CoercedValue"/> is converted to specified local or UTC format before it is displayed.</remarks><lastupdated>2014-04-29 12:38:06 PM</lastupdated><updatedby>Paul Hansen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.ValueFormatter">
            <summary>Gets or sets the <see cref="T:NationalInstruments.Controls.Primitives.TimeValueFormatter"/> instance that defines the text formatting of the time value.</summary><value>The <see cref="T:NationalInstruments.Controls.Primitives.TimeValueFormatter"/> instance that defines the text formatting of the time value. The default value is a new <see cref="T:NationalInstruments.Controls.Primitives.TimeValueFormatter"/> object.</value><lastupdated>2012-03-22 1:07:18 PM</lastupdated><updatedby>Jeff Loveless</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.InteractionMode">
            <summary>Gets or sets a flags field that controls how the user can interact with the control.</summary><value>A flags field that controls how the user can interact (keyboard, mouse) with the control (text, buttons).
The default value is all <see cref="T:NationalInstruments.Controls.TimeStampTextBoxInteractionModes"/> modes are enabled: <c>TimeStampTextBoxInteractionModes.ArrowKeys | TimeStampTextBoxInteractionModes.TextInput | TimeStampTextBoxInteractionModes.ButtonClicks | TimeStampTextBoxInteractionModes.ScrollWheel | TimeStampTextBoxInteractionModes.CalendarButton</c>.
</value><remarks>When all interactions are disabled, the <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.IsReadOnly"/> property will return <see langword="true"/>.</remarks><lastupdated>2014-04-29 12:38:06 PM</lastupdated><updatedby>Paul Hansen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.IsPopupOpen">
            <summary>Gets or sets a value indicating whether the calendar popup is currently visible.</summary><value>A value indicating whether the calendar popup is currently visible. The default value is <see langword="false"/>.</value><lastupdated>2012-03-22 1:04:22 PM</lastupdated><updatedby>Jeff Loveless</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.CalendarButton">
            <summary>Gets the <see cref="T:System.Windows.Controls.Primitives.ToggleButton"/> that reveals the <see cref="T:NationalInstruments.Controls.Primitives.DateTimePicker`1"/>.</summary><value>The <see cref="T:System.Windows.Controls.Primitives.ToggleButton"/> that reveals the <see cref="T:NationalInstruments.Controls.Primitives.DateTimePicker`1"/>.</value><lastupdated>2012-03-22 12:50:30 PM</lastupdated><updatedby>Jeff Loveless</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.TimeStampTextBox`2.DateTimePickerContainer">
            <summary>Gets the <see cref="T:System.Windows.Controls.ContentPresenter"/> that hosts the <see cref="T:NationalInstruments.Controls.Primitives.DateTimePicker`1"/> template.</summary><value>The <see cref="T:System.Windows.Controls.ContentPresenter"/> that hosts the <see cref="T:NationalInstruments.Controls.Primitives.DateTimePicker`1"/> template.</value><lastupdated>2012-03-22 1:09:14 PM</lastupdated><updatedby>Jeff Loveless</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Primitives.TimeValueFormatter">
            <summary>Uses a string format argument to display a time value.</summary>
            <lastupdated>2012-07-12 2:12:14 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.TimeValueFormatter.#ctor">
            <summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.TimeValueFormatter"/> class.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.TimeValueFormatter.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Primitives.TimeValueFormatter"/> class with the specified format string.</summary>
            <param name="format">The string format of the time value.</param>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.TimeValueFormatter.GetExpandedFormatString(System.Boolean@)">
            <summary>Gets the full formatting string for the given formatter.</summary>
            <param name="isUtcTimeFormat">On return, contains a value indicating whether the format string is in UTC time.</param>
            <returns>The full, custom-style format string of the value.</returns>
            <lastupdated>2012-07-12 2:21:37 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.TimeValueFormatter.FormatCore``1(``0,NationalInstruments.Controls.Primitives.ValuePresenterArgs)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.TimeValueFormatter.Parse``1(System.String,NationalInstruments.Controls.Primitives.ValuePresenterArgs)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.TimeValueFormatter.TryParse``1(System.String,NationalInstruments.Controls.Primitives.ValuePresenterArgs,``0@)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.TimeValueFormatter.ToString">
            <inheritdoc/>
        </member>
        <member name="F:NationalInstruments.Controls.Primitives.TimeValueFormatter.FormatProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.Primitives.TimeValueFormatter.Format'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.Primitives.TimeValueFormatter.Format'/> dependency property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.Primitives.TimeValueFormatter.CreateInstanceCore">
            <inheritdoc cref="M:System.Windows.Freezable.CreateInstanceCore"/>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.TimeValueFormatter.Format">
            <summary>Gets or sets the string format of the time value.</summary><value>The string format of the time value. The default value is <see langword="null"/>.</value><lastupdated>2012-09-14 10:00:05 AM</lastupdated><updatedby>Jeff Loveless</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.Primitives.TimeValueFormatter.FormatString">
            <summary>
            Gets or sets the <see cref="P:NationalInstruments.Controls.Primitives.TimeValueFormatter.FormatString"/> for the <see cref="P:NationalInstruments.Controls.Primitives.TimeValueFormatter.Format"/> argument.
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.DependentNumericScale">
            <summary>
            Represents the dependent scale in a control with a primary and secondary scale.
            </summary>
            <remarks>This class must exist as a property of a <see cref="T:NationalInstruments.Controls.PrimaryNumericScale"/>.
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>4/9/2012 5:01:48 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.DependentNumericScale.GetDataMapper(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.DependentNumericScale.CreateDefaultPresenter(NationalInstruments.Controls.Primitives.ScaleHost)">
            <inheritdoc cref="M:NationalInstruments.Controls.Primitives.IScale.CreateDefaultPresenter(NationalInstruments.Controls.Primitives.ScaleHost)"/>
        </member>
        <member name="F:NationalInstruments.Controls.DependentNumericScale.MapProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.DependentNumericScale.Map'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.DependentNumericScale.Map'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.DependentNumericScale.DataMapperProxyProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.DependentNumericScale.DataMapperProxy'/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.DependentNumericScale.DataMapperProxy'/> attached property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.DependentNumericScale.GetDataMapperProxy(System.Windows.Controls.Control)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.DependentNumericScale.DataMapperProxy"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.DependentNumericScale.DataMapperProxy"/> property value for the element.
            </returns>
            <remarks>
            Gets the cached data mapper proxy for the given control.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.DependentNumericScale.SetDataMapperProxy(System.Windows.Controls.Control,NationalInstruments.Controls.Data.IDataMapper)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.DependentNumericScale.DataMapperProxy"/> attached property to a specified element.
            </summary>
            <remarks>
            Sets the cached data mapper proxy for the given control.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:NationalInstruments.Controls.Data.IDataMapper"/> value.
            </param>
        </member>
        <member name="P:NationalInstruments.Controls.DependentNumericScale.Map">
            <summary>Gets or sets whether a data mapper can be created from the primary scale this scale is associated with.</summary><value>Allows a data mapper to be created from the primary scale this scale is associated with. 
The default value is a <see cref="T:NationalInstruments.Controls.ScaleToScaleMap"/> object with a constant factor of 1.</value><lastupdated>4/30/2012 1:54:24 PM</lastupdated><updatedby>Aaron Cederquist</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.DependentNumericScale.DependentDataMapper`1">
            <exclude/><summary>Data mapper for dependent scale.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.DependentNumericScale.DependentDataMapper`1.UpdateCore(NationalInstruments.Controls.Data.IDataMapper{`0})">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.DependentNumericScale.DependentDataMapper`1.CanUpdate">
            <inheritdoc/>
        </member>
        <member name="P:NationalInstruments.Controls.DependentNumericScale.DependentDataMapper`1.DataMapper">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.Gauge`1">
            <summary>
            Represents a Measurement Studio Windows Presentation Foundation (WPF) gauge control to display numeric values.
            </summary>
            <typeparam name="TData">The data type of the gauge.
            </typeparam>
            <remarks>
            Typically, you use a gauge as an indicator for a single numeric value through the use of a pointer on a radial dial.
            You can use <see cref="P:System.Windows.Controls.Control.Background"/> ,
            <see cref="P:System.Windows.Controls.Control.Foreground"/>, and
            <see cref="P:NationalInstruments.Controls.Primitives.NumericPointer`2.PointerBrush" crefType="Unqualified"/> to change the appearance of the gauge, and use
            <see cref="F:NationalInstruments.Controls.NumericPointerInteractionModes.Drag" crefType="Unqualified"/>,
            <see cref="F:NationalInstruments.Controls.NumericPointerInteractionModes.EditRange" crefType="Unqualified"/>, and
            <see cref="F:NationalInstruments.Controls.NumericPointerInteractionModes.ScrollWheel" crefType="Unqualified"/> to interact with the gauge at run time.
            <note type="note">
            The default data type for the gauge control is <see cref="T:System.Double"/>. To change the data type, right-click the gauge on the Visual Studio Designer, select <format type="bold">Data Type</format>, then select a different data type.
            </note>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>6/7/2012 12:11:54 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.HorizontalLocation">
            <summary>
            Specifies the location of a control to be on the left or on the right. 
            </summary>
            <lastupdated>4/12/2012 5:54:23 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.HorizontalLocation.Left">
            <summary>
            The control is positioned on the left.
            </summary>
            <lastupdated>4/12/2012 5:55:16 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.HorizontalLocation.Right">
            <summary>
            The control is positioned on the right.
            </summary>
            <lastupdated>4/12/2012 5:55:27 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Knob`1">
             <summary>
             Represents a Measurement Studio Windows Presentation Foundation (WPF) knob control to display and input numeric values.
             </summary>
             <typeparam name="TData">The data type of the gauge.</typeparam>
             <remarks>
             Typically, you use a knob as an input control for a single numeric value through the use of a pointer on a radial dial.
            
             You can use <see cref="P:System.Windows.Controls.Control.Background"/>,
             <see cref="P:System.Windows.Controls.Control.Foreground"/>, and
             <see cref="P:NationalInstruments.Controls.Primitives.NumericPointer`2.PointerBrush" crefType="Unqualified"/> to change the appearance of the knob, and use
             <see cref="F:NationalInstruments.Controls.NumericPointerInteractionModes.Drag" crefType="Unqualified"/>,
             <see cref="F:NationalInstruments.Controls.NumericPointerInteractionModes.EditRange" crefType="Unqualified"/>, and
             <see cref="F:NationalInstruments.Controls.NumericPointerInteractionModes.ScrollWheel" crefType="Unqualified"/> to interact with the knob at runtime.
             <note type="note">
             The default data type for the knob control is <see cref="T:System.Double"/>. To change the data type, right-click the knob on the Visual Studio Designer,
             select <format type="bold">Data Type</format>, then select a different data type.
             </note>
             </remarks>
             <threadsafety safety="unsafe"/>
             <lastupdated>4/10/2012 5:30:21 PM</lastupdated>
             <updatedby>National Instruments</updatedby>
             <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.MechanicalAction">
            <summary>
            Specifies when the <see cref="P:NationalInstruments.Controls.Primitives.INumericControl`2.Value" crefType="Unqualified"/> 
             property of a control updates during a user drag operation.
            </summary>
            <lastupdated>4/12/2012 5:59:07 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.MechanicalAction.SwitchWhileDragging">
            <summary>
            Updates the value property continuously while the user drags the pointer, and keeps the location value for the last location where the pointer was released. 
            </summary>
            <remarks>
            <see cref="P:NationalInstruments.Controls.Primitives.INumericControl`2.Value" crefType="Unqualified"/>   updates continuously while the user drags the pointer. When the user releases the 
            pointer, <see cref="P:NationalInstruments.Controls.Primitives.INumericControl`2.Value" crefType="Unqualified"/>   stays as the last location to which the user dragged it.
            </remarks>
            <lastupdated>4/12/2012 6:12:12 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.MechanicalAction.SwitchWhenReleased">
            <summary>Maintains the original location value while being dragged by the user at run time, then updates the location value when the pointer is released. </summary>
            <remarks>
            <see cref="P:NationalInstruments.Controls.Primitives.INumericControl`2.Value" crefType="Unqualified"/>  remains unchanged while the user drags the pointer. Only when the user 
            releases the pointer is <see cref="P:NationalInstruments.Controls.Primitives.INumericControl`2.Value" crefType="Unqualified"/>  updated for the new location.
            </remarks>
            <lastupdated>4/12/2012 6:07:33 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.MechanicalAction.SwitchUntilReleased">
            <summary>
            Updates the value while being dragged by the user at run time, then returns to the original value at release.
            </summary>
            <remarks>
            <see cref="P:NationalInstruments.Controls.Primitives.INumericControl`2.Value" crefType="Unqualified"/> 
            updates continuously while the user drags the pointer. When the user releases the 
            pointer, <see cref="P:NationalInstruments.Controls.Primitives.INumericControl`2.Value" crefType="Unqualified"/> 
             returns to the value it had before the drag operation began.
            </remarks>
            <lastupdated>4/12/2012 6:05:40 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Meter`1">
            <summary>
            Represents a Measurement Studio Windows Presentation Foundation (WPF) meter control to display numeric values on half of a radial dial.
            </summary>
            <typeparam name="TData">The data type of the meter.</typeparam>
            <remarks>
            Typically, you use a meter as an indicator for a single numeric value through the use of a pointer on half of a radial dial.
            You can use <see cref="P:System.Windows.Controls.Control.Background"/>,
            <see cref="P:System.Windows.Controls.Control.Foreground"/>, and
            <see cref="P:NationalInstruments.Controls.Primitives.NumericPointer`2.PointerBrush" crefType="Unqualified"/> to change the appearance of the meter, and use
            <see cref="F:NationalInstruments.Controls.NumericPointerInteractionModes.Drag" crefType="Unqualified"/>,
            <see cref="F:NationalInstruments.Controls.NumericPointerInteractionModes.EditRange" crefType="Unqualified"/>, and
            <see cref="F:NationalInstruments.Controls.NumericPointerInteractionModes.ScrollWheel" crefType="Unqualified"/> to interact with the meter at run time.
            <note type="note">
            The default data type for the meter control is <see cref="T:System.Double"/>. To change the data type, right-click the meter on the Visual Studio Designer,
            select <format type="bold">Data Type</format>, then select a different data type.
            </note>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>6/7/2012 12:14:07 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.NumericCoercionMode">
            <summary>
            Represents an algorithm used to coerce the value of a numeric text box. 
            </summary>
            <remarks>
            You can derive from this class to create a custom coercion algorithm for members, such as a custom coercion mode for an <see cref="T:NationalInstruments.Controls.Primitives.NumericTextBase`2" crefType="Unqualified"/>. 
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>6/8/2012 2:32:26 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.NumericCoercionMode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.NumericCoercionMode" crefType="Unqualified"/> class.
            </summary>
            <lastupdated>11/2/2011 1:46:26 PM</lastupdated>
            <updatedby>Staci Heien</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.NumericCoercionMode.CreateToIntervalFromBaseMode(System.Object)">
            <summary>
            Gets a mode that coerces the value to the nearest <see cref="P:NationalInstruments.Controls.Primitives.INumericControl`2.Interval" crefType="Unqualified"/> multiple, 
            starting at the specified base value.
            </summary>
            <param name="intervalBase">
            The base value from which to start when coercing a value to the nearest <see cref="P:NationalInstruments.Controls.Primitives.INumericControl`2.Interval"/> multiple.
            </param>
            <returns>
            A mode that coerces the value to the nearest <see cref="P:NationalInstruments.Controls.Primitives.INumericControl`2.Interval" crefType="Unqualified"/>  multiple.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="intervalBase"/> is <see langword="null"/>.</exception>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.Primitives.NumericTextBase`2.CoercionMode"/> property to interval coercion starting from a base of 1.
            <code lang="XAML">
            &lt;ni:NumericTextBoxDouble CoercionMode="ToIntervalFromBase: 1" /&gt;
            </code>
            </example>
            <lastupdated>2012-07-03 12:27:47 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.NumericCoercionMode.CoerceValue``2(NationalInstruments.Controls.Primitives.INumericControl{``0,``1},``0)">
            <summary>
            Coerces the specified value with respect to the specified context.
            </summary>
            <typeparam name="TValue">The type of the data value.</typeparam>
            <typeparam name="TOffset">The type of data used for an offset by the control.</typeparam>
            <param name="context">An <see cref="T:NationalInstruments.Controls.Primitives.INumericControl`2"/> implementation that specifies the context in 
            which <see cref="M:NationalInstruments.Controls.NumericCoercionMode.CoerceValue``2(NationalInstruments.Controls.Primitives.INumericControl{``0,``1},``0)" crefType="Unqualified"/> is called.</param>
            <param name="value">The value to coerce.</param>
            <returns>
            The result of coercing <paramref name="value"/> according to the mode's algorithm.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="context"/> is <see langword="null"/>.
            </exception>
            <lastupdated>4/10/2012 1:58:07 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.NumericCoercionMode.CoerceValueCore``2(NationalInstruments.Controls.Primitives.INumericControl{``0,``1},``0)">
            <inheritdoc cref="M:NationalInstruments.Controls.NumericCoercionMode.CoerceValue``2(NationalInstruments.Controls.Primitives.INumericControl{``0,``1},``0)"/>
        </member>
        <member name="M:NationalInstruments.Controls.NumericCoercionMode.GetMultipleIncrementValue``2(NationalInstruments.Controls.Primitives.INumericControl{``0,``1},``0,System.Int32)">
            <summary>
            Gets the value after increasing or decreasing by the specified multiple.
            </summary>
            <typeparam name="TValue">The type of the data value.</typeparam>
            <typeparam name="TOffset">The type of data used for an offset by the control.</typeparam>
            <param name="context">An <see cref="T:NationalInstruments.Controls.Primitives.INumericControl`2"/> implementation that specifies the context in 
            which <see cref="M:NationalInstruments.Controls.NumericCoercionMode.GetMultipleIncrementValue``2(NationalInstruments.Controls.Primitives.INumericControl{``0,``1},``0,System.Int32)"/> is called.</param>
            <param name="value">The value to adjust.</param>
            <param name="multiple">The multiple used to adjust value.</param>
            <returns>The new value to use.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="context"/> is <see langword="null"/>.
            </exception>
            <lastupdated>4/10/2012 3:57:05 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.NumericCoercionMode.GetMultipleIncrementValueCore``2(NationalInstruments.Controls.Primitives.INumericControl{``0,``1},``0,System.Int32)">
            <inheritdoc cref="M:NationalInstruments.Controls.NumericCoercionMode.GetMultipleIncrementValue``2(NationalInstruments.Controls.Primitives.INumericControl{``0,``1},``0,System.Int32)"/>
            <remarks>
            The default implementation increases or decreases value by the specified multiple of <see cref="P:NationalInstruments.Controls.Primitives.INumericControl`2.Interval" crefType="Unqualified"/> and returns the coerced result.
            </remarks>
            <lastupdated>4/10/2012 1:14:40 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.NumericCoercionMode.IntervalCoercionLogCategory">
            <summary>The log category for implementations of <see cref="T:NationalInstruments.Controls.Internal.INumericCoercionModeOperations`2"/>.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.NumericCoercionMode.GetNumericCoercionModeOperations``2">
            <exclude/>
            <summary>Creates an <see cref="T:NationalInstruments.Controls.Internal.INumericCoercionModeOperations`2"/> instance for the specified types.</summary>
            <typeparam name="TValue">The value type.</typeparam>
            <typeparam name="TOffset">The offset type.</typeparam>
        </member>
        <member name="P:NationalInstruments.Controls.NumericCoercionMode.None">
            <summary>
            Gets a mode that applies no coercion, returning the given value unchanged.
            </summary>
            <value>
            A <see cref="T:NationalInstruments.Controls.NumericCoercionMode" crefType="Unqualified"/> object indicating that no coercion is applied. 
            </value>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.Primitives.NumericTextBase`2.CoercionMode"/> property to <see cref="P:NationalInstruments.Controls.NumericCoercionMode.None"/>.
            <code lang="XAML">
            &lt;ni:NumericTextBoxDouble CoercionMode="None" /&gt;
            </code>
            </example>
            <lastupdated>2012-07-03 12:27:47 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.NumericCoercionMode.ToIntervalFromMinimum">
            <summary>
            Gets a mode that coerces the value to the nearest <see cref="P:NationalInstruments.Controls.Primitives.INumericControl`2.Interval" crefType="Unqualified"/> multiple, 
            starting at the  
            <see cref="P:NationalInstruments.Controls.Range`1.Minimum" crefType="Unqualified"/> value of 
            <see cref="P:NationalInstruments.Controls.Primitives.NumericTextBase`2.Range"/>.
            </summary>
            <value>
            A <see cref="T:NationalInstruments.Controls.NumericCoercionMode" crefType="Unqualified"/> object that coerces values to discrete intervals. 
            </value>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.Primitives.NumericTextBase`2.CoercionMode"/> property to <see cref="P:NationalInstruments.Controls.NumericCoercionMode.ToIntervalFromMinimum"/>.
            <code lang="XAML">
            &lt;ni:NumericTextBoxDouble CoercionMode="ToIntervalFromMinimum" /&gt;
            </code>
            </example>
            <lastupdated>2012-07-03 12:27:47 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.NumericCoercionMode.UnderlyingType">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.NumericCoercionMode.NoneCoercionMode">
            <summary>Implements the None coercion mode.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.NumericCoercionMode.ToIntervalCoercionMode">
            <summary>Implements the ToInterval coercion mode.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.NumericCoercionMode.ToIntervalFromMinimumCoercionMode">
            <summary>Implements the ToIntervalFromMinimum coercion mode.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.NumericCoercionMode.ToIntervalFromBaseCoercionMode">
            <summary>Implements the ToIntervalFromBase coercion mode.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.NumericTextBoxDouble">
            <summary>Provides the <see cref="T:System.Double"/> implementation for <see cref="T:NationalInstruments.Controls.NumericTextBox`1" crefType="Unqualified"/>.</summary><remarks>
      The default data type for the numeric text box control is <see cref="T:System.Double"/>.
      To change the data type, right-click the numeric text box on the Visual Studio Designer,
      select <format type="bold">Data Type</format>, then select a different data type.
    </remarks><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.NumericTextBox`1">
            <summary>
            Represents a Measurement Studio Windows Presentation Foundation (WPF) control to display and manipulate decimal numeric values as text.
            </summary>
            <typeparam name="TData">The type of data used by the control.</typeparam>
            <remarks>
            Typically, you use the numeric text box as either an indicator or an input control for a single numeric value.
            You can use <see cref="P:System.Windows.Controls.Control.Background"/>,
            <see cref="P:System.Windows.Controls.Control.Foreground"/>, and
            all the font properties to change the appearance of the numeric text box, and use
            <see cref="F:NationalInstruments.Controls.NumericTextBoxInteractionModes.ArrowKeys" crefType="Unqualified"/>,
            <see cref="F:NationalInstruments.Controls.NumericTextBoxInteractionModes.ScrollWheel" crefType="Unqualified"/>,
            <see cref="F:NationalInstruments.Controls.NumericTextBoxInteractionModes.ButtonClicks" crefType="Unqualified"/>, and
            <see cref="F:NationalInstruments.Controls.NumericTextBoxInteractionModes.TextInput" crefType="Unqualified"/>
            to determine how the user can interact with the numeric text box at run time.
            <para>
            <see cref="P:NationalInstruments.Controls.Primitives.NumericTextBase`2.Range" crefType="Unqualified"/> defines the range of valid values for the control.
            You can set the <see cref="P:NationalInstruments.Controls.Primitives.NumericTextBase`2.CoercionMode" crefType="Unqualified"/> property to allow
            either continuous or discrete values.
            <note type="note">
            The default data type for the numeric text box is <see cref="T:System.Double"/>. To change the data type, right-click the meter on the Visual Studio Designer,
            select <format type="bold">Data Type</format>, then select a different data type.
            </note>
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>6/7/2012 12:52:43 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.NumericTextBox`1.#ctor">
            <summary>
            Constructs an instance of NumericTextBox.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.NumericTextBox`1.ClipCoercedValue(`0)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.NumericTextBox`1.FormatValue(`0)">
            <inheritdoc/>
            <remarks>
            Formats <paramref name="value"/> using the <see cref="P:NationalInstruments.Controls.NumericTextBox`1.ValueFormatter"/>.
            </remarks>
            <lastupdated>6/7/2012 12:46:17 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.NumericTextBox`1.ParseFormattedValue(System.String)">
            <inheritdoc/>
            <remarks>
            Parses <paramref name="input"/> using the <see cref="P:NationalInstruments.Controls.NumericTextBox`1.ValueFormatter"/>.
            </remarks>
            <lastupdated>6/7/2012 12:31:07 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Controls.NumericTextBox`1.AllowUndefinedValuesProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.NumericTextBox`1.AllowUndefinedValues'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.NumericTextBox`1.AllowUndefinedValues'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.NumericTextBox`1.InteractionModeProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.NumericTextBox`1.InteractionMode'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.NumericTextBox`1.InteractionMode'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.NumericTextBox`1.ValueFormatterProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.NumericTextBox`1.ValueFormatter'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.NumericTextBox`1.ValueFormatter'/> dependency property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.NumericTextBox`1.OnValueFormatterChanged(NationalInstruments.Controls.Primitives.ValueFormatter,NationalInstruments.Controls.Primitives.ValueFormatter)">
            <summary>
            Called when the <see cref="P:NationalInstruments.Controls.NumericTextBox`1.ValueFormatter"/> property changes.
            </summary>
            <param name="oldValue">
            Old value of the <see cref="P:NationalInstruments.Controls.NumericTextBox`1.ValueFormatter"/> property.
            </param>
            <param name="newValue">
            New value of the <see cref="P:NationalInstruments.Controls.NumericTextBox`1.ValueFormatter"/> property.
            </param>
        </member>
        <member name="P:NationalInstruments.Controls.NumericTextBox`1.AllowUndefinedValues">
            <summary>Gets or sets a value indicating whether undefined values are displayed.</summary><value>A value indicating whether undefined values, such as <see cref="F:System.Double.NaN"/> or <see langword="null"/>, are displayed. The default value is <see langword="true"/>.</value><remarks>Setting this property to <see langword="true"/> allows you to type in undefined values
and see any undefined values that are programmatically assigned to the <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.Value"/> property;
<see langword="false"/> prevents this behavior.</remarks><lastupdated>6/7/2012 12:21:47 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.NumericTextBox`1.InteractionMode">
            <summary>Gets or sets a flags field that controls how the user can interact with the control.</summary><value>A flags field that controls how the user can interact (keyboard, mouse) with the control (text, buttons).
The default value is all <see cref="T:NationalInstruments.Controls.NumericTextBoxInteractionModes"/> modes are enabled: <c>NumericTextBoxInteractionModes.ArrowKeys | NumericTextBoxInteractionModes.TextInput | NumericTextBoxInteractionModes.ButtonClicks | NumericTextBoxInteractionModes.ScrollWheel</c>.
</value><remarks>When all interactions are disabled, the <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.IsReadOnly"/> property will return <see langword="true"/>.</remarks><lastupdated>2014-04-29 12:38:06 PM</lastupdated><updatedby>Paul Hansen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.NumericTextBox`1.ValueFormatter">
            <summary>Gets or sets an object used to format a data value into a string representation.</summary><value>The <see cref="T:NationalInstruments.Controls.Primitives.ValueFormatter"/> used to format a data value into a string representation. The default value is a new <see cref="T:NationalInstruments.Controls.GeneralValueFormatter"/> object.</value><remarks>
The formatter is used to format the value displayed by the numeric text box, and to parse inputted values.
</remarks><lastupdated>6/7/2012 12:28:50 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.SliderDouble">
            <summary>Provides the <see cref="T:System.Double"/> implementation for <see cref="T:NationalInstruments.Controls.Slider`1" crefType="Unqualified"/>.</summary><remarks>
      The default data type for the slider control is <see cref="T:System.Double"/>.
      To change the data type, right-click the slider on the Visual Studio Designer,
      select <format type="bold">Data Type</format>, then select a different data type.
    </remarks><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Slider`1">
            <summary>
            Represents a Measurement Studio Windows Presentation Foundation (WPF) slider control to indicate a single numeric value through use of a thumb that slides along a track as the value increases.
            </summary>
            <typeparam name="TData">The data type of the numeric value the slider presents.</typeparam>
            <remarks>
            <para>
            You can use <see cref="P:System.Windows.Controls.Control.Background"/>,
            <see cref="P:System.Windows.Controls.Control.Foreground"/>, and
            <see cref="P:NationalInstruments.Controls.Primitives.NumericPointer`2.PointerBrush" crefType="Unqualified"/> to change the appearance of the slider, and use
            <see cref="F:NationalInstruments.Controls.NumericPointerInteractionModes.Drag" crefType="Unqualified"/>,
            <see cref="F:NationalInstruments.Controls.NumericPointerInteractionModes.EditRange" crefType="Unqualified"/>, and
            <see cref="F:NationalInstruments.Controls.NumericPointerInteractionModes.ScrollWheel" crefType="Unqualified"/> to interact with the slider at run time.
            </para>
            <para>
            The track behind the thumb fills with the <see cref="P:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.Fill" crefType="Unqualified"/>
             brush as the thumb moves along. By changing the <see cref="P:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.Fill" crefType="Unqualified"/>
             property to <c>Transparent</c> you can
            have a thumb that moves along a track without leaving any trail behind it.
            <note type="note">
            The default data type for the slider control is <see cref="T:System.Double"/>. To change the data type, right-click the slider on the Visual Studio Designer,
            select <format type="bold">Data Type</format>, then select a different data type.
            </note>
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>4/30/2012 3:31:48 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Slider`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Slider`1" crefType="Unqualified"/> class.
            </summary>
            <lastupdated>11/2/2011 1:49:51 PM</lastupdated>
            <updatedby>Staci Heien</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.TankDouble">
            <summary>Provides the <see cref="T:System.Double"/> implementation for <see cref="T:NationalInstruments.Controls.Tank`1" crefType="Unqualified"/>.</summary><remarks>
      The default data type for the tank control is <see cref="T:System.Double"/>.
      To change the data type, right-click the tank on the Visual Studio Designer,
      select <format type="bold">Data Type</format>, then select a different data type.
    </remarks><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.Tank`1">
            <summary>
            Represents a Measurement Studio Windows Presentation Foundation (WPF) tank control that indicates a single numeric value through use of a background that is filled,
            like a water tank, as the value increases.
            </summary>
            <typeparam name="TData">The data type of the numeric value the tank presents.</typeparam>
            <remarks>
            By default, the tank fills from bottom to top. The <see cref="P:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.Orientation"/>
            and <see cref="P:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.IsInverted"/>
            properties can be used to make it fill from other directions.
            <para>
            You can use <see cref="P:System.Windows.Controls.Control.Background"/>,
            <see cref="P:System.Windows.Controls.Control.Foreground"/>, and
            <see cref="P:NationalInstruments.Controls.Primitives.NumericPointer`2.PointerBrush" crefType="Unqualified"/> to change the appearance of the tank, and use
            <see cref="F:NationalInstruments.Controls.NumericPointerInteractionModes.Drag" crefType="Unqualified"/>,
            <see cref="F:NationalInstruments.Controls.NumericPointerInteractionModes.EditRange" crefType="Unqualified"/>, and
            <see cref="F:NationalInstruments.Controls.NumericPointerInteractionModes.ScrollWheel" crefType="Unqualified"/> to interact with the tank at run time.
            <note type="note">
            The default data type for the tank control is <see cref="T:System.Double"/>. To change the data type, right-click the tank on the Visual Studio Designer,
            select <format type="bold">Data Type</format>, then select a different data type.
            </note></para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>6/7/2012 1:03:08 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.Tank`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.Tank`1" crefType="Unqualified"/> class.
            </summary>
            <lastupdated>11/2/2011 1:49:51 PM</lastupdated>
            <updatedby>Staci Heien</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.KnobDouble">
            <summary>Provides the <see cref="T:System.Double"/> implementation for <see cref="T:NationalInstruments.Controls.Knob`1" crefType="Unqualified"/>.</summary><remarks>
      The default data type for the knob control is <see cref="T:System.Double"/>.
      To change the data type, right-click the knob on the Visual Studio Designer,
      select <format type="bold">Data Type</format>, then select a different data type.
    </remarks><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.MeterDouble">
            <summary>Provides the <see cref="T:System.Double"/> implementation for <see cref="T:NationalInstruments.Controls.Meter`1" crefType="Unqualified"/>.</summary><remarks>
      The default data type for the meter control is <see cref="T:System.Double"/>.
      To change the data type, right-click the meter on the Visual Studio Designer,
      select <format type="bold">Data Type</format>, then select a different data type.
    </remarks><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.GaugeDouble">
            <summary>Provides the <see cref="T:System.Double"/> implementation for <see cref="T:NationalInstruments.Controls.Gauge`1" crefType="Unqualified"/>.</summary><remarks>
      The default data type for the gauge control is <see cref="T:System.Double"/>.
      To change the data type, right-click the gauge on the Visual Studio Designer,
      select <format type="bold">Data Type</format>, then select a different data type.
    </remarks><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.NumericTextBoxSingle">
            <inheritdoc cref="T:NationalInstruments.Controls.NumericTextBoxDouble"/><summary>Provides the <see cref="T:System.Single"/> implementation for <see cref="T:NationalInstruments.Controls.NumericTextBox`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.SliderSingle">
            <inheritdoc cref="T:NationalInstruments.Controls.SliderDouble"/><summary>Provides the <see cref="T:System.Single"/> implementation for <see cref="T:NationalInstruments.Controls.Slider`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.TankSingle">
            <inheritdoc cref="T:NationalInstruments.Controls.TankDouble"/><summary>Provides the <see cref="T:System.Single"/> implementation for <see cref="T:NationalInstruments.Controls.Tank`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.KnobSingle">
            <inheritdoc cref="T:NationalInstruments.Controls.KnobDouble"/><summary>Provides the <see cref="T:System.Single"/> implementation for <see cref="T:NationalInstruments.Controls.Knob`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.MeterSingle">
            <inheritdoc cref="T:NationalInstruments.Controls.MeterDouble"/><summary>Provides the <see cref="T:System.Single"/> implementation for <see cref="T:NationalInstruments.Controls.Meter`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.GaugeSingle">
            <inheritdoc cref="T:NationalInstruments.Controls.GaugeDouble"/><summary>Provides the <see cref="T:System.Single"/> implementation for <see cref="T:NationalInstruments.Controls.Gauge`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.NumericTextBoxInt64">
            <inheritdoc cref="T:NationalInstruments.Controls.NumericTextBoxDouble"/><summary>Provides the <see cref="T:System.Int64"/> implementation for <see cref="T:NationalInstruments.Controls.NumericTextBox`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.SliderInt64">
            <inheritdoc cref="T:NationalInstruments.Controls.SliderDouble"/><summary>Provides the <see cref="T:System.Int64"/> implementation for <see cref="T:NationalInstruments.Controls.Slider`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.TankInt64">
            <inheritdoc cref="T:NationalInstruments.Controls.TankDouble"/><summary>Provides the <see cref="T:System.Int64"/> implementation for <see cref="T:NationalInstruments.Controls.Tank`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.KnobInt64">
            <inheritdoc cref="T:NationalInstruments.Controls.KnobDouble"/><summary>Provides the <see cref="T:System.Int64"/> implementation for <see cref="T:NationalInstruments.Controls.Knob`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.MeterInt64">
            <inheritdoc cref="T:NationalInstruments.Controls.MeterDouble"/><summary>Provides the <see cref="T:System.Int64"/> implementation for <see cref="T:NationalInstruments.Controls.Meter`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.GaugeInt64">
            <inheritdoc cref="T:NationalInstruments.Controls.GaugeDouble"/><summary>Provides the <see cref="T:System.Int64"/> implementation for <see cref="T:NationalInstruments.Controls.Gauge`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.RadixNumericTextBoxInt64">
            <inheritdoc cref="T:NationalInstruments.Controls.RadixNumericTextBoxInt32"/><summary>Provides the <see cref="T:System.Int64"/> implementation for <see cref="T:NationalInstruments.Controls.RadixNumericTextBox`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.RadixNumericTextBox`1">
            <summary>
            Represents a Measurement Studio Windows Presentation Foundation (WPF) control to display and manipulate numeric values in various bases.
            </summary>
            <typeparam name="TData">The type of data used by the control.</typeparam>
            <remarks>
            Typically, you use the radix numeric text box as either an indicator or an input control for a single integer numeric value
            that may need to be displayed or edited in a non-standard numeric base. This can be accomplished by setting
            <see cref="T:NationalInstruments.Controls.RadixBase"/> to <see cref="F:NationalInstruments.Controls.RadixBase.Binary"/>,
            <see cref="F:NationalInstruments.Controls.RadixBase.Octal"/>,
            <see cref="F:NationalInstruments.Controls.RadixBase.Decimal"/>, or
            <see cref="F:NationalInstruments.Controls.RadixBase.Hexadecimal"/>, or by changing the radix base at run time via a
            drop list on the control.
            <para>
            You can use <see cref="P:System.Windows.Controls.Control.Background"/>,
            <see cref="P:System.Windows.Controls.Control.Foreground"/>, and
            all the font properties to change the appearance of the radix numeric text box, and use
            <see cref="F:NationalInstruments.Controls.NumericTextBoxInteractionModes.ArrowKeys" crefType="Unqualified"/>,
            <see cref="F:NationalInstruments.Controls.NumericTextBoxInteractionModes.ScrollWheel" crefType="Unqualified"/>,
            <see cref="F:NationalInstruments.Controls.NumericTextBoxInteractionModes.ButtonClicks" crefType="Unqualified"/>, and
            <see cref="F:NationalInstruments.Controls.NumericTextBoxInteractionModes.TextInput" crefType="Unqualified"/>
            to determine how a user can interact with the control at run time.
            </para>
            <para>
            <see cref="P:NationalInstruments.Controls.Primitives.NumericTextBase`2.Range" crefType="Unqualified"/> defines the range of valid values for the control.
            You can set the <see cref="P:NationalInstruments.Controls.Primitives.NumericTextBase`2.CoercionMode" crefType="Unqualified"/> property to allow
            either continuous or discrete values.
            <note type="note">
            The default data type for the radix numeric text box is <see cref="T:System.Int32"/>. To change the data type, right-click the meter on the Visual Studio Designer,
            select <format type="bold">Data Type</format>, then select a different data type. Continuous data types such as <see cref="T:System.Double"/>
            and <see cref="T:System.Single"/> are not available.
            </note>
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>6/7/2012 12:58:36 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.RadixNumericTextBox`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.RadixNumericTextBox`1"/> class.
            </summary>
        </member>
        <member name="M:NationalInstruments.Controls.RadixNumericTextBox`1.ShouldCharacterCauseRoundingAwayFromZero(System.Char,System.String)">
            <inheritdoc/>
            <remarks>
            Determines the rounding character based on <see cref="P:NationalInstruments.Controls.RadixNumericTextBox`1.RadixBase"/>.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Controls.RadixNumericTextBox`1.FormatValue(`0)">
            <inheritdoc/>
            <remarks>
            Formats the value according to <see cref="P:NationalInstruments.Controls.RadixNumericTextBox`1.RadixBase"/>.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Controls.RadixNumericTextBox`1.ParseFormattedValue(System.String)">
            <inheritdoc/>
            <remarks>
            Parses the value according to <see cref="P:NationalInstruments.Controls.RadixNumericTextBox`1.RadixBase"/>.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Controls.RadixNumericTextBox`1.CreateValueFormatter">
            <summary>Creates the value formatter used to display values.</summary>
            <returns>The <see cref="T:NationalInstruments.Controls.RadixValueFormatter"/> used to display values.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.RadixNumericTextBox`1.InvalidateValueFormatter">
            <summary>Invalidates the current value formatter.</summary>
            <remarks>Used when the result of <see cref="M:NationalInstruments.Controls.RadixNumericTextBox`1.CreateValueFormatter"/> has changed.</remarks>
        </member>
        <member name="F:NationalInstruments.Controls.RadixNumericTextBox`1.RadixVisibilityProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.RadixNumericTextBox`1.RadixVisibility'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.RadixNumericTextBox`1.RadixVisibility'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.RadixNumericTextBox`1.InteractionModeProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.RadixNumericTextBox`1.InteractionMode'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.RadixNumericTextBox`1.InteractionMode'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.RadixNumericTextBox`1.RadixBaseProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.RadixNumericTextBox`1.RadixBase'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.RadixNumericTextBox`1.RadixBase'/> dependency property.
            </returns>
        </member>
        <member name="P:NationalInstruments.Controls.RadixNumericTextBox`1.HandleExponentialInput">
            <inheritdoc/>
            <remarks>
            Only returns true if the radix base is decimal.
            </remarks>
        </member>
        <member name="P:NationalInstruments.Controls.RadixNumericTextBox`1.RadixVisibility">
            <summary>Gets or sets the visibility of the radix drop list.</summary><value>The visibility of the radix drop list. The default value is <see cref="F:System.Windows.Visibility.Visible"/>.</value><lastupdated>4/12/2012 4:08:14 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.RadixNumericTextBox`1.InteractionMode">
            <summary>Gets or sets a flags field that controls how the user can interact with the control.</summary><value>A flags field that controls how the user can interact (keyboard, mouse) with the control (text, buttons).
The default value is all <see cref="T:NationalInstruments.Controls.NumericTextBoxInteractionModes"/> modes are enabled: <c>NumericTextBoxInteractionModes.ArrowKeys | NumericTextBoxInteractionModes.TextInput | NumericTextBoxInteractionModes.ButtonClicks | NumericTextBoxInteractionModes.ScrollWheel</c>.
</value><remarks>When all interactions are disabled, the <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.IsReadOnly"/> property will return <see langword="true"/>.</remarks><lastupdated>2014-04-29 12:38:06 PM</lastupdated><updatedby>Paul Hansen</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.RadixNumericTextBox`1.RadixBase">
            <summary>Gets or sets the base to use when displaying the <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.CoercedValue"/> in the text box.</summary><value>The base to use when displaying the <see cref="P:NationalInstruments.Controls.Primitives.NumericControl`2.CoercedValue"/> in the text box. The default value is <see cref="F:NationalInstruments.Controls.RadixBase.Decimal"/>.</value><lastupdated>4/12/2012 4:03:46 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.RadixNumericTextBox`1.ValueFormatter">
            <summary>
            Gets or sets the radix value formatter used to display values.
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.NumericTextBoxInt32">
            <inheritdoc cref="T:NationalInstruments.Controls.NumericTextBoxDouble"/><summary>Provides the <see cref="T:System.Int32"/> implementation for <see cref="T:NationalInstruments.Controls.NumericTextBox`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.SliderInt32">
            <inheritdoc cref="T:NationalInstruments.Controls.SliderDouble"/><summary>Provides the <see cref="T:System.Int32"/> implementation for <see cref="T:NationalInstruments.Controls.Slider`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.TankInt32">
            <inheritdoc cref="T:NationalInstruments.Controls.TankDouble"/><summary>Provides the <see cref="T:System.Int32"/> implementation for <see cref="T:NationalInstruments.Controls.Tank`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.KnobInt32">
            <inheritdoc cref="T:NationalInstruments.Controls.KnobDouble"/><summary>Provides the <see cref="T:System.Int32"/> implementation for <see cref="T:NationalInstruments.Controls.Knob`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.MeterInt32">
            <inheritdoc cref="T:NationalInstruments.Controls.MeterDouble"/><summary>Provides the <see cref="T:System.Int32"/> implementation for <see cref="T:NationalInstruments.Controls.Meter`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.GaugeInt32">
            <inheritdoc cref="T:NationalInstruments.Controls.GaugeDouble"/><summary>Provides the <see cref="T:System.Int32"/> implementation for <see cref="T:NationalInstruments.Controls.Gauge`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.RadixNumericTextBoxInt32">
            <summary>Provides the <see cref="T:System.Int32"/> implementation for <see cref="T:NationalInstruments.Controls.RadixNumericTextBox`1" crefType="Unqualified"/>.</summary><remarks>
      The default data type for the radix numeric text box control is <see cref="T:System.Int32"/>.
      To change the data type, right-click the radix numeric text box on the Visual Studio Designer,
      select <format type="bold">Data Type</format>, then select a different data type.
    </remarks><lastupdated>6/5/2012 1:43:06 PM</lastupdated><updatedby>Measurement Studio</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.NumericTextBoxInt16">
            <inheritdoc cref="T:NationalInstruments.Controls.NumericTextBoxDouble"/><summary>Provides the <see cref="T:System.Int16"/> implementation for <see cref="T:NationalInstruments.Controls.NumericTextBox`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.SliderInt16">
            <inheritdoc cref="T:NationalInstruments.Controls.SliderDouble"/><summary>Provides the <see cref="T:System.Int16"/> implementation for <see cref="T:NationalInstruments.Controls.Slider`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.TankInt16">
            <inheritdoc cref="T:NationalInstruments.Controls.TankDouble"/><summary>Provides the <see cref="T:System.Int16"/> implementation for <see cref="T:NationalInstruments.Controls.Tank`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.KnobInt16">
            <inheritdoc cref="T:NationalInstruments.Controls.KnobDouble"/><summary>Provides the <see cref="T:System.Int16"/> implementation for <see cref="T:NationalInstruments.Controls.Knob`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.MeterInt16">
            <inheritdoc cref="T:NationalInstruments.Controls.MeterDouble"/><summary>Provides the <see cref="T:System.Int16"/> implementation for <see cref="T:NationalInstruments.Controls.Meter`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.GaugeInt16">
            <inheritdoc cref="T:NationalInstruments.Controls.GaugeDouble"/><summary>Provides the <see cref="T:System.Int16"/> implementation for <see cref="T:NationalInstruments.Controls.Gauge`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.RadixNumericTextBoxInt16">
            <inheritdoc cref="T:NationalInstruments.Controls.RadixNumericTextBoxInt32"/><summary>Provides the <see cref="T:System.Int16"/> implementation for <see cref="T:NationalInstruments.Controls.RadixNumericTextBox`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.NumericTextBoxInt8">
            <inheritdoc cref="T:NationalInstruments.Controls.NumericTextBoxDouble"/><summary>Provides the <see cref="T:System.SByte"/> implementation for <see cref="T:NationalInstruments.Controls.NumericTextBox`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.SliderInt8">
            <inheritdoc cref="T:NationalInstruments.Controls.SliderDouble"/><summary>Provides the <see cref="T:System.SByte"/> implementation for <see cref="T:NationalInstruments.Controls.Slider`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.TankInt8">
            <inheritdoc cref="T:NationalInstruments.Controls.TankDouble"/><summary>Provides the <see cref="T:System.SByte"/> implementation for <see cref="T:NationalInstruments.Controls.Tank`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.KnobInt8">
            <inheritdoc cref="T:NationalInstruments.Controls.KnobDouble"/><summary>Provides the <see cref="T:System.SByte"/> implementation for <see cref="T:NationalInstruments.Controls.Knob`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.MeterInt8">
            <inheritdoc cref="T:NationalInstruments.Controls.MeterDouble"/><summary>Provides the <see cref="T:System.SByte"/> implementation for <see cref="T:NationalInstruments.Controls.Meter`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.GaugeInt8">
            <inheritdoc cref="T:NationalInstruments.Controls.GaugeDouble"/><summary>Provides the <see cref="T:System.SByte"/> implementation for <see cref="T:NationalInstruments.Controls.Gauge`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.RadixNumericTextBoxInt8">
            <inheritdoc cref="T:NationalInstruments.Controls.RadixNumericTextBoxInt32"/><summary>Provides the <see cref="T:System.SByte"/> implementation for <see cref="T:NationalInstruments.Controls.RadixNumericTextBox`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.NumericTextBoxUInt64">
            <inheritdoc cref="T:NationalInstruments.Controls.NumericTextBoxDouble"/><summary>Provides the <see cref="T:System.UInt64"/> implementation for <see cref="T:NationalInstruments.Controls.NumericTextBox`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.SliderUInt64">
            <inheritdoc cref="T:NationalInstruments.Controls.SliderDouble"/><summary>Provides the <see cref="T:System.UInt64"/> implementation for <see cref="T:NationalInstruments.Controls.Slider`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.TankUInt64">
            <inheritdoc cref="T:NationalInstruments.Controls.TankDouble"/><summary>Provides the <see cref="T:System.UInt64"/> implementation for <see cref="T:NationalInstruments.Controls.Tank`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.KnobUInt64">
            <inheritdoc cref="T:NationalInstruments.Controls.KnobDouble"/><summary>Provides the <see cref="T:System.UInt64"/> implementation for <see cref="T:NationalInstruments.Controls.Knob`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.MeterUInt64">
            <inheritdoc cref="T:NationalInstruments.Controls.MeterDouble"/><summary>Provides the <see cref="T:System.UInt64"/> implementation for <see cref="T:NationalInstruments.Controls.Meter`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.GaugeUInt64">
            <inheritdoc cref="T:NationalInstruments.Controls.GaugeDouble"/><summary>Provides the <see cref="T:System.UInt64"/> implementation for <see cref="T:NationalInstruments.Controls.Gauge`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.RadixNumericTextBoxUInt64">
            <inheritdoc cref="T:NationalInstruments.Controls.RadixNumericTextBoxInt32"/><summary>Provides the <see cref="T:System.UInt64"/> implementation for <see cref="T:NationalInstruments.Controls.RadixNumericTextBox`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.NumericTextBoxUInt32">
            <inheritdoc cref="T:NationalInstruments.Controls.NumericTextBoxDouble"/><summary>Provides the <see cref="T:System.UInt32"/> implementation for <see cref="T:NationalInstruments.Controls.NumericTextBox`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.SliderUInt32">
            <inheritdoc cref="T:NationalInstruments.Controls.SliderDouble"/><summary>Provides the <see cref="T:System.UInt32"/> implementation for <see cref="T:NationalInstruments.Controls.Slider`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.TankUInt32">
            <inheritdoc cref="T:NationalInstruments.Controls.TankDouble"/><summary>Provides the <see cref="T:System.UInt32"/> implementation for <see cref="T:NationalInstruments.Controls.Tank`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.KnobUInt32">
            <inheritdoc cref="T:NationalInstruments.Controls.KnobDouble"/><summary>Provides the <see cref="T:System.UInt32"/> implementation for <see cref="T:NationalInstruments.Controls.Knob`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.MeterUInt32">
            <inheritdoc cref="T:NationalInstruments.Controls.MeterDouble"/><summary>Provides the <see cref="T:System.UInt32"/> implementation for <see cref="T:NationalInstruments.Controls.Meter`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.GaugeUInt32">
            <inheritdoc cref="T:NationalInstruments.Controls.GaugeDouble"/><summary>Provides the <see cref="T:System.UInt32"/> implementation for <see cref="T:NationalInstruments.Controls.Gauge`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.RadixNumericTextBoxUInt32">
            <inheritdoc cref="T:NationalInstruments.Controls.RadixNumericTextBoxInt32"/><summary>Provides the <see cref="T:System.UInt32"/> implementation for <see cref="T:NationalInstruments.Controls.RadixNumericTextBox`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.NumericTextBoxUInt16">
            <inheritdoc cref="T:NationalInstruments.Controls.NumericTextBoxDouble"/><summary>Provides the <see cref="T:System.UInt16"/> implementation for <see cref="T:NationalInstruments.Controls.NumericTextBox`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.SliderUInt16">
            <inheritdoc cref="T:NationalInstruments.Controls.SliderDouble"/><summary>Provides the <see cref="T:System.UInt16"/> implementation for <see cref="T:NationalInstruments.Controls.Slider`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.TankUInt16">
            <inheritdoc cref="T:NationalInstruments.Controls.TankDouble"/><summary>Provides the <see cref="T:System.UInt16"/> implementation for <see cref="T:NationalInstruments.Controls.Tank`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.KnobUInt16">
            <inheritdoc cref="T:NationalInstruments.Controls.KnobDouble"/><summary>Provides the <see cref="T:System.UInt16"/> implementation for <see cref="T:NationalInstruments.Controls.Knob`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.MeterUInt16">
            <inheritdoc cref="T:NationalInstruments.Controls.MeterDouble"/><summary>Provides the <see cref="T:System.UInt16"/> implementation for <see cref="T:NationalInstruments.Controls.Meter`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.GaugeUInt16">
            <inheritdoc cref="T:NationalInstruments.Controls.GaugeDouble"/><summary>Provides the <see cref="T:System.UInt16"/> implementation for <see cref="T:NationalInstruments.Controls.Gauge`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.RadixNumericTextBoxUInt16">
            <inheritdoc cref="T:NationalInstruments.Controls.RadixNumericTextBoxInt32"/><summary>Provides the <see cref="T:System.UInt16"/> implementation for <see cref="T:NationalInstruments.Controls.RadixNumericTextBox`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.NumericTextBoxUInt8">
            <inheritdoc cref="T:NationalInstruments.Controls.NumericTextBoxDouble"/><summary>Provides the <see cref="T:System.Byte"/> implementation for <see cref="T:NationalInstruments.Controls.NumericTextBox`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.SliderUInt8">
            <inheritdoc cref="T:NationalInstruments.Controls.SliderDouble"/><summary>Provides the <see cref="T:System.Byte"/> implementation for <see cref="T:NationalInstruments.Controls.Slider`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.TankUInt8">
            <inheritdoc cref="T:NationalInstruments.Controls.TankDouble"/><summary>Provides the <see cref="T:System.Byte"/> implementation for <see cref="T:NationalInstruments.Controls.Tank`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.KnobUInt8">
            <inheritdoc cref="T:NationalInstruments.Controls.KnobDouble"/><summary>Provides the <see cref="T:System.Byte"/> implementation for <see cref="T:NationalInstruments.Controls.Knob`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.MeterUInt8">
            <inheritdoc cref="T:NationalInstruments.Controls.MeterDouble"/><summary>Provides the <see cref="T:System.Byte"/> implementation for <see cref="T:NationalInstruments.Controls.Meter`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.GaugeUInt8">
            <inheritdoc cref="T:NationalInstruments.Controls.GaugeDouble"/><summary>Provides the <see cref="T:System.Byte"/> implementation for <see cref="T:NationalInstruments.Controls.Gauge`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.RadixNumericTextBoxUInt8">
            <inheritdoc cref="T:NationalInstruments.Controls.RadixNumericTextBoxInt32"/><summary>Provides the <see cref="T:System.Byte"/> implementation for <see cref="T:NationalInstruments.Controls.RadixNumericTextBox`1" crefType="Unqualified"/>.</summary><lastupdated>4/23/2012 2:55:03 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.NumericFillMode">
            <summary>Represents an algorithm used to control the extent of the fill on numeric controls.</summary>
            <threadsafety safety="unsafe"/>
            <lastupdated>2015-01-14 10:16:15 AM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.NumericFillMode.#ctor">
            <summary>Initializes a new instance of the <see cref="T:NationalInstruments.Controls.NumericFillMode"/> class.</summary>
            <lastupdated>2015-01-14 10:17:47 AM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.NumericFillMode.CreateToValueMode(System.Object)">
            <summary>
            Gets a mode that applies a fill from the current value of the control to the specified value.
            </summary>
            <param name="value">The target value from which to start the track fill.</param>
            <returns>
            A <see cref="T:NationalInstruments.Controls.NumericFillMode"/> object indicating that applies a fill from the current value of the control to <paramref name="value"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is <see langword="null"/>.</exception>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.FillMode"/> property to a fill to the value 3.
            <code lang="XAML">
            &lt;ni:TankDouble FillMode="ToValue: 3" /&gt;
            </code>
            </example>
            <lastupdated>2015-01-14 10:17:47 AM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.NumericFillMode.UpdateOpacityMask``2(NationalInstruments.Controls.Primitives.INumericPointerControl{``0,``1},NationalInstruments.Controls.Primitives.NumericPointerViewModel,System.Windows.Media.LinearGradientBrush)">
            <summary>
            Coerces the specified value with respect to the specified context.
            </summary>
            <typeparam name="TValue">The type of the data value.</typeparam>
            <typeparam name="TOffset">The type of data used for an offset by the control.</typeparam>
            <param name="context">An <see cref="T:NationalInstruments.Controls.Primitives.INumericPointerControl`2"/> implementation that specifies the context in
            which <see cref="M:NationalInstruments.Controls.NumericFillMode.UpdateOpacityMask``2(NationalInstruments.Controls.Primitives.INumericPointerControl{``0,``1},NationalInstruments.Controls.Primitives.NumericPointerViewModel,System.Windows.Media.LinearGradientBrush)"/> is called.</param>
            <param name="viewModel">The view model for the <paramref name="context"/>.</param>
            <param name="opacityMask">The value to coerce.</param>
            <exception cref="T:System.ArgumentNullException">
              <para><paramref name="context"/> is <see langword="null"/>.</para>
              <para>-or-</para>
              <para><paramref name="viewModel"/> is <see langword="null"/>.</para>
              <para>-or-</para>
              <para><paramref name="opacityMask"/> is <see langword="null"/>.</para>
            </exception>
            <lastupdated>4/10/2012 1:58:07 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.NumericFillMode.UpdateOpacityMaskCore``2(NationalInstruments.Controls.Primitives.INumericPointerControl{``0,``1},NationalInstruments.Controls.Primitives.NumericPointerViewModel,System.Windows.Media.LinearGradientBrush)">
            <inheritdoc cref="M:NationalInstruments.Controls.NumericFillMode.UpdateOpacityMask``2(NationalInstruments.Controls.Primitives.INumericPointerControl{``0,``1},NationalInstruments.Controls.Primitives.NumericPointerViewModel,System.Windows.Media.LinearGradientBrush)"/>
        </member>
        <member name="P:NationalInstruments.Controls.NumericFillMode.None">
            <summary>
            Gets a mode that applies no fill on the numeric track.
            </summary>
            <value>
            A <see cref="T:NationalInstruments.Controls.NumericFillMode"/> object indicating that no fill is applied.
            </value>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.FillMode"/> property to <see cref="P:NationalInstruments.Controls.NumericFillMode.None"/>.
            <code lang="XAML">
            &lt;ni:TankDouble FillMode="None" /&gt;
            </code>
            </example>
            <lastupdated>2015-01-14 10:17:47 AM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.NumericFillMode.ToMinimum">
            <summary>
            Gets a mode that applies a fill from the current value of the control to the minimum of the range.
            </summary>
            <value>
            A <see cref="T:NationalInstruments.Controls.NumericFillMode"/> object indicating that applies a fill from the current value of the control to the minimum of the range.
            </value>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.FillMode"/> property to <see cref="P:NationalInstruments.Controls.NumericFillMode.ToMinimum"/>.
            <code lang="XAML">
            &lt;ni:TankDouble FillMode="ToMinimum" /&gt;
            </code>
            </example>
            <lastupdated>2015-01-14 10:17:47 AM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.NumericFillMode.ToMaximum">
            <summary>
            Gets a mode that applies a fill from the current value of the control to the maximum of the range.
            </summary>
            <value>
            A <see cref="T:NationalInstruments.Controls.NumericFillMode"/> object indicating that applies a fill from the current value of the control to the maximum of the range.
            </value>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.Primitives.LinearNumericPointer`2.FillMode"/> property to <see cref="P:NationalInstruments.Controls.NumericFillMode.ToMaximum"/>.
            <code lang="XAML">
            &lt;ni:TankDouble FillMode="ToMaximum" /&gt;
            </code>
            </example>
            <lastupdated>2015-01-14 10:17:47 AM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.NumericFillMode.UnderlyingType">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.NumericFillMode.NoneImpl">
            <summary>Implements the None fill mode.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.NumericFillMode.OrientedImpl">
            <summary>Base class for fill modes needing to match the orientation of the target control.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.NumericFillMode.ExtremeImpl">
            <summary>Implements the To{Extreme} fill modes.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.NumericFillMode.ToValueImpl">
            <summary>Implements the ToValue fill mode.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.NumericFillMode.ToValueImpl.BindingState`1">
            <exclude/><summary>Maintains the opacity mask state for a raw data value in a scale.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.NumericPointerCoercionMode">
            <summary>
            Represents an algorithm used to coerce the value of a numeric pointer control.
            </summary>
            <remarks>
            You can derive from this class to create a custom coercion algorithm for members, such as a custom coercion mode for an
            <see cref="T:NationalInstruments.Controls.Primitives.INumericPointerControl`2"/>.
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>6/8/2012 2:28:36 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.NumericPointerCoercionMode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Controls.NumericPointerCoercionMode"/> class.
            </summary>
            <lastupdated>4/11/2012 5:13:47 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.NumericPointerCoercionMode.CreateToIntervalFromBaseMode(System.Object)">
            <summary>
            Gets a mode that coerces the value to the nearest <see cref="P:NationalInstruments.Controls.Primitives.INumericControl`2.Interval"/> multiple,
            starting at the specified base value.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="intervalBase"/> is <see langword="null"/>.
            </exception>
            <param name="intervalBase">
            The base value from which to start when coercing a value to the nearest <see cref="P:NationalInstruments.Controls.Primitives.INumericControl`2.Interval"/> multiple.
            </param>
            <returns>
            A mode that coerces the value to the nearest <see cref="P:NationalInstruments.Controls.Primitives.INumericControl`2.Interval"/>  multiple.
            </returns>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.Primitives.NumericPointer`2.CoercionMode"/> property to interval coercion starting from a base of 1.
            <code lang="XAML">
            &lt;ni:GaugeDouble CoercionMode="ToIntervalFromBase: 1" /&gt;
            </code>
            </example>
            <lastupdated>2012-07-03 12:27:47 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.NumericPointerCoercionMode.FromNumericCoercionMode(NationalInstruments.Controls.NumericCoercionMode)">
            <summary>
            Converts a <see cref="T:NationalInstruments.Controls.NumericCoercionMode"/> to an equivalent <see cref="T:NationalInstruments.Controls.NumericPointerCoercionMode"/>.
            </summary>
            <param name="mode">The <see cref="T:NationalInstruments.Controls.NumericCoercionMode"/> instance to use.</param>
            <returns>The equivalent <see cref="T:NationalInstruments.Controls.NumericPointerCoercionMode"/> for <paramref name="mode"/>.</returns>
            <lastupdated>4/11/2012 5:05:00 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.NumericPointerCoercionMode.op_Implicit(NationalInstruments.Controls.NumericCoercionMode)~NationalInstruments.Controls.NumericPointerCoercionMode">
            <inheritdoc cref="M:NationalInstruments.Controls.NumericPointerCoercionMode.FromNumericCoercionMode(NationalInstruments.Controls.NumericCoercionMode)"/>
        </member>
        <member name="M:NationalInstruments.Controls.NumericPointerCoercionMode.CoerceValue``2(NationalInstruments.Controls.Primitives.INumericPointerControl{``0,``1},``0)">
            <summary>
            Coerces the specified value with respect to the specified context.
            </summary>
            <typeparam name="TValue">The type of the data value.</typeparam>
            <typeparam name="TOffset">The type of the offset value.</typeparam>
            <param name="context">An <see cref="T:NationalInstruments.Controls.Primitives.INumericPointerControl`2"/>
             implementation that specifies the context in which <see cref="M:NationalInstruments.Controls.NumericPointerCoercionMode.CoerceValue``2(NationalInstruments.Controls.Primitives.INumericPointerControl{``0,``1},``0)"/>
             is called.</param>
            <param name="value">The value to coerce.</param>
            <returns>
            The result of coercing <paramref name="value"/> according to the mode's algorithm.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="context"/> is <see langword="null"/>.
            </exception>
            <lastupdated>4/11/2012 4:56:52 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.NumericPointerCoercionMode.CoerceValueCore``2(NationalInstruments.Controls.Primitives.INumericPointerControl{``0,``1},``0)">
            <inheritdoc cref="M:NationalInstruments.Controls.NumericPointerCoercionMode.CoerceValue``2(NationalInstruments.Controls.Primitives.INumericPointerControl{``0,``1},``0)"/>
        </member>
        <member name="M:NationalInstruments.Controls.NumericPointerCoercionMode.GetMultipleIncrementValue``2(NationalInstruments.Controls.Primitives.INumericPointerControl{``0,``1},``0,System.Int32)">
            <summary>
            Gets the value after increasing or decreasing by the specified multiple.
            </summary>
            <typeparam name="TValue">The type of the data value.</typeparam>
            <typeparam name="TOffset">A numeric data type capable of representing an offset. </typeparam>
            <param name="context">An <see cref="T:NationalInstruments.Controls.Primitives.INumericPointerControl`2"/>
            implementation that specifies the context in which <see cref="M:NationalInstruments.Controls.NumericPointerCoercionMode.GetMultipleIncrementValue``2(NationalInstruments.Controls.Primitives.INumericPointerControl{``0,``1},``0,System.Int32)"/> is called.</param>
            <param name="value">The value to adjust.</param>
            <param name="multiple">The multiple used to adjust value.</param>
            <returns>The new value to use.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="context"/> is <see langword="null"/>.
            </exception>
            <lastupdated>4/11/2012 5:09:43 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.NumericPointerCoercionMode.GetMultipleIncrementValueCore``2(NationalInstruments.Controls.Primitives.INumericPointerControl{``0,``1},``0,System.Int32)">
            <inheritdoc cref="M:NationalInstruments.Controls.NumericPointerCoercionMode.GetMultipleIncrementValue``2(NationalInstruments.Controls.Primitives.INumericPointerControl{``0,``1},``0,System.Int32)"/>
            <remarks>
            The default implementation increases or decreases <paramref name="value"/> by the specified multiple of <see cref="P:NationalInstruments.Controls.Primitives.INumericControl`2.Interval"/> and returns the coerced result.
            </remarks>
            <lastupdated>4/11/2012 5:13:12 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.NumericPointerCoercionMode.None">
            <summary>
            Gets a mode that applies no coercion, returning the given value unchanged.
            </summary>
            <value>
            A <see cref="T:NationalInstruments.Controls.NumericPointerCoercionMode"/> object indicating that no coercion is applied.
            </value>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.Primitives.NumericPointer`2.CoercionMode"/> property to <see cref="P:NationalInstruments.Controls.NumericPointerCoercionMode.None"/>.
            <code lang="XAML">
            &lt;ni:GaugeDouble CoercionMode="None" /&gt;
            </code>
            </example>
            <lastupdated>2012-07-03 12:27:47 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.NumericPointerCoercionMode.ToIntervalFromMinimum">
            <summary>
            Gets a mode that coerces the value to the nearest <see cref="P:NationalInstruments.Controls.Primitives.INumericControl`2.Interval"/> multiple,
            starting at the
            <see cref="P:NationalInstruments.Controls.Range`1.Minimum"/> value of
            <see cref="P:NationalInstruments.Controls.Primitives.NumericPointer`2.Range"/>.
            </summary>
            <value>
            A <see cref="T:NationalInstruments.Controls.NumericPointerCoercionMode"/> object that coerces values to discrete intervals.
            </value>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.Primitives.NumericPointer`2.CoercionMode"/> property to <see cref="P:NationalInstruments.Controls.NumericPointerCoercionMode.ToIntervalFromMinimum"/>.
            <code lang="XAML">
            &lt;ni:GaugeDouble CoercionMode="ToIntervalFromMinimum" /&gt;
            </code>
            </example>
            <lastupdated>2012-07-03 12:27:47 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.NumericPointerCoercionMode.ToDivisions">
            <summary>
            Gets a mode that coerces the value to the divisions visible on a control.
            </summary>
            <value>
            A <see cref="T:NationalInstruments.Controls.NumericPointerCoercionMode"/> object that coerces values to the divisions visible in a control.
            </value>
            <example>
            The following example demonstrates setting the <see cref="P:NationalInstruments.Controls.Primitives.NumericPointer`2.CoercionMode"/> property to <see cref="P:NationalInstruments.Controls.NumericPointerCoercionMode.ToDivisions"/>.
            <code lang="XAML">
            &lt;ni:GaugeDouble CoercionMode="ToDivisions" /&gt;
            </code>
            </example>
            <lastupdated>2012-07-03 12:27:47 PM</lastupdated>
            <updatedby>Paul Hansen</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.NumericPointerCoercionMode.RequiresDivisions">
            <summary>Gets a value indicating whether the coercion mode requires division values from the scale to calculate a result.</summary>
            <value>The default value is <see langword="false"/>.</value>
        </member>
        <member name="P:NationalInstruments.Controls.NumericPointerCoercionMode.UnderlyingType">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.NumericPointerCoercionMode.NumericCoercionModeProxy">
            <summary>Wrapper <see cref="T:NationalInstruments.Controls.NumericPointerCoercionMode"/> implementation for <see cref="T:NationalInstruments.Controls.NumericCoercionMode"/> coercion modes.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.NumericPointerCoercionMode.ToDivisionsImpl">
            <summary>Implementation of the ToDivisions coercion mode.</summary>
        </member>
        <member name="T:NationalInstruments.Controls.NumericPointerInteractionModes">
            <summary>
            Specifies how the numeric pointer controls respond to user input.
            </summary>
        </member>
        <member name="F:NationalInstruments.Controls.NumericPointerInteractionModes.ReadOnly">
            <summary>
            The control does not change value when keyboard or mouse input is detected.
            </summary>
        </member>
        <member name="F:NationalInstruments.Controls.NumericPointerInteractionModes.ArrowKeys">
            <summary>
            Keyboard arrow keys change the value of the control.
            </summary>
        </member>
        <member name="F:NationalInstruments.Controls.NumericPointerInteractionModes.Drag">
            <summary>
            The pointer can be dragged to a value.
            </summary>
        </member>
        <member name="F:NationalInstruments.Controls.NumericPointerInteractionModes.Snap">
            <summary>
            The face of the control can be clicked to move the pointer directly to a value.
            </summary>
        </member>
        <member name="F:NationalInstruments.Controls.NumericPointerInteractionModes.ScrollWheel">
            <summary>
            Scroll wheel input changes the value of the control.
            </summary>
        </member>
        <member name="F:NationalInstruments.Controls.NumericPointerInteractionModes.EditRange">
            <summary>
            The range can be edited at run time.
            </summary>
            <lastupdated>4/12/2012 3:32:29 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.NumericScale">
            <summary>
            Represents the scale on a numeric control.
            </summary>
            <remarks>To remove an old scale from an owner control, call <see cref="M:NationalInstruments.Controls.Primitives.INumericScale.CleanScale(System.Object)" crefType="Unqualified"/>.
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>4/11/2012 5:21:31 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.NumericScale.GetDataMapper(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.NumericScale.CreateDefaultPresenter(NationalInstruments.Controls.Primitives.ScaleHost)">
            <inheritdoc cref="M:NationalInstruments.Controls.Primitives.IScale.CreateDefaultPresenter(NationalInstruments.Controls.Primitives.ScaleHost)"/>
        </member>
        <member name="M:NationalInstruments.Controls.NumericScale.CreateDefaultRadialPresenter``3(NationalInstruments.Controls.Primitives.ScaleHost,``0)">
            <summary>Creates a default presenter for the scale in a radial numeric control.</summary>
            <typeparam name="TOwner">The type of the owner control.</typeparam>
            <typeparam name="TValue">The type of the numeric value the owner control presents.</typeparam>
            <typeparam name="TOffset">The type of data used for an offset by the owner control.</typeparam>
            <param name="host">The host where the presenter will be used.</param>
            <param name="owner">The owner control.</param>
            <returns>An <see cref="T:NationalInstruments.Controls.Primitives.IScalePresenter"/> that can display a visual representation for the scale.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.NumericScale.CreateDefaultLinearPresenter``3(NationalInstruments.Controls.Primitives.ScaleHost,``0)">
            <summary>Creates a default presenter for the scale in a linear numeric control.</summary>
            <typeparam name="TOwner">The type of the owner control.</typeparam>
            <typeparam name="TValue">The type of the numeric value the owner control presents.</typeparam>
            <typeparam name="TOffset">The type of data used for an offset by the owner control.</typeparam>
            <param name="host">The host where the presenter will be used.</param>
            <param name="owner">The owner control.</param>
            <returns>An <see cref="T:NationalInstruments.Controls.Primitives.IScalePresenter"/> that can display a visual representation for the scale.</returns>
        </member>
        <member name="M:NationalInstruments.Controls.NumericScale.OnDataMapperChanged(System.Object,NationalInstruments.Controls.Data.DataMapperChangedEventArgs)">
            <summary>
            Called when a data mapper created by the scale updates.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A  <see cref="T:NationalInstruments.Controls.Data.DataMapperChangedEventArgs"/> that contains event data.</param>
            <lastupdated>4/11/2012 5:24:01 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.NumericScale.CleanScale(System.Object)">
            <inheritdoc/>
            <lastupdated>12/14/2011 11:49:33 AM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.NumericScale.GetDivisions``1(System.Object)">
            <inheritdoc/>
            <lastupdated>12/14/2011 11:49:35 AM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.NumericScale.GetOwnerFromContext(System.Object)">
            <exclude/><summary>Gets the control owner from the specified context.</summary>
        </member>
        <member name="F:NationalInstruments.Controls.NumericScale.ScaleKindProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.NumericScale.ScaleKind'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.NumericScale.ScaleKind'/> dependency property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.NumericScale.DataMapperProxyProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.NumericScale.DataMapperProxy'/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.NumericScale.DataMapperProxy'/> attached property.
            </returns>
        </member>
        <member name="F:NationalInstruments.Controls.NumericScale.ScaleKindListenerProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.NumericScale.ScaleKindListener'/> attached property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.NumericScale.ScaleKindListener'/> attached property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.NumericScale.OnScaleKindChanged(NationalInstruments.Controls.RangeScaleKind,NationalInstruments.Controls.RangeScaleKind)">
            <summary>
            Called when the <see cref="P:NationalInstruments.Controls.NumericScale.ScaleKind"/> property changes.
            </summary>
            <param name="oldValue">
            Old value of the <see cref="P:NationalInstruments.Controls.NumericScale.ScaleKind"/> property.
            </param>
            <param name="newValue">
            New value of the <see cref="P:NationalInstruments.Controls.NumericScale.ScaleKind"/> property.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.NumericScale.GetDataMapperProxy(System.Windows.Controls.Control)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.NumericScale.DataMapperProxy"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.NumericScale.DataMapperProxy"/> property value for the element.
            </returns>
            <remarks>
            Gets the cached data mapper proxy for the given control.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.NumericScale.SetDataMapperProxy(System.Windows.Controls.Control,NationalInstruments.Controls.Data.IDataMapper)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.NumericScale.DataMapperProxy"/> attached property to a specified element.
            </summary>
            <remarks>
            Sets the cached data mapper proxy for the given control.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:NationalInstruments.Controls.Data.IDataMapper"/> value.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.NumericScale.GetScaleKindListener(System.Windows.Controls.Control)">
            <summary>
            Gets the value of the <see cref="P:NationalInstruments.Controls.NumericScale.ScaleKindListener"/> attached property for a specified element.
            </summary>
            <returns>
            The <see cref="P:NationalInstruments.Controls.NumericScale.ScaleKindListener"/> property value for the element.
            </returns>
            <remarks>
            Gets a property to listen to changes to <see cref="P:NationalInstruments.Controls.NumericScale.ScaleKind"/> from the context of the owning control.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element from which the property value is read.
            </param>
        </member>
        <member name="M:NationalInstruments.Controls.NumericScale.SetScaleKindListener(System.Windows.Controls.Control,NationalInstruments.Controls.RangeScaleKind)">
            <summary>
            Sets the value of the <see cref="P:NationalInstruments.Controls.NumericScale.ScaleKindListener"/> attached property to a specified element.
            </summary>
            <remarks>
            Sets a property to listen to changes to <see cref="P:NationalInstruments.Controls.NumericScale.ScaleKind"/> from the context of the owning control.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is <see langword="null"/>.
            </exception>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="value">
            The needed <see cref="T:NationalInstruments.Controls.RangeScaleKind"/> value.
            </param>
        </member>
        <member name="P:NationalInstruments.Controls.NumericScale.ScaleKind">
            <summary>
Gets or sets the minor divisions for the scale.
</summary><value>The minor divisions for the scale. The default value is <see cref="P:NationalInstruments.Controls.RangeScaleKind.Linear"/>.</value><exception cref="T:System.ArgumentException"><para><paramref name="value"/> cannot be <see langword="null"/>.
    </para></exception><lastupdated>4/11/2012 5:27:18 PM</lastupdated><updatedby>National Instruments</updatedby><approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.NumericScale.DataMapperListener">
            <summary>
            Gets or sets a weak event listener for the DataMapperChanged event.
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.NumericTextBoxInteractionModes">
            <summary>
            Specifies how the numeric text box controls respond to user input.
            </summary>
        </member>
        <member name="F:NationalInstruments.Controls.NumericTextBoxInteractionModes.ReadOnly">
            <summary>
            The control does not change value when keyboard or mouse input is detected.
            </summary>
        </member>
        <member name="F:NationalInstruments.Controls.NumericTextBoxInteractionModes.ArrowKeys">
            <summary>
            Keyboard up and down arrow keys change the value of the control.
            </summary>
        </member>
        <member name="F:NationalInstruments.Controls.NumericTextBoxInteractionModes.ScrollWheel">
            <summary>
            Scroll wheel input changes the value of the control.
            </summary>
        </member>
        <member name="F:NationalInstruments.Controls.NumericTextBoxInteractionModes.ButtonClicks">
            <summary>
            The increment and decrement buttons change the value of the control.
            </summary>
        </member>
        <member name="F:NationalInstruments.Controls.NumericTextBoxInteractionModes.TextInput">
            <summary>
            Keyboard text entry changes the value of the control.
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.PrimaryNumericScale">
            <summary>
            Represents the scale on a numeric control that can have a <see cref="T:NationalInstruments.Controls.DependentNumericScale"/>.
            </summary>
            <remarks>
            You must use <see cref="T:NationalInstruments.Controls.DependentNumericScale"/>
             in a control with a primary and a secondary scale, as <see cref="T:NationalInstruments.Controls.DependentNumericScale"/>
             must exist as a property of a <see cref="T:NationalInstruments.Controls.PrimaryNumericScale"/>.
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>6/8/2012 2:40:32 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.PrimaryNumericScale.CreateDefaultLinearPresenter``3(NationalInstruments.Controls.Primitives.ScaleHost,``0)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.PrimaryNumericScale.CreateDefaultRadialPresenter``3(NationalInstruments.Controls.Primitives.ScaleHost,``0)">
            <inheritdoc/>
        </member>
        <member name="F:NationalInstruments.Controls.PrimaryNumericScale.DependentScaleProperty">
            <summary>
            Identifies the <see cref='P:NationalInstruments.Controls.PrimaryNumericScale.DependentScale'/> dependency property.
            </summary>
            <returns>
            The identifier for the <see cref='P:NationalInstruments.Controls.PrimaryNumericScale.DependentScale'/> dependency property.
            </returns>
        </member>
        <member name="M:NationalInstruments.Controls.PrimaryNumericScale.OnDependentScaleChanged(NationalInstruments.Controls.DependentNumericScale,NationalInstruments.Controls.DependentNumericScale)">
            <summary>
            Called when the <see cref="P:NationalInstruments.Controls.PrimaryNumericScale.DependentScale"/> property changes.
            </summary>
            <param name="oldValue">
            Old value of the <see cref="P:NationalInstruments.Controls.PrimaryNumericScale.DependentScale"/> property.
            </param>
            <param name="newValue">
            New value of the <see cref="P:NationalInstruments.Controls.PrimaryNumericScale.DependentScale"/> property.
            </param>
        </member>
        <member name="P:NationalInstruments.Controls.PrimaryNumericScale.DependentScale">
            <summary>Gets or sets the dependent scale associated with this scale.</summary><value>The default value is a <see langword="null"/>.</value><remarks>
Assign a scale to this to have a <see cref="T:NationalInstruments.Controls.Primitives.NumericPointer`2"/>
that shows two scales.
</remarks><lastupdated>6/8/2012 2:42:35 PM</lastupdated><updatedby>Aaron Cederquist</updatedby><approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.PrimaryNumericScale.PrimaryNumericScaleHost">
            <exclude/><summary>Initializes the presenter for the primary and dependent scales.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.PrimaryNumericScale.PrimaryNumericScaleHost.#ctor(NationalInstruments.Controls.Primitives.IScalePresenter)">
            <summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="M:NationalInstruments.Controls.PrimaryNumericScale.PrimaryNumericScaleHost.IsCompatibleCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.PrimaryNumericScale.PrimaryNumericScaleHost.GetDesiredVisibility(NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.PrimaryNumericScale.PrimaryNumericScaleHost.InitializeCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="M:NationalInstruments.Controls.PrimaryNumericScale.PrimaryNumericScaleHost.UninitializeCore(NationalInstruments.Controls.Primitives.ScaleHost,NationalInstruments.Controls.Primitives.IScale)">
            <inheritdoc/>
        </member>
        <member name="T:NationalInstruments.Controls.ScaleToScaleMap">
            <summary>
            Represents the mapping between a <see cref="T:NationalInstruments.Controls.PrimaryNumericScale"/>
            and a <see cref="T:NationalInstruments.Controls.DependentNumericScale"/>.
            </summary>
            <remarks>
            You can use this class to tie a <see cref="T:NationalInstruments.Controls.PrimaryNumericScale"/>
            and a <see cref="T:NationalInstruments.Controls.DependentNumericScale"/>
            together using mapping, such as miles-per-hour and kilometers-per-hour on a car speedometer or Celsius 
            and Kelvin representations on a thermometer.
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>6/8/2012 2:43:43 PM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.ScaleToScaleMap.CreateConstantFactor(System.String)">
            <summary>
            Creates a mapping between two scales that differ by a constant factor.
            </summary>
            <remarks>
            For example, you can use scales to display kilometers-per-hour and miles-per-hour on a vehicle speedometer.
            </remarks>
            <param name="factorText">
            The numeric factor, converted to the underlying data types of the scales being mapped.
            </param>
            <returns>
            The mapping between two scales that differ by a constant factor.
            </returns>
            <lastupdated>4/12/2012 4:11:51 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.ScaleToScaleMap.CreateDependentMapper``1(NationalInstruments.Controls.Data.IRangeDataMapper{``0},System.Boolean)">
            <summary>
            Creates a dependent mapper based on the primary mapper provided.
            </summary>
            <param name="primaryMapper">
            The 
            <see cref="T:NationalInstruments.Controls.Data.IRangeDataMapper`1"/> used by the primary scale.
            </param>
            <param name="isPrimaryInverted">
            Defines the inversion state of the primary scale.
            </param>
            <typeparam name="TData">
            The data type used on the scales and mappers.
            </typeparam>
            <returns>
            An <see cref="T:NationalInstruments.Controls.Data.IRangeDataMapper`1"/> object that is dependent on the <paramref name="primaryMapper"/>.
            </returns>
            <lastupdated>4/12/2012 4:15:14 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.ScaleToScaleMap.PrimaryToDependent``1(NationalInstruments.Controls.Data.IRangeDataMapper{``0},``0)">
            <summary>
            Maps a value from the primary scale to the dependent scale.
            </summary>
            <param name="primaryMapper">
            The <see cref="T:NationalInstruments.Controls.Data.IRangeDataMapper`1"/> for the <see cref="T:NationalInstruments.Controls.PrimaryNumericScale"/>.
            </param>
            <param name="value">
            The value to be mapped.
            </param>
            <typeparam name="TData">
            The data type used by the scales and mapper.
            </typeparam>
            <returns>
            The <paramref name="value"/> mapped to the <see cref="T:NationalInstruments.Controls.DependentNumericScale"/>.
            </returns>
            <lastupdated>4/12/2012 4:19:41 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.ScaleToScaleMap.DependentToPrimary``1(NationalInstruments.Controls.Data.IRangeDataMapper{``0},``0)">
            <summary>
            Maps a value from the dependent scale to the primary scale.
            </summary>
            <param name="primaryMapper">
            The <see cref="T:NationalInstruments.Controls.Data.IRangeDataMapper`1"/> for the 
            <see cref="T:NationalInstruments.Controls.PrimaryNumericScale"/>.
            </param>
            <param name="value">
            The value to be mapped.
            </param>
            <typeparam name="TData">
            The data type used by the scales and mapper.
            </typeparam>
            <returns>
            The <paramref name="value"/> mapped to the <see cref="T:NationalInstruments.Controls.PrimaryNumericScale"/>.
            </returns>
            <lastupdated>4/12/2012 4:18:29 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.ScaleToScaleMap.CreateNewMapperOfSameType``1(NationalInstruments.Controls.Data.IRangeDataMapper{``0})">
            <summary>
            Creates a new mapper of the same type as the given, primary mapper.
            </summary>
            <typeparam name="TData">Type of the data in the scale.</typeparam>
            <param name="primaryMapper">The primary scale whose type will be replicated.</param>
            <returns>A new mapper of the same type as <paramref name="primaryMapper"/>.</returns>
            <lastupdated>4/12/2012 4:16:39 PM</lastupdated>
            <updatedby>National Instruments</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Controls.ScaleToScaleMap.UnderlyingType">
            <inheritdoc/>
            <lastupdated>12/14/2011 11:51:34 AM</lastupdated>
            <updatedby>Aaron Cederquist</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Controls.TimeStampTextBoxDateTime">
            <summary>Represents a TimeStampTextBox implementation of type DateTime.</summary>
            <lastupdated>2/29/12 8:36:19 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.TimeStampTextBoxDateTime.#ctor">
            <summary>Initializes a new instance of the TimeStampTextBoxDateTime class.</summary>
            <lastupdated>2012-07-12 1:47:10 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.TimeStampTextBoxDateTime.OnApplyTemplate">
            <inheritdoc/>
            <lastupdated>2/29/12 8:38:08 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.TimeStampTextBoxDateTime.HandleValueInputPreviewLostKeyboardFocus">
            <inheritdoc />
        </member>
        <member name="M:NationalInstruments.Controls.TimeStampTextBoxDateTime.HandleValueInputPreviewKeyDown(System.Windows.Input.Key)">
            <inheritdoc />
        </member>
        <member name="M:NationalInstruments.Controls.TimeStampTextBoxDateTime.HandleValueInputSelectionChanged">
            <inheritdoc />
        </member>
        <member name="M:NationalInstruments.Controls.TimeStampTextBoxDateTime.HandleValueInputKeyDown(System.Windows.Input.Key)">
            <inheritdoc />
        </member>
        <member name="M:NationalInstruments.Controls.TimeStampTextBoxDateTime.HandleValueInputPreviewMouseDown">
            <inheritdoc />
        </member>
        <member name="M:NationalInstruments.Controls.TimeStampTextBoxDateTime.HandleValueInputKeyboardLostFocus">
            <inheritdoc />
        </member>
        <member name="M:NationalInstruments.Controls.TimeStampTextBoxDateTime.HandleValueInputCommitting(System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:NationalInstruments.Controls.TimeStampTextBoxDateTime.GetDisplayValue(System.DateTime,System.DateTimeKind)">
            <inheritdoc />
        </member>
        <member name="M:NationalInstruments.Controls.TimeStampTextBoxDateTime.OnDisplayedValueChanged">
            <inheritdoc />
        </member>
        <member name="M:NationalInstruments.Controls.TimeStampTextBoxDateTime.OnValueFormatterChanged(NationalInstruments.Controls.Primitives.TimeValueFormatter,NationalInstruments.Controls.Primitives.TimeValueFormatter)">
            <inheritdoc />
        </member>
        <member name="T:NationalInstruments.Controls.TimeStampTextBoxInteractionModes">
            <summary>
            Specifies how the time stamp text box controls respond to user input.
            </summary>
        </member>
        <member name="F:NationalInstruments.Controls.TimeStampTextBoxInteractionModes.ReadOnly">
            <summary>
            The control does not change value when keyboard or mouse input is detected.
            </summary>
        </member>
        <member name="F:NationalInstruments.Controls.TimeStampTextBoxInteractionModes.ArrowKeys">
            <summary>
            Keyboard up and down arrow keys change the value of the control.
            </summary>
        </member>
        <member name="F:NationalInstruments.Controls.TimeStampTextBoxInteractionModes.ScrollWheel">
            <summary>
            Scroll wheel input changes the value of the control.
            </summary>
        </member>
        <member name="F:NationalInstruments.Controls.TimeStampTextBoxInteractionModes.ButtonClicks">
            <summary>
            The increment and decrement buttons change the value of the control.
            </summary>
        </member>
        <member name="F:NationalInstruments.Controls.TimeStampTextBoxInteractionModes.TextInput">
            <summary>
            Keyboard text entry changes the value of the control.
            </summary>
        </member>
        <member name="F:NationalInstruments.Controls.TimeStampTextBoxInteractionModes.CalendarButton">
            <summary>
            Calendar button available for selection.
            </summary>
        </member>
        <member name="T:NationalInstruments.Controls.TimeStampTextBoxPrecisionDateTime">
            <summary>Represents a TimeStampTextBox implementation of type PrecisionDateTime.</summary>
            <lastupdated>2/29/12 8:36:29 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.TimeStampTextBoxPrecisionDateTime.#ctor">
            <summary>Initializes a new instance of the TimeStampTextBoxPrecisionDateTime class.</summary>
            <lastupdated>2012-07-12 1:47:01 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.TimeStampTextBoxPrecisionDateTime.OnApplyTemplate">
            <inheritdoc/>
            <lastupdated>2012-07-12 1:45:27 PM</lastupdated>
            <updatedby>Jeff Loveless</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Controls.TimeStampTextBoxPrecisionDateTime.HandleValueInputPreviewLostKeyboardFocus">
            <inheritdoc />
        </member>
        <member name="M:NationalInstruments.Controls.TimeStampTextBoxPrecisionDateTime.HandleValueInputPreviewKeyDown(System.Windows.Input.Key)">
            <inheritdoc />
        </member>
        <member name="M:NationalInstruments.Controls.TimeStampTextBoxPrecisionDateTime.HandleValueInputSelectionChanged">
            <inheritdoc />
        </member>
        <member name="M:NationalInstruments.Controls.TimeStampTextBoxPrecisionDateTime.HandleValueInputKeyDown(System.Windows.Input.Key)">
            <inheritdoc />
        </member>
        <member name="M:NationalInstruments.Controls.TimeStampTextBoxPrecisionDateTime.HandleValueInputPreviewMouseDown">
            <inheritdoc />
        </member>
        <member name="M:NationalInstruments.Controls.TimeStampTextBoxPrecisionDateTime.HandleValueInputKeyboardLostFocus">
            <inheritdoc />
        </member>
        <member name="M:NationalInstruments.Controls.TimeStampTextBoxPrecisionDateTime.HandleValueInputCommitting(NationalInstruments.PrecisionDateTime)">
            <inheritdoc />
        </member>
        <member name="M:NationalInstruments.Controls.TimeStampTextBoxPrecisionDateTime.GetDisplayValue(NationalInstruments.PrecisionDateTime,System.DateTimeKind)">
            <inheritdoc />
        </member>
        <member name="M:NationalInstruments.Controls.TimeStampTextBoxPrecisionDateTime.OnDisplayedValueChanged">
            <inheritdoc />
        </member>
        <member name="M:NationalInstruments.Controls.TimeStampTextBoxPrecisionDateTime.OnValueFormatterChanged(NationalInstruments.Controls.Primitives.TimeValueFormatter,NationalInstruments.Controls.Primitives.TimeValueFormatter)">
            <inheritdoc />
        </member>
    </members>
</doc>
